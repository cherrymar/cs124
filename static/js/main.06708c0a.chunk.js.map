{"version":3,"sources":["components/OurButton.js","components/AutoResizeTextArea.js","components/StarsRating.js","components/Tasks/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/Tabs/Tab.js","components/Tabs/TabList.js","components/Design.js","components/Tasks/TaskItem.js","components/Tasks/TaskList.js","components/Tasks/TasksSortedList.js","components/CustomDropdown.js","components/MultiList/MenuItem.js","components/MultiList/BackButton.js","components/MultiList/SelectListDesktop.js","components/MultiList/SelectListMobile.js","TaskDetailView.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["CustomButtonRoot","styled","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","props","ButtonUnstyled","component","StyledTextAreaAutosize","TextareaAutosize","prop","completed","AutoResizeTextArea","useStyles","makeStyles","theme","root","margin","marginTop","spacing","emptyStar","color","StarsRating","classes","className","Rating","value","defaultValue","max","size","emptyIcon","fontSize","onChange","SubmitButtonContainer","div","Container","NewTask","useState","taskDescription","setTaskDescription","taskPriority","setTaskPriority","handleSubmit","onAddTask","placeholder","event","target","onKeyDown","key","name","variant","onClick","Backdrop","Modal","ButtonContainer","Alert","children","cancelText","onClose","OKText","onOK","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","map","child","tab","onTabChange","sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","CheckBox","input","TaskItem","type","checked","onTaskFieldChanged","id","toString","description","priority","IconButton","onDeleteTask","sx","padding","TaskList","selectedId","setSelectedId","data","a","onRowClick","selected","TasksSortedList","handleDeleteTask","handleTaskFieldChanged","Text","CustomDropdown","React","sortView","setSortView","DropdownButton","title","sortByOptions","Object","keys","option","Dropdown","Item","view","onSelectView","BackButton","onSetOnMenuView","AddContainer","CustomButton","SelectListMobile","taskListName","setNewTaskList","generateUniqueID","onHandleAddTaskList","onSetListName","handleClick","listId","onSetListId","tasksLists","index","SUBCOLLECTION","COLLECTION","Header","Body","Title","TaskDetailView","tasksQuery","filterView","setFilterView","hasCompleted","db","collection","doc","orderBy","useCollection","allTasksValue","allTasksLoading","taskId","delete","field","update","where","get","forEach","docs","filter","length","listName","set","dateCreated","firebase","firestore","Timestamp","now","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ContentContainer","DestkopContainer","ListContainer","App","setListId","setListName","onMenuView","setOnMenuView","isMobile","useMediaQuery","maxWidth","FamilyRestroomOutlined","taskListQuery","allTaskListsValue","allTaskListsLoading","taskListData","handleAddTaskList","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAIMA,EAAmBC,YAAO,SAAPA,CAAH,stBAiBhBC,IAAsBC,OAItBD,IAAsBE,aAKtBF,IAAsBG,UAQb,SAASC,EAAUC,GAChC,OAAO,cAACC,EAAA,EAAD,2BAAoBD,GAApB,IAA2BE,UAAWT,K,eClCzCU,EAAyBT,YAAOU,IAAPV,CAAH,oSAGjB,SAAAW,GAAI,MAAuB,SAAnBA,EAAKC,UAAuB,UAAY,eAe5C,SAASC,EAAmBP,GAC1C,OAAO,cAACG,EAAD,eAA4BH,I,4CCpB9BQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAM,CACFC,OAAQ,SACR,YAAa,CACbC,UAAWH,EAAMI,QAAQ,KAG7BC,UAAW,CACPC,MAAO,YAsBIC,EAjBK,SAACjB,GACjB,IAAMkB,EAAUV,IAChB,OACI,qBAAKW,UAAWD,EAAQP,KAAxB,SACA,cAACS,EAAA,EAAD,CACI,aAAW,kBACXC,MAAOrB,EAAMqB,MACbC,aAActB,EAAMsB,aACpBC,IAAK,EACLC,KAAK,QACLC,UAAW,cAAC,IAAD,CAAgBC,SAAS,UAAUP,UAAWD,EAAQH,YAEjEY,SAAU3B,EAAM2B,cCftBC,EAAwBlC,IAAOmC,IAAV,uHAOrBC,EAAYpC,IAAOmC,IAAV,qKA+DAE,I,MAAAA,EArDf,SAAiB/B,GACf,MAA8CgC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAGA,SAASC,IACPrC,EAAMsC,UAAUL,EAAiBE,GACjCD,EAAmB,IACnBE,EAAgB,GASlB,OACE,mCACE,eAACN,EAAD,WACE,cAACvB,EAAD,CACED,UAAW,QACXiC,YAAY,WACZlB,MAAOY,EACPN,SAAU,SAAAa,GAAK,OAAIN,EAAmBM,EAAMC,OAAOpB,QACnDqB,UAdc,SAACF,GACH,UAAdA,EAAMG,KACRN,OAeE,eAACT,EAAD,WACE,cAAC,EAAD,CACEgB,KAAK,mBACLtB,aAAc,EACdD,MAAOc,EACPR,SAAU,SAACa,EAAOnB,GAAR,OAAkBe,EAAgBf,IAE5CE,IAAK,EACLC,KAAK,UAGP,cAACzB,EAAD,CACEoB,UAAU,eACVrB,SAA4B,KAAlBmC,EACVY,QAAQ,YACRC,QAAST,EAJX,0BC9DJU,EAAWrD,IAAOmC,IAAV,6MAYRmB,EAAQtD,IAAOmC,IAAV,4XAkBLoB,EAAkBvD,IAAOmC,IAAV,iJA+BNqB,I,IAAAA,EAtBf,SAAelD,GACX,OACA,cAAC+C,EAAD,UACI,eAACC,EAAD,WACKhD,EAAMmD,SACH,eAACF,EAAD,WACI,cAAClD,EAAD,CACI,aAAYC,EAAMoD,WAAapD,EAAMoD,WAAa,SAClDN,QAAS9C,EAAMqD,QAFnB,SAGKrD,EAAMoD,WAAapD,EAAMoD,WAAa,WAE3C,cAACrD,EAAD,CACI,aAAaC,EAAMsD,OAAStD,EAAMsD,OAAS,KAC3CR,QAAS9C,EAAMuD,KAFnB,SAGKvD,EAAMsD,OAAStD,EAAMsD,OAAS,gBCpDjDxB,EAAYpC,IAAOmC,IAAV,yIAQT2B,EAAY9D,IAAOmC,IAAV,qGAoCA4B,MA5Bf,SAAkCzD,GAChC,MAAkCgC,oBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAYC,GACnBF,EAAaE,GAQf,OACE,mCACE,eAAC,EAAD,WACE,cAAC9D,EAAD,CAAW,aAAW,6BAA6BD,SAAUE,EAAMF,SAAUgD,QAAS,kBAAMc,GAAY,IAAxG,8BACCF,GACC,cAAC,EAAD,CAAOL,QAAS,kBAAMO,GAAY,IAAQL,KAAM,kBATtDvD,EAAM8D,iCACNF,GAAY,IAQiER,WAAW,SAASE,OAAO,SAAlG,SACE,cAACE,EAAD,2E,OCzCL,SAASO,EAAI/D,GAChB,IAAMgE,EAAa,CAAC,iBAMpB,OAJIhE,EAAMiE,YAAcjE,EAAMkE,OAC1BF,EAAWG,KAAK,mBAIhB,oBAAIhD,UAAW6C,EAAWI,KAAK,KAAMtB,QAAS,kBAAM9C,EAAMqE,WAAWrE,EAAMkE,QAA3E,SACSlE,EAAMkE,QCiBRI,I,IAAAA,EAzBf,SAAiBtE,GACb,MAAkCgC,mBAAS,OAA3C,mBAAOiC,EAAP,KAAkBM,EAAlB,KAOA,OACI,sBAAKpD,UAAU,OAAf,UACI,oBAAIA,UAAU,WAAd,SAEQnB,EAAMmD,SAASqB,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACAP,MAAOO,EAAM9B,IACbsB,UAAWA,EACXI,WAAY,kBAbXK,EAa6BD,EAAM9B,IAZpD3C,EAAM2E,YAAYD,QAClBH,EAAaG,GAFjB,IAAqBA,IAUSD,EAAM9B,UAO3B3C,EAAMmD,SAASqB,KAAI,SAACC,GAAD,OAAWR,IAAcQ,EAAM9B,KAAO8B,S,8BCvBhEG,GAEO,QAFPA,GAGO,QAHPA,GAIM,QAJNA,GAKM,SALNA,GAMO,SANPA,GAOO,SAGAC,GAAU,CACnBC,QAAQ,eAAD,OAVE,QAUF,KACPC,QAAQ,eAAD,OAAiBH,GAAjB,KACPI,QAAQ,eAAD,OAAiBJ,GAAjB,KACPK,OAAO,eAAD,OAAiBL,GAAjB,KACNM,OAAO,eAAD,OAAiBN,GAAjB,KACNO,QAAQ,eAAD,OAAiBP,GAAjB,KACPQ,QAAQ,eAAD,OAAiBR,GAAjB,MCFL9C,GAAYpC,IAAOmC,IAAV,6IAQTwD,GAAW3F,IAAO4F,MAAV,gWACHT,GAAQC,QAMRD,GAAQK,OAMRL,GAAQO,SA2CJG,I,GAAAA,GA/Bf,SAAkBvF,GAChB,OACE,mCACI,eAAC,GAAD,WACI,cAACqF,GAAD,CACI,aAAmB,0BACnBG,KAAK,WACLC,SAA2B,IAAlBzF,EAAMM,UACfqB,SAAU,SAAAa,GAAK,OAAIxC,EAAM0F,mBAAmB1F,EAAM2F,GAAI,YAAanD,EAAMC,OAAOgD,YACpF,cAAClF,EAAD,CACED,UAAWN,EAAMM,UAAUsF,WAC3BD,GAAI3F,EAAM2F,GACVpD,YAAavC,EAAM6F,YACnBvE,aAActB,EAAM6F,YACpBlE,SAAU,SAAAa,GAAK,OAAIxC,EAAM0F,mBAAmB1F,EAAM2F,GAAI,cAAenD,EAAMC,OAAOpB,UAElF,cAAC,EAAD,CACEA,MAAOrB,EAAM8F,SACbnE,SAAU,SAACa,EAAOnB,GAAR,OAAkBrB,EAAM0F,mBAAmB1F,EAAM2F,GAAI,WAAYtE,IAC3EE,IAAK,EACLC,KAAK,UAET,cAACuE,EAAA,EAAD,CAAY,aAAW,cAAcvE,KAAK,QAAQsB,QAAS,kBAAM9C,EAAMgG,aAAahG,EAAM2F,KAAKM,GAAI,CAACC,QAAS,GAA7G,SACI,cAAC,KAAD,CAAYxE,SAAS,QAAQuE,GAAI,CAACjF,MAAO,uBClEnDc,GAAYpC,IAAOmC,IAAV,sHA2BAsE,I,GAAAA,GAnBf,SAAkBnG,GAChB,MAAoCgC,mBAAS,MAA7C,mBAAOoE,EAAP,KAAmBC,EAAnB,KAEA,OACE,cAAC,GAAD,UACGrG,EAAMsG,KAAK9B,KAAI,SAAA+B,GAAC,OACjB,cAAC,GAAD,aACEC,WAAY,SAACb,GAAD,OACRU,EAAcV,IACdD,mBAAoB1F,EAAM0F,mBAC9BM,aAAchG,EAAMgG,aACpBS,SAAUF,EAAEZ,KAAOS,GAEfG,GADCA,EAAEZ,UCrBT7D,GAAYpC,IAAOmC,IAAV,+CAkBA6E,I,MAAAA,GAdf,SAAyB1G,GACrB,OACA,mCACI,cAAC,GAAD,UACI,cAAC,GAAD,CACIsG,KAAMtG,EAAMsG,KACZN,aAAchG,EAAM2G,iBACpBjB,mBAAoB1F,EAAM4G,8B,4BCHpC9E,I,OAAYpC,IAAOmC,IAAV,+EAKTgF,GAAOnH,IAAOmC,IAAV,iKACCgD,GAAQC,QAIRD,GAAQK,OAIRL,GAAQO,SAMJ,SAAS0B,GAAe9G,GACrC,MAAgC+G,IAAM/E,SAAS,eAA/C,mBAAOgF,EAAP,KAAiBC,EAAjB,KAOA,OACE,eAAC,GAAD,WACA,cAACJ,GAAD,sBACA,cAACK,GAAA,EAAD,CAAgBvB,GAAG,wBAAwBwB,MAAOnH,EAAMoH,cAAcJ,GAAtE,SAEIK,OAAOC,KAAKtH,EAAMoH,eAAe5C,KAAI,SAAC+C,GAAD,OACnC,cAACC,GAAA,EAASC,KAAV,CACE,aAAYzH,EAAMoH,cAAcG,GAEhCpG,UAAU,iBACV2B,QAAS,SAACN,GAAD,OAfiBkF,EAeqBH,EAffI,EAeuB3H,EAAM2H,aAdrEV,EAAYS,QACZC,EAAaD,GAFa,IAAQA,EAAMC,GAWlC,SAMG3H,EAAMoH,cAAcG,IAJhB,kBAAoBA,W,+BC1CnB7H,IAAOmC,IAAV,gCCcf,IAAMC,GAAYpC,IAAOmC,IAAV,oRAsDE+F,I,kBAAAA,GAzCjB,SAAoB5H,GAEhB,OACE,mCACE,cAAC,GAAD,UACE,cAAC+F,EAAA,EAAD,CAAY,aAAY/F,EAAMkE,MAAO1C,KAAK,QAAQsB,QAAS,kBAAM9C,EAAM6H,iBAAgB,IAAO5B,GAAI,CAACC,QAAS,GAA5G,SACE,cAAC,KAAD,CAAqBxE,SAAS,QAAQuE,GAAI,CAACjF,MAAO,sBCtBzCtB,IAAOmC,IAAV,geACFgD,GAAQC,QAKRD,GAAQK,OAKRL,GAAQO,SAgBN1F,IAAOmC,IAAV,iMASMnC,YAAOK,EAAPL,CAAH,8CCrClB,IAAMoI,GAAepI,IAAOmC,IAAV,0dACFgD,GAAQC,QAKRD,GAAQK,OAKRL,GAAQO,SAelBtD,GAAYpC,IAAOmC,IAAV,kGAMTkG,GAAerI,YAAOK,EAAPL,CAAH,8CAsBH,SAASsI,GAAiBhI,GACrC,MAAuCgC,mBAAS,IAAhD,mBAAOiG,EAAP,KAAqBC,EAArB,KAGA,SAAS7F,IACP,IAAIsD,EAAKwC,cACTnI,EAAMoI,oBAAoBH,EAActC,GACxC3F,EAAMqI,cAAcJ,GACpBC,EAAe,IACfI,EAAY3C,GAId,SAAS2C,EAAYC,EAAQ3F,GAC3B5C,EAAMqI,cAAczF,GACpB5C,EAAM6H,iBAAgB,GACtB7H,EAAMwI,YAAYD,GAStB,OACE,mCACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,cAAChI,EAAD,CACAD,UAAW,QACXiC,YAAY,gBACZlB,MAAO4G,EACPtG,SAAU,SAAAa,GAAK,OAAI0F,EAAe1F,EAAMC,OAAOpB,QAC/CqB,UAfU,SAACF,GACH,UAAdA,EAAMG,KACNN,OAeM,cAACtC,EAAD,CACIoB,UAAU,eACVrB,SAAyB,KAAfmI,EACVpF,QAAQ,YACRC,QAAS,kBAAMT,KAJnB,oBAUIrC,EAAMyI,WAAWjE,KAAI,SAACnD,EAAOqH,GAAR,OACjB,cAAC,GAAD,CACI5F,QAAS,kBAAMwF,EAAYjH,EAAMsE,GAAItE,EAAMuB,OAD/C,SAIGvB,EAAMuB,MAFAvB,EAAMsE,Y,gDC/FjCgD,GAAgB,kBAChBC,GAAa,wBAEbC,GAASnJ,IAAOmC,IAAV,0IAQNiH,GAAOpJ,IAAOmC,IAAV,8VACCgD,GAAQC,QAKRD,GAAQK,OAKRL,GAAQO,SAiBb2D,GAAQrJ,IAAOmC,IAAV,6OACAgD,GAAQC,QAIRD,GAAQK,OAILL,GAAQO,SAQP,SAAS4D,GAAehJ,GACrC,IAIIiJ,EAJJ,EAAgCjH,mBAAS,eAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KACA,EAAoCjF,mBAAS,eAA7C,mBAAOkH,EAAP,KAAmBC,EAAnB,KACIC,GAAe,EAIjBH,EADe,aAAbjC,EACWhH,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAea,QAAQxC,EAAU,QAE9FhH,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAea,QAAQxC,GAEnG,MAAwDyC,YAAcR,GAAtE,mBAAOS,EAAP,KAAsBC,EAAtB,KAEIrD,GAFJ,KAEW,IAcX,SAASK,EAAiBiD,GACxB5J,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAeY,IAAIK,GAAQC,SAe1F,SAASjD,EAAuBgD,EAAQE,EAAOzI,GAC7CrB,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAeY,IAAIK,GAAQG,OAAxF,gBAAiGD,EAAQzI,IA5ChE,8CA+C3C,uBAAAkF,EAAA,sEAEyB0C,EAAWe,MAAM,YAAa,MAAM,GAAMC,MAFnE,cAGWC,SAAQ,SAAAX,GACfvJ,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAeY,IAAIA,EAAI5D,OAJxF,4CA/C2C,sBAwDzC,OA1CGgE,GAAmBD,IAEpBN,EAA6D,IAD7D9C,EAAOoD,EAAcS,KAAK3F,KAAI,SAAC+E,GAAD,OAASA,EAAIjD,WACvB8D,QAAO,SAACb,GAAD,OAASA,EAAIjJ,aAAW+J,OAChC,SAAfnB,EACA5C,EAAOA,EAAK8D,QAAO,SAACb,GAAD,OAASA,EAAIjJ,aACV,gBAAf4I,IACP5C,EAAOA,EAAK8D,QAAO,SAACb,GAAD,OAAUA,EAAIjJ,eAqCnC,qCACI,eAACuI,GAAD,WACI,cAACE,GAAD,CAAO,aAAW,QAAlB,SAA2B/I,EAAMsK,WACjC,cAACxD,GAAD,CAAgB,aAAW,qBAAqBa,aAAcV,EAAaG,cAAepH,EAAMoH,mBAGpG,eAAC0B,GAAD,WACI,cAAC,EAAD,CAAS,aAAW,iBAAiBxG,UAjCnD,SAAuBuD,EAAaC,GAClC,IAAMH,EAAKwC,cACXnI,EAAMqJ,GAAGC,WAAWV,IAAYW,IAAIvJ,EAAMuI,QAAQe,WAAWX,IAAeY,IAAI5D,GAAI4E,IAAI,CACpF5E,GAAIA,EACJE,YAAaA,EACbvF,WAAW,EACXwF,SAAUA,EACV0E,YAAaC,IAASC,UAAUC,UAAUC,WA4BlC,eAAC,EAAD,CAAS,aAAW,0BAA0BjG,YAAawE,EAA3D,UACI,8BACA,cAAC,GAAD,CACI,aAAW,iBACX7C,KAAMA,EACNM,uBAAwBA,EACxBD,iBAAkBA,KALb,OAQT,8BACA,cAAC,GAAD,CACI,aAAW,kBACXL,KAAMA,EACNM,uBAAwBA,EACxBD,iBAAkBA,KALb,QAQT,8BACA,cAAC,GAAD,CACI,aAAW,yBACXL,KAAMA,EACNM,uBAAwBA,EACxBD,iBAAkBA,KALb,qBAYjB,cAAC,EAAD,CACI7G,UAAWsJ,EACXtF,0BAjG6B,gD,mCCtB7C2G,IAASI,cAxBc,CAgBrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAQjB,IAAM/B,GAAKoB,IAASC,YAEd9B,GAAa,wBAIbyC,GAAmB3L,IAAOmC,IAAV,+XAEXgD,GAAQC,QAIRD,GAAQK,OAORL,GAAQO,SAabkG,GAAmB5L,IAAOmC,IAAV,sOAERgD,GAAQK,OAIRL,GAAQO,SAShBmG,GAAgB7L,IAAOmC,IAAV,0KA+FbuF,IApFS1H,IAAOmC,IAAV,0IAQCnC,IAAOmC,IAAV,8VACCgD,GAAQC,QAKRD,GAAQK,OAKRL,GAAQO,SAgBJ1F,IAAOmC,IAAV,8VACDgD,GAAQC,QAKRD,GAAQK,OAKRL,GAAQO,SAiBL1F,IAAOmC,IAAV,oOACAgD,GAAQC,QAIRD,GAAQK,OAIRL,GAAQO,SAYG,CACpB,YAAgB,eAChB,SAAa,WACb,YAAgB,gBAkNHoG,OA/Mf,WAKE,MAA4BxJ,mBAAS,MAArC,mBAAOuG,EAAP,KAAekD,EAAf,KACA,EAAgCzJ,mBAAS,MAAzC,mBAAOsI,EAAP,KAAiBoB,EAAjB,KACA,EAAoC1J,oBAAS,GAA7C,mBAAO2J,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,wBAAc,CAACC,SAAU,MAEtC3C,EAAe4C,KAqBfC,EAAgB5C,GAAGC,WAAWV,IAAYY,QAAQ,QACtD,EAAoEC,YAAcwC,GAAlF,mBAAOC,EAAP,KAA0BC,EAA1B,KAEIC,GAFJ,KAEmB,IAQnB,SAASC,EAAkBzJ,EAAM+C,GAG/B0D,GAAGC,WAAWV,IAAYW,IAAI5D,GAAI4E,IAChC,CACE5E,GAAIA,EACJ/C,KAAMA,IAuCZ,OApDKuJ,GAAuBD,IAC1BE,EAAeF,EAAkB/B,KAAK3F,KAAI,SAAC+E,GAAD,OAASA,EAAIjD,WAoDvD,mCAwDQuF,EACEF,EAEA,mCACE,cAAC,GAAD,CACElD,WAAY2D,EACZ5D,YAAaiD,EACb5D,gBAAiB+D,EACjBxD,oBAAqBiE,EACrBhE,cAAeqD,MAKnB,qCACE,cAAC,GAAD,CAAY7D,gBAAiB+D,IAC7B,cAAC5C,GAAD,CACE5B,cAAeA,GACfmB,OAAQA,EACR+B,SAAUA,EACVxK,UAAWsJ,EACXC,GAAIA,QAKR,eAACiC,GAAD,WACE,cAACC,GAAD,UACE,cAAC,GAAD,CACE9C,WAAY2D,EACZ5D,YAAaiD,EACb5D,gBAAiB+D,EACjBxD,oBAAqBiE,EACrBhE,cAAeqD,MAGnB,cAACL,GAAD,CAAkBlK,UAAU,MAAM,eAAa,EAA/C,SACGoH,GACC,cAACS,GAAD,CACA5B,cAAeA,GACfmB,OAAQA,EACR+B,SAAUA,EACVxK,UAAWsJ,EACXC,GAAIA,aCxYTiD,OAJf,SAAqBtM,GACjB,OAAO,cAAC,GAAD,CAAKuM,YAAavM,EAAMuM,eCOpBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06708c0a.chunk.js","sourcesContent":["import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 5px 12px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot}/>;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextAreaAutosize = styled(TextareaAutosize)`\n  outline: none;  \n  background-color: black;\n  color: ${prop => prop.completed === \"true\" ? '#555555' : 'lightgray'};\n  border: none;\n  width: 60%;\n  &:focus {\n    border: none;\n    border-bottom: 2px solid gray;\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  resize: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextAreaAutosize {...props} />;\n  }","import Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n    margin: \"0 10px\",\n    \"& > * + *\": {\n    marginTop: theme.spacing(1)\n    }\n},\nemptyStar: {\n    color: \"gray\"\n}\n}));\n\n\nconst StarsRating = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n        <Rating \n            aria-label=\"Priority rating\"\n            value={props.value}\n            defaultValue={props.defaultValue}\n            max={3}\n            size=\"small\"\n            emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\n            // onChange={props.onChange}\n            onChange={props.onChange}\n        />\n        </div>\n    );\n};\nexport default StarsRating; ","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// import Rating from '@mui/material/Rating';\n// import StarBorderIcon from \"@material-ui/icons/StarBorder\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n  justify-content: space-between;\n  z-index: -1;\n`;\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority);\n    setTaskDescription(\"\");\n    setTaskPriority(0);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea \n          completed={\"false\"} \n          placeholder=\"New task\" \n          value={taskDescription} \n          onChange={event => setTaskDescription(event.target.value)} \n          onKeyDown={(handleKeyDown)}\n        /> \n        \n        <SubmitButtonContainer>\n          <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            value={taskPriority}\n            onChange={(event, value) => setTaskPriority(value)}\n            // onPriorityChange={setTaskPriority}\n            max={3}\n            size=\"small\"\n          />\n          \n          <OurButton \n            className=\"submitButton\" \n            disabled={taskDescription===\"\"} \n            variant=\"contained\" \n            onClick={handleSubmit}\n          >\n            Add\n          </OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default NewTask;\n\n","import styled from 'styled-components';\n\n// Local imports\nimport './DeleteAllCompletedButton';\nimport OurButton from './OurButton';\n\n\n// Create custom styled components\nconst Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: black;\n    opacity: 100%;\n    width: 100vw;\n    height: 100vh;\n    color: white;\n    display: flex;\n`;\n\nconst Modal = styled.div`\n    opacity: none;\n    opacity: 1;\n    background-color: rgb(46, 46, 46, 100);\n    background: rgb(46, 46, 46);\n    \n    border-radius: 5px;\n    border-color: transparent;\n    border-style: none;\n    margin: 0 auto;\n    height: 200px;\n    width: 300px;\n    padding: 10px;\n    position: relative;\n    align-items: center;\n    top: 150px;\n`;\n\nconst ButtonContainer = styled.div`\n    padding: 10px 10px;\n    width: 70%;\n    display: flex;\n    justify-content: space-evenly;\n    margin: auto;\n`;\n\n\nfunction Alert(props) {\n    return (\n    <Backdrop>\n        <Modal>\n            {props.children}\n                <ButtonContainer>\n                    <OurButton\n                        aria-label={props.cancelText ? props.cancelText : \"Cancel\"}\n                        onClick={props.onClose}>\n                        {props.cancelText ? props.cancelText : \"Cancel\"}\n                    </OurButton>\n                    <OurButton\n                        aria-label= {props.OKText ? props.OKText : \"Ok\"}\n                        onClick={props.onOK}>\n                        {props.OKText ? props.OKText : \"Ok\"}\n                    </OurButton>\n                </ButtonContainer>\n        </Modal>\n    </Backdrop>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\n// import './Alert.css';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  font-size: 4px;\n  height: 10%;\n`;\n\nconst ModalText = styled.div`\n  color: white;\n  font-size: 20px;\n  padding: 20px;\n  opacity: 100%;\n`;\n\n\nfunction DeleteAllCompletedButton(props) {\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal(modalState) {\n    setShowAlert(modalState);\n  }\n\n  function handleAlertOK() {\n    props.onDeleteAllCompletedTasks();\n    toggleModal(false);\n  }\n\n  return (\n    <>\n      <Container> \n        <OurButton aria-label=\"Delete all completed tasks\" disabled={props.disabled} onClick={() => toggleModal(true)}>Delete Completed</OurButton>\n        {showAlert &&\n          <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n            <ModalText>\n              Are you sure you want to delete all completed tasks?\n            </ModalText>\n          </Alert>\n        }\n      </Container>\n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    \n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    \n    return (\n        <li className={classNames.join(\" \")} onClick={() => props.onClickTab(props.label)}>\n                {props.label}\n        </li>\n    )\n}","import {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n\n    function onTabChange(tab) {\n        props.onTabChange(tab)\n        setActiveTab(tab)\n    }\n\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => onTabChange(child.key)}/>\n                    )\n                }\n            </ol>\n            {props.children.map((child) => activeTab === child.key && child)}\n        </div>\n    );\n}\n\nexport default TabList;\n","const sizes = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px',\n};\n\nexport const devices = {\n    mobileS: `(min-width: ${sizes.mobileS})`,\n    mobileM: `(min-width: ${sizes.mobileM})`,\n    mobileL: `(min-width: ${sizes.mobileL})`,\n    tablet: `(min-width: ${sizes.tablet})`,\n    laptop: `(min-width: ${sizes.laptop})`,\n    laptopL: `(min-width: ${sizes.laptopL})`,\n    desktop: `(min-width: ${sizes.desktop})`,\n};","import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import Rating from '@mui/material/Rating';\n// import StarBorderIcon from \"@material-ui/icons/StarBorder\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\nimport { devices } from '../Design';\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n  @media ${devices.mobileS} { \n    width: 4vw;\n    height: 4vw;\n    margin: 0 2vw 2vw 0;\n  }\n\n  @media ${devices.laptop} { \n    width: 3vw;\n    height: 3vw;\n    margin: 0 1vw 1vw 0;\n  }\n\n  @media ${devices.desktop} { \n    width: 3vw;\n    height: 3vw;\n    margin: 0 2vw 2vw 0;\n  }\n\n    // width: 4vw;\n    // height: 4vw;\n    // margin: 0 2vw 2vw 0;\n`;\n\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                aria-label={true ? \"Mark task as incomplete\" : \"Mark task as complete\"}\n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed.toString()}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n              <StarsRating\n                value={props.priority}\n                onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n                max={3}\n                size=\"small\"\n              />\n            <IconButton aria-label=\"Delete task\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 100%;\n`;\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  \n  return (\n    <Container>\n      {props.data.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n            onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </Container>\n  );\n}\n\nexport default TaskList;\n","// import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 55vh;\n`\n\nfunction TasksSortedList(props) {\n    return (\n    <>\n        <Container> \n            <TaskList\n                data={props.data} \n                onDeleteTask={props.handleDeleteTask}\n                onTaskFieldChanged={props.handleTaskFieldChanged}\n            /> \n        </Container>\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nimport '../css/Dropdown.css';\nimport { devices } from './Design';\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end:\n`;\n\nconst Text = styled.div`\n  @media ${devices.mobileS} { \n    margin: 0 5px;\n  }\n\n  @media ${devices.laptop} { \n    margin: 0 10px;\n  }\n\n  @media ${devices.desktop} { \n    margin: 0 10px;\n  }\n`;\n\n\nexport default function CustomDropdown(props) {\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    onSelectView(view);\n  };\n\n  return (\n    <Container>\n    <Text>Sort by</Text>\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item\n            aria-label={props.sortByOptions[option]}\n            key={\"drop-down-item-\" + option}\n            className=\"drop-down-item\"\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n      }\n    </DropdownButton>\n    </Container>\n\n  );\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\n\n\nconst Container = styled.div`\n\n`\n\n\nexport default function MenuItem(props) {\n\n\n\n    return(\n        <>\n            <Container>\n                <IconButton aria-label={props.label} size=\"small\" onClick={() => props.onClick} sx={{padding: 0}}>\n                    {props.children}\n                </IconButton> \n            </Container>\n        </>\n\n    )\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport IconButton from '@mui/material/IconButton';\n\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';import AssignmentIcon from '@mui/icons-material/Assignment';\n\n\n// import CustomDropdown from './components/CustomDropdown';\nimport '../../css/Dropdown.css';\nimport MenuItem from './MenuItem';\n\n// import DeleteIcon from '@mui/icons-material/Delete';\n\n\nconst Container = styled.div`\n    // position: absolute;\n    // left: 0;\n    // bottom: 0;\n    margin: 10px 0 0 10px;\n    // padding: 5px;\n    // display: flex;\n    // justify-content: space-around;\n    // background: gray;\n    // margin: auto;\n    // width: 100vw;\n`;\n\nfunction BackButton(props) {\n\n    return (\n      <>\n        <Container>\n          <IconButton aria-label={props.label} size=\"small\" onClick={() => props.onSetOnMenuView(true)} sx={{padding: 0}}>\n            <ArrowBackIosNewIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n          </IconButton>\n        </Container>\n        \n\n        {/* <DropdownButton  title={<MoreHorizIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>}> */}\n        {/* <IconButton class=\"dropdown-menu\" aria-label=\"Delete task\" size=\"small\" data-toggle=\"dropdown\">\n            <MoreHorizIcon  fontSize=\"small\" sx={{color: \"lightgray\"}}> */}\n                {/* {\n                    Object.keys(props.sortByOptions).map((option) => (\n                    <Dropdown.Item\n                        aria-label={props.sortByOptions[option]}\n                        key={\"drop-down-item-\" + option}\n                        className=\"drop-down-item\"\n                        // onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n                    >\n                        {props.sortByOptions[option]}\n                    </Dropdown.Item>\n                    ))\n                } */}\n            {/* </MoreHorizIcon>\n        </IconButton>  */}\n        {/* </DropdownButton> */}\n\n        \n          {/* <Container>\n              <IconButton aria-label=\"Delete task\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                  <MoreHorizIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n              </IconButton> \n          </Container> */}\n          \n      </>\n    );\n  }\n  \n  export default BackButton;\n  \n  \n  \n\n  /*\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nimport '../css/Dropdown.css';\n\n\nexport default function CustomDropdown(props) {\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    onSelectView(view);\n  };\n\n  return (\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item\n            aria-label={props.sortByOptions[option]}\n            key={\"drop-down-item-\" + option}\n            className=\"drop-down-item\"\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n      }\n    </DropdownButton>\n\n  );\n}\n  */","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\nimport IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\n\n\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport { devices } from '../Design';\n\n\nconst AddContainer = styled.div`\n    // @media ${devices.mobileS} { \n    //     // font-size: 10vw;\n    //     margin: 5px;\n    // }\n\n    // @media ${devices.laptop} { \n    //     font-size: 2vw;\n    //     margin: 10px;\n    // }\n\n    // @media ${devices.desktop} { \n    //     font-size: 3vw;\n    //     margin: 10px;\n    // }\n\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    margin: 5vw 0 8vw 0;\n    justify-content: space-between;\n    // z-index: -1;\n    padding: 12px 5px;\n    \n\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n    // align-items: flex-start;\n    // justify-content: flex-start;\n    // flex-wrap: wrap;\n`;\n\nconst CustomButton = styled(OurButton)`\n  margin: 5px;\n`;\n\n\n\n// const SubmitButtonContainer = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n//   align-items: center;\n//   // width: 100%;\n// `;\n\n// const Container = styled.div`\n//   width: 100%;\n//   display: flex;\n//   align-items: flex-start;\n//   margin: 5vw 0 8vw 0;\n//   justify-content: space-between;\n//   z-index: -1;\n// `;\n\n\nexport default function SelectListMobile(props) {\n  const [taskListName, setNewTaskList] = useState(\"\");\n\n  \n  function handleSubmit() {\n    let id = generateUniqueID();\n    props.onHandleAddTaskList(taskListName, id);\n    setNewTaskList(\"\");\n    handleClick(id);\n\n  }\n \n  function handleClick(listId) {\n    props.onSetOnMenuView(false)\n    props.onSetListId(listId)\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n        handleSubmit()\n    }\n  }\n\n\n  return(\n      <>\n          <Container>\n              <AddContainer>\n                  <AutoResizeTextArea \n                    completed={\"false\"} \n                    placeholder=\"New task list\" \n                    value={taskListName} \n                    onChange={event => setNewTaskList(event.target.value)} \n                    onKeyDown={(handleKeyDown)}\n                  /> \n                  \n                  \n                  <OurButton \n                      className=\"submitButton\" \n                      disabled={taskListName===\"\"} \n                      variant=\"contained\" \n                      onClick={() => handleSubmit()}\n                  >\n                      Add\n                  </OurButton>\n              </AddContainer>\n                  {\n                      props.tasksLists.map((value, index) => \n                          <CustomButton\n                            onClick={() => handleClick(value.id)}\n                            key={value.id}\n                          >\n                            {value.name}\n                          </CustomButton>)\n                  }\n          </Container>\n\n      </>\n\n  )\n}\n\n\n/*\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n  justify-content: space-between;\n  z-index: -1;\n`;\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority);\n    setTaskDescription(\"\");\n    setTaskPriority(0);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      props.onAddTask(taskDescription, taskPriority);\n      setTaskDescription(\"\");\n      setTaskPriority(0);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea \n          completed={\"false\"} \n          placeholder=\"New task\" \n          value={taskDescription} \n          onChange={event => setTaskDescription(event.target.value)} \n          onKeyDown={(handleKeyDown)}\n        /> \n        \n        <SubmitButtonContainer>\n          <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            value={taskPriority}\n            onChange={(event, value) => setTaskPriority(value)}\n            // onPriorityChange={setTaskPriority}\n            max={3}\n            size=\"small\"\n          />\n          \n          <OurButton \n            className=\"submitButton\" \n            disabled={taskDescription===\"\"} \n            variant=\"contained\" \n            onClick={handleSubmit}\n          >\n            Add\n          </OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n*/","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\nimport IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\nimport { devices } from '../Design';\n\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\n\n\nconst AddContainer = styled.div`\n    // @media ${devices.mobileS} { \n    //     // font-size: 10vw;\n    //     margin: 5px;\n    // }\n\n    // @media ${devices.laptop} { \n    //     font-size: 2vw;\n    //     margin: 10px;\n    // }\n\n    // @media ${devices.desktop} { \n    //     font-size: 3vw;\n    //     margin: 10px;\n    // }\n\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    margin: 5vw 0 8vw 0;\n    justify-content: space-between;\n    // z-index: -1;\n    padding: 5px 12px;\n\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n`;\n\nconst CustomButton = styled(OurButton)`\n  margin: 5px;\n`;\n\n\n// const SubmitButtonContainer = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n//   align-items: center;\n//   // width: 100%;\n// `;\n\n// const Container = styled.div`\n//   width: 100%;\n//   display: flex;\n//   align-items: flex-start;\n//   margin: 5vw 0 8vw 0;\n//   justify-content: space-between;\n//   z-index: -1;\n// `;\n\n\nexport default function SelectListMobile(props) {\n    const [taskListName, setNewTaskList] = useState(\"\");\n\n  \n    function handleSubmit() {\n      let id = generateUniqueID();\n      props.onHandleAddTaskList(taskListName, id);\n      props.onSetListName(taskListName)\n      setNewTaskList(\"\");\n      handleClick(id);\n\n    }\n   \n    function handleClick(listId, name) {\n      props.onSetListName(name)\n      props.onSetOnMenuView(false)\n      props.onSetListId(listId)\n    }\n\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter') {\n          handleSubmit()\n      }\n    }\n\n  return(\n    <>\n        <Container>\n            <AddContainer>\n                <AutoResizeTextArea \n                completed={\"false\"} \n                placeholder=\"New task list\" \n                value={taskListName} \n                onChange={event => setNewTaskList(event.target.value)} \n                onKeyDown={(handleKeyDown)}\n                /> \n                <OurButton \n                    className=\"submitButton\" \n                    disabled={taskListName===\"\"} \n                    variant=\"contained\" \n                    onClick={() => handleSubmit()}\n                >\n                    Add\n                </OurButton>\n            </AddContainer>\n                {\n                    props.tasksLists.map((value, index) => \n                        <CustomButton\n                            onClick={() => handleClick(value.id, value.name)}\n                            key={value.id}\n                        >\n                          {value.name}\n                        </CustomButton>)\n                }\n        </Container>\n\n    </>\n\n  )\n}","import { useState } from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n\n\nimport NewTask from './components/Tasks/NewTask';\nimport TabList from './components/Tabs/TabList';\nimport TasksSortedList from './components/Tasks/TasksSortedList';\nimport CustomDropdown from './components/CustomDropdown';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\n\n\nimport { devices } from './components/Design';\n\n\n// const db = firebase.firestore();\nconst SUBCOLLECTION = \"cherrymar-tasks\";\nconst COLLECTION = \"cherrymar-tasks-lists\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10%;\n`;\n\nconst Body = styled.div`\n  @media ${devices.mobileS} { \n    // font-size: 10vw;\n    margin: 5px;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 2vw;\n    margin: 10px;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 3vw;\n    margin: 10px;\n  }\n\n\n  height: 75%;\n  z-index: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  // margin: 10px 0;\n  // height: 80%;\n`\n\n\nconst Title = styled.div`\n  @media ${devices.mobileS} { \n    font-size: 10vw;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 5vw;\n  }\n\n//   @media ${devices.desktop} { \n//     font-size: 5vw;\n//   }\n  // font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\nexport default function TaskDetailView(props){\n  const [sortView, setSortView] = useState(\"dateCreated\");\n  const [filterView, setFilterView] = useState(\"dateCreated\");\n  let hasCompleted = false;\n\n  let tasksQuery;\n  if (sortView === \"priority\") {\n    tasksQuery = props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).orderBy(sortView, \"desc\");\n  } else {\n    tasksQuery = props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).orderBy(sortView);\n  }\n  const [allTasksValue, allTasksLoading, allTasksError] = useCollection(tasksQuery);\n\n  let data = [];\n  if (!allTasksLoading && allTasksValue) {\n      data = allTasksValue.docs.map((doc) => doc.data())\n      hasCompleted = data.filter((doc) => doc.completed).length != 0\n      if (filterView === \"Done\") {\n          data = data.filter((doc) => doc.completed);\n      } else if (filterView === \"In Progress\") {\n          data = data.filter((doc) => !doc.completed);\n      }\n  }\n\n\n\n  // Helper functions\n  function handleDeleteTask(taskId) {\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority) {\n    const id = generateUniqueID();\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(id).set({\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n    });\n  }\n\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    // const tasksRef = props.db.collection(allTasksCollection);\n    const snapshot = await tasksQuery.where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(doc.id);\n    });\n  }\n\n\n    return (\n        <>\n            <Header>\n                <Title aria-label=\"Tasks\">{props.listName}</Title>\n                <CustomDropdown aria-label=\"Sort View Dropdown\" onSelectView={setSortView} sortByOptions={props.sortByOptions}/>\n            </Header>\n            \n            <Body>\n                <NewTask aria-label=\"Add a new task\" onAddTask={handleAddTask}/>\n                \n                <TabList aria-label=\"Filter view options tab\" onTabChange={setFilterView}>\n                    <div key=\"All\">\n                    <TasksSortedList\n                        aria-label=\"View all tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                    <div key=\"Done\">\n                    <TasksSortedList\n                        aria-label=\"View done tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                    <div key=\"In Progress\">\n                    <TasksSortedList\n                        aria-label=\"View in progress tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                </TabList>\n\n            </Body>\n            \n            <DeleteAllCompletedButton \n                disabled={!hasCompleted} \n                onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}\n            />\n        </>\n    )\n}","// React imports\nimport { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\n\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// const {  Timestamp, FieldValue } = require('firebase-admin/firestore');\n\n// Local imports\nimport NewTask from './components/Tasks/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\nimport TabList from './components/Tabs/TabList';\nimport TasksSortedList from './components/Tasks/TasksSortedList';\nimport CustomDropdown from './components/CustomDropdown';\nimport BackButton from './components/MultiList/BackButton';\n\n// import SelectListMenu from './components/MultiList/SelectListMenu';\nimport SelectListDesktop from './components/MultiList/SelectListDesktop';\nimport SelectListMobile from './components/MultiList/SelectListMobile';\nimport TaskDetailView from './TaskDetailView';\n// import useWindowDimensions from './UseWindowDimensions';\n\n\nimport './App.css';\nimport { devices } from './components/Design';\nimport { FamilyRestroomOutlined } from '@mui/icons-material';\n\n// Set up Firebase\nconst firebaseConfig = {\n  // apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  // authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  // projectId: \"hmc-cs124-fa21-labs\",\n  // storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  // messagingSenderId: \"949410042946\",\n  // appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n\n  // apiKey: \"AIzaSyBQ-L6YGO4GE_XdNapz4M7VC7j4TM4Mwqc\",\n  // authDomain: \"tasks-24209.firebaseapp.com\",\n  // projectId: \"tasks-24209\",\n  // storageBucket: \"tasks-24209.appspot.com\",\n  // messagingSenderId: \"178699163025\",\n  // appId: \"1:178699163025:web:d99e91b297b2b8ef2b7630\",\n  // measurementId: \"G-FY6X078NY7\"\n\n  apiKey: \"AIzaSyBHZdLi79neEirMDn9HeYqOIO_7D7CMMxk\",\n  authDomain: \"tasks-dce66.firebaseapp.com\",\n  projectId: \"tasks-dce66\",\n  storageBucket: \"tasks-dce66.appspot.com\",\n  messagingSenderId: \"630175576796\",\n  appId: \"1:630175576796:web:0ba0f2ad21deee6c723a19\",\n  measurementId: \"G-TGMZJRZF5Y\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\n\nconst db = firebase.firestore();\nconst SUBCOLLECTION = \"cherrymar-tasks\";\nconst COLLECTION = \"cherrymar-tasks-lists\";\n\n\n// Create custom styled components\nconst ContentContainer = styled.div`\n\n  @media ${devices.mobileS} { \n    max-width: 90vw;\n  }\n\n  @media ${devices.laptop} { \n    // max-width: 1000px;\n    width: 90%;\n    grid-column-start: 2;\n    grid-column-end: 2;\n  }\n\n  @media ${devices.desktop} { \n    // max-width: 2000px;\n    width: 90%;\n    grid-column-start: 2;\n    grid-column-end: 2;\n  }\n\n  // max-width: 90vw;\n  height: 95vh;\n  margin: auto auto;\n  \n`\n\nconst DestkopContainer = styled.div`\n\n  // @media ${devices.laptop} { \n  //   margin: 5em;\n  // }\n\n  // @media ${devices.desktop} { \n  //   margin: 2em;\n  // }\n  // padding: 5em;\n  display: grid;\n  grid-template-columns: 20% 80%;\n  grid-template-rows: 1;\n`\n\nconst ListContainer = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 1;\n  // background: lightgray;\n  border-right: solid;\n  height: 100%;\n  // margin: 0 -5em;\n`;\n\n\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10%;\n`;\n\nconst Body = styled.div`\n  @media ${devices.mobileS} { \n    // font-size: 10vw;\n    margin: 5px;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 2vw;\n    margin: 10px;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 3vw;\n    margin: 10px;\n  }\n\n\n  height: 75%;\n  z-index: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  // margin: 10px 0;\n  // height: 80%;\n`\n\nconst Footer = styled.div`\n  @media ${devices.mobileS} { \n    // font-size: 10vw;\n    margin: 5px;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 2vw;\n    margin: 10px;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 3vw;\n    margin: 10px;\n  }\n\n\n  height: 75%;\n  z-index: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  // margin: 10px 0;\n  // height: 80%;\n`\n\n\nconst Title = styled.div`\n  @media ${devices.mobileS} { \n    font-size: 10vw;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 5vw;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 5vw;\n  }\n  // font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\n\nconst TasksLists = [\"Tasks\", \"Birthday\"];\n\n// Options for sorting the task list\nconst sortByOptions = {\n  \"dateCreated\" : \"Date Created\", \n  \"priority\" : \"Priority\", \n  \"description\" : \"Description\",\n}\n\nfunction App() {\n  // console.log(useWindowDimensions())\n  // const { height, width } = useWindowDimensions();\n  // Hooks for managing view state\n\n  const [listId, setListId] = useState(null); // tracks which list user is viewing\n  const [listName, setListName] = useState(null);\n  const [onMenuView, setOnMenuView] = useState(true); // On left tab if true, on right tab if false\n\n  const isMobile = useMediaQuery({maxWidth: 600})\n\n  let hasCompleted = FamilyRestroomOutlined\n  \n\n\n\n\n\n  // let allTasksQuery;\n  // if (sortView === \"priority\") {\n  //   allTasksQuery = db.collection(allTasksCollection).orderBy(sortView, \"desc\");\n  // } else {\n  //   allTasksQuery = db.collection(allTasksCollection).orderBy(sortView);\n  // }\n  // const [allTasksValue, allTasksLoading, allTasksError] = useCollection(allTasksQuery);\n\n\n  // let allTaskListsQuery;\n  // allTaskListsQuery = db.collection(allTaskListsCollection).orderBy(\"listName\", \"desc\");\n  // const [allTaskListsValue, allTaskListsLoading, allTaskListsError] = useCollection(allTaskListsQuery);\n  // console.log(allTaskListsValue);\n\n  let taskListQuery = db.collection(COLLECTION).orderBy(\"name\");\n  const [allTaskListsValue, allTaskListsLoading, allTaskListsError] = useCollection(taskListQuery);\n\n  let taskListData = [];\n  if (!allTaskListsLoading && allTaskListsValue) {\n    taskListData = allTaskListsValue.docs.map((doc) => doc.data());\n  }\n\n\n\n  // Helper functions\n  function handleAddTaskList(name, id) {\n    // setListName(name);\n    // setListId(id);\n    db.collection(COLLECTION).doc(id).set(\n      {\n        id: id,\n        name: name,\n      }\n    );\n  }\n\n  // let data;\n  // let taskLists;\n\n\n  // collection(COLLECTION).doc(id of list).collection(SUBCOLLECTION).doc(id of task)\n\n  // Retrieve data from Firebase\n  // Get all lists\n\n  // Determine selected list\n\n  // Grab tasks from that list\n\n\n  \n  // if (!allTasksLoading && allTasksValue && !allTaskListsLoading && allTaskListsValue) {\n\n\n  //     let taskIds = allTaskListsValue.docs.map((doc) => doc.data())//.filter((doc) => doc.name == listView).ids;\n  //     console.log(taskIds)\n  //     data = allTasksValue.docs.map((doc) => doc.data())//.filter((doc) => taskIds.contains(doc.id));\n  //     hasCompleted = data.filter(task => task.completed).length !== 0\n\n  //     // let data = props.value.docs.map((doc) => doc.data())\n  //     if (filterView === \"Done\") {\n  //         data = data.filter((doc) => doc.completed);\n  //     } else if (filterView === \"In Progress\") {\n  //         data = data.filter((doc) => !doc.completed);\n  //     }\n  // } else {\n  //   data = []\n  // }\n\n\n  return (\n    <>\n        {/* <Container className=\"App\" aria-hidden={true}>\n          <TaskDetailView \n            onSelectView={setSortView} \n            sortByOptions={sortByOptions}\n            onAddTask={handleAddTask}\n            onTabChange={setFilterView}\n            data={data}\n            handleTaskFieldChanged={handleTaskFieldChanged} \n            handleDeleteTask={handleDeleteTask}\n            disabled={!hasCompleted} \n            onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}\n          /> */}\n          {/* <Header>\n            <Title aria-label=\"Tasks\" >Tasks</Title>\n            <CustomDropdown aria-label=\"Sort View Dropdown\" onSelectView={setSortView} sortByOptions={sortByOptions}/>\n          </Header>\n\n          <Body> */}\n            {/* <NewTask aria-label=\"Add a new task\" onAddTask={handleAddTask}/>\n          \n            <TabList aria-label=\"Filter view options tab\" onTabChange={setFilterView}>\n              <div key=\"All\">\n                <TasksSortedList\n                  aria-label=\"View all tasks\"\n                  data={data}\n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n              <div key=\"Done\">\n                <TasksSortedList\n                  aria-label=\"View done tasks\"\n                  data={data}\n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n              <div key=\"In Progress\">\n                <TasksSortedList\n                  aria-label=\"View in progress tasks\"\n                  data={data}\n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n            </TabList> */}\n          {/* </Body> */}\n\n          \n\n          {/* <DeleteAllCompletedButton \n            disabled={!hasCompleted} \n            onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}\n          /> */}\n          {\n            isMobile ? \n              onMenuView ? \n              \n              <>\n                <SelectListMobile \n                  tasksLists={taskListData} \n                  onSetListId={setListId} \n                  onSetOnMenuView={setOnMenuView} \n                  onHandleAddTaskList={handleAddTaskList}\n                  onSetListName={setListName}\n                />\n                {/* <Menu onSetOnMenuView={setOnMenuView} />  */}\n              </>\n              :\n              <>\n                <BackButton onSetOnMenuView={setOnMenuView}/> \n                <TaskDetailView \n                  sortByOptions={sortByOptions}\n                  listId={listId}\n                  listName={listName}\n                  disabled={!hasCompleted} \n                  db={db}\n                />\n                \n              </>\n              :\n              <DestkopContainer>\n                <ListContainer>\n                  <SelectListMobile \n                    tasksLists={taskListData} \n                    onSetListId={setListId} \n                    onSetOnMenuView={setOnMenuView} \n                    onHandleAddTaskList={handleAddTaskList}\n                    onSetListName={setListName}\n                  />\n                </ListContainer>\n                <ContentContainer className=\"App\" aria-hidden={true}>\n                  {listId &&\n                    <TaskDetailView \n                    sortByOptions={sortByOptions}\n                    listId={listId}\n                    listName={listName}\n                    disabled={!hasCompleted} \n                    db={db}\n                  />\n                  }\n                  \n                </ContentContainer>  \n                \n              </DestkopContainer>\n\n          }\n\n          \n        {/* </Container>  */}\n          \n        \n    </>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}