{"version":3,"sources":["components/TaskItem.js","components/TaskList.js","components/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/ViewSelector.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["Item","styled","textarea","Container","div","CheckBox","input","TaskItem","props","type","checked","completed","onChange","event","onTaskFieldChanged","id","target","placeholder","description","defaultValue","value","IconButton","size","onClick","onDeleteTask","fontSize","sx","color","TaskList","useState","selectedId","setSelectedId","displayData","data","view","filter","a","map","onRowClick","selected","NewItem","SubmitButtonContainer","SubmitButton","Button","theme","TextField","borderBottomColor","borderColor","createMuiTheme","palette","action","disabledBackground","disabled","NewTask","taskDescription","setTaskDescription","className","variant","width","onAddTask","Alert","children","onClose","cancelText","onOK","OKText","ModalText","buttonUnstyledClasses","active","focusVisible","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","options","ViewSelector","React","open","setOpen","anchorRef","selectedIndex","setSelectedIndex","handleClose","current","contains","ButtonGroup","ref","height","undefined","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","index","MenuItem","onSelectView","handleMenuItemClick","Title","HeaderContainer","App","initialData","setData","setView","task","hasCompleted","setHasCompleted","generateUniqueID","taskId","field","console","log","InMemoryApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bd3587b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst Item = styled.textarea`\n    outline: none;\n    width: 80%;\n    font-size: 4vw;\n    border: none;\n    border-bottom: 2px solid black;\n    padding: 0;\n    // margin: 50px 50px 50px 0;\n    margin: 2vw 2vw 2vw 0;\n    background-color: black;\n    color: lightgray;\n    &:focus {\n        border-bottom: 2px solid cornflowerblue;\n    }\n    overflow-wrap: break-word;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n\nconst Container = styled.div`\n    padding: 0 10px;\n    display: flex;\n    width: 100%;\n    // border-bottom: 1px solid transparent;\n    // box-shadow: 0 3px lightgray;\n`;\n\nconst CheckBox = styled.input`\n    width: 4vw;\n    height: 4vw;\n    // margin: 50px 50px 50px 0;\n    margin: 2vw 2vw 2vw 0;\n`;\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <Item \n                id={props.id} \n                placeholder={props.description} \n                defaultValue={props.description} \n                onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n                /> \n            <IconButton aria-label=\"delete\" size=\"small\" onClick={() => props.onDeleteTask(props.id)}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  let displayData = props.data\n  \n  if (props.view === 1) \n    displayData = displayData.filter(a => a.completed)\n  else if (props.view === 2)\n    displayData = displayData.filter(a => !a.completed)\n\n\n  return (\n    <>\n      {displayData.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n        onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </>\n  );\n}\n\nexport default TaskList;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Select from \"react-dropdown-select\";\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n\nimport '../App.css'\n\nconst NewItem = styled.textarea`\n    outline: none;\n    width: 80%;\n    font-size: 4vw;\n    border: none;\n    border-bottom: 2px solid black;\n    padding: 0;\n    // margin: 50px 50px 50px 0;\n    margin: 2vw 2vw 2vw 0;\n    background-color: black;\n    color: lightgray;\n    &:focus {\n        border-bottom: 2px solid cornflowerblue;\n    }\n    overflow-wrap: break-word;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n\nconst SubmitButtonContainer = styled.div`\n    width: 5%;\n    // margin: 50px 50px 50px 0;\n    // margin: 5wh 5wh 5wh 0;\n    // align-self: flex-end;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin: 5vw 0;\n`;\n\n\nconst SubmitButton = styled(Button)`\n    width: 25%;\n    font-size: 10;\n`;\n\n\n\n\nconst TextInput = styled(TextField)({\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  });\n\n  \n\n\n  const theme = createMuiTheme({\n    palette: {\n      action: {\n        disabledBackground: '#0d47a1',\n        disabled: 'white',\n      }\n    }\n  })\n\n  \nfunction NewTask(props) {\n    const [taskDescription, setTaskDescription] = useState(\"\");\n    \n    function handleSubmit() {\n        props.onAddTask(taskDescription)\n        setTaskDescription(\"\")\n    }\n\n    return (\n    <>\n        <Container>\n            <NewItem placeholder=\"New task\" value={taskDescription} onChange={event => setTaskDescription(event.target.value)}/> \n            <SubmitButtonContainer>\n                {/* <ThemeProvider theme={theme}>\n                <   Button disabled={taskDescription===\"\"} variant=\"contained\" sx={{width: \"25%\", fontSize: 10}} onClick={handleSubmit}>Submit</Button>\n                </ThemeProvider> */}\n                <SubmitButton className=\"submitButton\" disabled={taskDescription===\"\"} variant=\"contained\" theme={theme} sx={{width: \"25%\", fontSize: 10, disabledBackground: \"white\"}} onClick={handleSubmit}>Add</SubmitButton>\n            </SubmitButtonContainer>\n\n        </Container>\n        \n    </>\n  );\n}\n\nexport default NewTask;\n","import './DeleteAllCompletedButton';\nimport './Alert.css';\nimport react from 'react';\n\nfunction Alert(props) {\n\n    return (\n    <div className={\"backdrop\"}>\n        <div className=\"modal\">\n            {props.children}\n            <div className=\"alert-buttons\">\n                <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                        onClick={props.onClose}>\n                    {props.cancelText ? props.cancelText : \"Cancel\"}\n                </button>\n                <button className={\"alert-button alert-ok\"} type={\"button\"}\n                        onClick={props.onOK}>\n                    {props.OKText ? props.OKText : \"Ok\"}\n                </button>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Alert;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@mui/material/Button';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { ButtonBase } from '@mui/material';\n\n\n\nimport Alert from './Alert.js';\nimport './Alert.css';\nimport react, {useState} from 'react';\n\n\nconst Container = styled.div`\n    // display: flex;\n    // justifyContent: flex-end;\n    // position: relative;\n    // right: 0;\n    // bottom: 0;\n    // margin: 50px;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n    font-size: 4px;\n    \n    \n`;\n\nconst CustomButtonRoot = styled('button')(`\n  background-color: #1976d2;\n  padding: 15px 20px;\n  border-radius: 10px;\n  color: #fff;\n  font-weight: 600;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0059b2;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #1976d2;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n  }\n`);\n\nconst ModalText = styled.div`\n  color: black;\n  font-size: 30px;\n`;\n\n\nconst StyledButton = styled(Button)`\n\n\n`;\n\nfunction DeleteAllCompletedButton(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function toggleModal(modalState) {\n        setShowAlert(modalState)\n    }\n\n    function handleAlertOK() {\n        toggleModal(false)\n        props.onDeleteAllCompletedTasks()\n    }\n\n\n    \n  return (\n    <>\n        <Container>\n            {/* <ButtonBase>ButtonBase</ButtonBase>\n            <CustomButtonRoot>Button</CustomButtonRoot>\n            <ButtonUnstyled {...props} component={CustomButtonRoot} >Delete All Completed</ButtonUnstyled> */}\n            <Button variant=\"contained\" onClick={() => toggleModal(!showAlert)} sx={{fontSize: 10}}>Delete Completed</Button>\n\n            {showAlert && <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n                <ModalText>\n                    Are you sure you want to delete all tasks?\n                </ModalText>\n            </Alert>}\n        </Container>\n        \n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\n\nconst options = ['All', 'Completed', 'Incomplete'];\n\nexport default function ViewSelector(props) {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleMenuItemClick = (event, index, onSelectView) => {\n    setSelectedIndex(index);\n    setOpen(false);\n    onSelectView(index);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup variant=\"contained\" ref={anchorRef} aria-label=\"split button\">\n        <Button sx={{width: \"110px\", height: \"30px\"}}>{options[selectedIndex]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          sx={{height: \"30px\"}}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n            sx={{width: \"150px\"}}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={(event) => handleMenuItemClick(event, index, props.onSelectView)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n","import { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\n// import Dropdown from 'react-dropdown';\n// import { Dropdown } from 'semantic-ui-react'\nimport Select from \"react-dropdown-select\";\nimport Button from '@mui/material/Button';\n\n\nimport TaskList from './components/TaskList';\nimport NewTask from './components/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\nimport ViewSelector from './components/ViewSelector';\n\nimport './App.css';\n\nconst Title = styled.div`\n  font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\nconst Container = styled.div`\n  margin: 5vw;\n  height: 90vh;\n  width: 90vw;\n  z-index: 1;\n`\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  z-index: 2;\n`;\n\nfunction App(props) {\n  \n  const [data, setData] = useState(props.initialData);\n  const [view, setView] = useState(0);\n  const [hasCompleted, setHasCompleted] = useState(data.filter(task => task.completed) !== []);\n  \n\n  function handleDeleteTask(taskId) {\n      setData(data.filter(task => task.id !==taskId))\n      setHasCompleted(data.filter(task => task.completed) !== []);\n  }\n\n  function handleAddTask(description) {\n      setData([...data, {\n          id: generateUniqueID(),\n          description: description,\n          completed: false\n      }])\n      setHasCompleted(data.filter(task => task.completed) !== []);\n  }\n\n  function handleTaskFieldChanged(taskId, field, value) {\n      setData(data.map(\n          task => task.id !== taskId\n              ? task\n              : {...task, [field]: value}))\n      setHasCompleted(data.filter(task => task.completed) !== []);\n\n      console.log(hasCompleted);\n  }\n\n  function handleDeleteAllCompletedTasks() {\n    setData(data.filter(task => !task.completed))\n    setHasCompleted(data.filter(task => task.completed) !== []);\n  }\n\n  return (\n    <>\n      <Container className=\"App\">\n        <HeaderContainer>\n          <Title>Tasks</Title>\n          <ViewSelector onSelectView={setView} sx={{width: \"100px\"}}/>\n        </HeaderContainer>\n        \n        <NewTask onAddTask={handleAddTask}/>\n        <TaskList \n          data={data} \n          onDeleteTask={handleDeleteTask}\n          onTaskFieldChanged={handleTaskFieldChanged}\n          view={view}\n        />\n        <DeleteAllCompletedButton disabled={view === 2 || !hasCompleted} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n      </Container>\n    </>\n    \n  );\n}\n\nexport default App;\n\n\n// https://codesandbox.io/s/ltl94?file=/demo.js\n\n/*\n<div \n  role=\"listbox\" \n  aria-expanded=\"false\" \n  class=\"ui dropdown\" \n  tabindex=\"0\"\n>\n  <div \n    aria-atomic=\"true\" \n    aria-live=\"polite\" \n    role=\"alert\" \n    class=\"divider text\"\n  >\n    File\n  </div>\n  <i aria-hidden=\"true\" class=\"dropdown icon\"></i>\n  <div class=\"menu transition\">\n  <div role=\"option\" class=\"item\"\n  ><span class=\"text\">New</span></div><div role=\"option\" class=\"item\"><span class=\"description\">ctrl + o</span><span class=\"text\">Open...</span></div><div role=\"option\" class=\"item\"><span class=\"description\">ctrl + s</span><span class=\"text\">Save as...</span></div><div role=\"option\" class=\"item\"><span class=\"description\">ctrl + r</span><span class=\"text\">Rename</span></div><div role=\"option\" class=\"item\"><span class=\"text\">Make a copy</span></div><div role=\"option\" class=\"item\"><i aria-hidden=\"true\" class=\"folder icon\"></i><span class=\"text\">Move to folder</span></div><div role=\"option\" class=\"item\"><i aria-hidden=\"true\" class=\"trash icon\"></i><span class=\"text\">Move to trash</span></div><div class=\"divider\"></div><div role=\"option\" class=\"item\"><span class=\"text\">Download As...</span></div><div role=\"option\" class=\"item\"><span class=\"text\">Publish To Web</span></div><div role=\"option\" class=\"item\"><span class=\"text\">E-mail Collaborators</span></div></div></div>\n\n\n\n*/","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nlet initialData = [\n  {\n    id: 1,\n    description: \"Do laundry\",\n    completed: false,\n  },\n  {\n    id: 2,\n    description: \"Call mom\",\n    completed: false,\n  },\n  {\n    id: 3,\n    description: \"Call dad\",\n    completed: true,\n  },\n]\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}