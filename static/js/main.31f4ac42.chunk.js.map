{"version":3,"sources":["components/OurButton.js","components/AutoResizeTextArea.js","components/StarsRating.js","components/Tasks/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/Tabs/Tab.js","components/Tabs/TabList.js","components/Tasks/TaskItem.js","components/Tasks/TaskList.js","components/Tasks/TasksSortedList.js","components/CustomDropdown.js","components/Design.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["CustomButtonRoot","styled","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","props","ButtonUnstyled","component","StyledTextAreaAutosize","TextareaAutosize","prop","completed","AutoResizeTextArea","useStyles","makeStyles","theme","root","margin","marginTop","spacing","emptyStar","color","StarsRating","classes","className","Rating","value","defaultValue","max","size","emptyIcon","fontSize","onChange","SubmitButtonContainer","div","Container","NewTask","useState","taskDescription","setTaskDescription","taskPriority","setTaskPriority","placeholder","event","target","nKeyDown","key","onAddTask","name","variant","onClick","Backdrop","Modal","ButtonContainer","Alert","children","onClose","cancelText","onOK","OKText","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","map","child","CheckBox","input","TaskItem","type","checked","onTaskFieldChanged","id","description","priority","IconButton","onDeleteTask","sx","padding","TaskList","selectedId","setSelectedId","displayData","data","view","filter","a","onRowClick","selected","TasksSortedList","appContent","loading","docs","doc","handleDeleteTask","handleTaskFieldChanged","error","message","CustomDropdown","React","sortView","setSortView","DropdownButton","title","sortByOptions","Object","keys","option","Dropdown","Item","onSelectView","sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","Header","Body","Title","App","query","setView","hasCompleted","orderBy","useCollection","taskId","delete","field","update","tasksRef","where","get","forEach","task","length","dueDate","generateUniqueID","set","dateCreated","Timestamp","now","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAIMA,EAAmBC,YAAO,SAAPA,CAAH,stBAiBhBC,IAAsBC,OAItBD,IAAsBE,aAKtBF,IAAsBG,UAQb,SAASC,EAAUC,GAChC,OAAO,cAACC,EAAA,EAAD,2BAAoBD,GAApB,IAA2BE,UAAWT,K,eClCzCU,EAAyBT,YAAOU,IAAPV,CAAH,uQAGjB,SAAAW,GAAI,OAAIA,EAAKC,UAAY,UAAY,eAajC,SAASC,EAAmBP,GAC1C,OAAO,cAACG,EAAD,eAA4BH,I,4CClB9BQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAM,CACFC,OAAQ,SACR,YAAa,CACbC,UAAWH,EAAMI,QAAQ,KAG7BC,UAAW,CACPC,MAAO,YAqBIC,EAhBK,SAACjB,GACjB,IAAMkB,EAAUV,IAChB,OACI,qBAAKW,UAAWD,EAAQP,KAAxB,SACA,cAACS,EAAA,EAAD,CACIC,MAAOrB,EAAMqB,MACbC,aAActB,EAAMsB,aACpBC,IAAK,EACLC,KAAK,QACLC,UAAW,cAAC,IAAD,CAAgBC,SAAS,UAAUP,UAAWD,EAAQH,YAEjEY,SAAU3B,EAAM2B,cCdtBC,EAAwBlC,IAAOmC,IAAV,uHAOrBC,EAAYpC,IAAOmC,IAAV,qKAiEAE,I,MAAAA,EAvDf,SAAiB/B,GACf,MAA8CgC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAiBA,OACE,mCACE,eAACN,EAAD,WACE,cAACvB,EAAD,CACED,WAAW,EACX+B,YAAY,WACZhB,MAAOY,EACPN,SAAU,SAAAW,GAAK,OAAIJ,EAAmBI,EAAMC,OAAOlB,QACnDmB,SAhBc,SAACF,GACH,UAAdA,EAAMG,MACRzC,EAAM0C,UAAUT,EAAiBE,GACjCD,EAAmB,IACnBE,EAAgB,OAed,eAACR,EAAD,WACE,cAAC,EAAD,CACEe,KAAK,mBACLrB,aAAc,EACdD,MAAOc,EACPR,SAAU,SAACW,EAAOjB,GAAR,OAAkBe,EAAgBf,IAE5CE,IAAK,EACLC,KAAK,UAGP,cAACzB,EAAD,CACEoB,UAAU,eACVrB,SAA4B,KAAlBmC,EACVW,QAAQ,YACRC,QAxCV,WACE7C,EAAM0C,UAAUT,EAAiBE,GACjCD,EAAmB,IACnBE,EAAgB,IAiCV,0BChEJU,EAAWpD,IAAOmC,IAAV,6MAYRkB,EAAQrD,IAAOmC,IAAV,4XAkBLmB,EAAkBtD,IAAOmC,IAAV,iJA6BNoB,I,IAAAA,EApBf,SAAejD,GACX,OACA,cAAC8C,EAAD,UACI,eAACC,EAAD,WACK/C,EAAMkD,SACH,eAACF,EAAD,WACI,cAACjD,EAAD,CACI8C,QAAS7C,EAAMmD,QADnB,SAEKnD,EAAMoD,WAAapD,EAAMoD,WAAa,WAE3C,cAACrD,EAAD,CACI8C,QAAS7C,EAAMqD,KADnB,SAEKrD,EAAMsD,OAAStD,EAAMsD,OAAS,gBClDjDxB,EAAYpC,IAAOmC,IAAV,yIAQT0B,EAAY7D,IAAOmC,IAAV,qGAoCA2B,MA5Bf,SAAkCxD,GAChC,MAAkCgC,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAYC,GACnBF,EAAaE,GAQf,OACE,mCACE,eAAC,EAAD,WACE,cAAC7D,EAAD,CAAWD,SAAUE,EAAMF,SAAU+C,QAAS,kBAAMc,GAAY,IAAhE,8BACCF,GACC,cAAC,EAAD,CAAON,QAAS,kBAAMQ,GAAY,IAAQN,KAAM,kBATtDrD,EAAM6D,iCACNF,GAAY,IAQiEP,WAAW,SAASE,OAAO,SAAlG,SACE,cAACC,EAAD,2E,OCzCL,SAASO,EAAI9D,GAChB,IAAM+D,EAAa,CAAC,iBAIpB,OAHI/D,EAAMgE,YAAchE,EAAMiE,OAC1BF,EAAWG,KAAK,mBAGhB,oBAAI/C,UAAW4C,EAAWI,KAAK,KAAMtB,QAAS,kBAAM7C,EAAMoE,WAAWpE,EAAMiE,QAA3E,SACSjE,EAAMiE,QCaRI,I,KAAAA,GAnBf,SAAiBrE,GACb,MAAkCgC,mBAAS,OAA3C,mBAAOgC,EAAP,KAAkBM,EAAlB,KACA,OACI,sBAAKnD,UAAU,OAAf,UACI,oBAAIA,UAAU,WAAd,SAEQnB,EAAMkD,SAASqB,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACAP,MAAOO,EAAM/B,IACbuB,UAAWA,EACXI,WAAY,kBAAME,EAAaE,EAAM/B,OAH3B+B,EAAM/B,UAO3BzC,EAAMkD,SAASqB,KAAI,SAACC,GAAD,OAAWR,IAAcQ,EAAM/B,KAAO+B,S,+BCHhE1C,GAAYpC,IAAOmC,IAAV,6IAQT4C,GAAW/E,IAAOgF,MAAV,2FAqCCC,I,GAAAA,GA9Bf,SAAkB3E,GAChB,OACE,mCACI,eAAC,GAAD,WACI,cAACyE,GAAD,CACIG,KAAK,WACLC,SAA2B,IAAlB7E,EAAMM,UACfqB,SAAU,SAAAW,GAAK,OAAItC,EAAM8E,mBAAmB9E,EAAM+E,GAAI,YAAazC,EAAMC,OAAOsC,YACpF,cAACtE,EAAD,CACED,UAAWN,EAAMM,UACjByE,GAAI/E,EAAM+E,GACV1C,YAAarC,EAAMgF,YACnB1D,aAActB,EAAMgF,YACpBrD,SAAU,SAAAW,GAAK,OAAItC,EAAM8E,mBAAmB9E,EAAM+E,GAAI,cAAezC,EAAMC,OAAOlB,UAElF,cAAC,EAAD,CACEA,MAAOrB,EAAMiF,SACbtD,SAAU,SAACW,EAAOjB,GAAR,OAAkBrB,EAAM8E,mBAAmB9E,EAAM+E,GAAI,WAAY1D,IAC3EE,IAAK,EACLC,KAAK,UAET,cAAC0D,GAAA,EAAD,CAAY,aAAW,SAAS1D,KAAK,QAAQqB,QAAS,kBAAM7C,EAAMmF,aAAanF,EAAM+E,KAAKK,GAAI,CAACC,QAAS,GAAxG,SACI,cAAC,KAAD,CAAY3D,SAAS,QAAQ0D,GAAI,CAACpE,MAAO,uBC9CnDc,GAAYpC,IAAOmC,IAAV,sHAkCAyD,I,GAAAA,GA1Bf,SAAkBtF,GAChB,MAAoCgC,mBAAS,MAA7C,mBAAOuD,EAAP,KAAmBC,EAAnB,KACIC,EAAczF,EAAM0F,KAQxB,OANmB,IAAf1F,EAAM2F,KACRF,EAAcA,EAAYG,QAAO,SAAAC,GAAC,OAAIA,EAAEvF,aAClB,IAAfN,EAAM2F,OACbF,EAAcA,EAAYG,QAAO,SAAAC,GAAC,OAAKA,EAAEvF,cAIzC,cAAC,GAAD,UACGmF,EAAYlB,KAAI,SAAAsB,GAAC,OAClB,cAAC,GAAD,aACEC,WAAY,SAACf,GAAD,OACRS,EAAcT,IACdD,mBAAoB9E,EAAM8E,mBAC9BK,aAAcnF,EAAMmF,aACpBY,SAAUF,EAAEd,KAAOQ,GAEfM,GADCA,EAAEd,UC5BTjD,GAAYpC,IAAOmC,IAAV,+CAyCAmE,OArCf,SAAyBhG,GACrB,IAAIiG,EAEJ,GAAIjG,EAAMkG,QACND,EAAa,8CACV,GAAIjG,EAAMqB,MAAO,CACpB,IAAIqE,EAAO1F,EAAMqB,MAAM8E,KAAK5B,KAAI,SAAC6B,GAAD,OAASA,EAAIV,UAC3B,YAAd1F,EAAM2F,KACND,EAAOA,EAAKE,QAAO,SAACQ,GAAD,OAASA,EAAI9F,aACX,cAAdN,EAAM2F,OACbD,EAAOA,EAAKE,QAAO,SAACQ,GAAD,OAAUA,EAAI9F,cAGrC2F,EAAa,cAAC,GAAD,UACC,cAAC,GAAD,CACEP,KAAMA,EACNP,aAAcnF,EAAMqG,iBACpBvB,mBAAoB9E,EAAMsG,uBAC1BX,KAAM3F,EAAM2F,cAK5BM,EAAa,6BAAKjG,EAAMuG,MAAMC,UAOlC,OACA,mCACKP,K,mCC/BM,SAASQ,GAAezG,GACrC,MAAgC0G,IAAM1E,SAAS,eAA/C,mBAAO2E,EAAP,KAAiBC,EAAjB,KAOA,OACE,cAACC,GAAA,EAAD,CAAgB9B,GAAG,wBAAwB+B,MAAO9G,EAAM+G,cAAcJ,GAAtE,SAEIK,OAAOC,KAAKjH,EAAM+G,eAAexC,KAAI,SAAC2C,GAAD,OACnC,cAACC,GAAA,EAASC,KAAV,CAEEjG,UAAU,iBACV0B,QAAS,SAACP,GAAD,OAZiBqD,EAYqBuB,EAZfG,EAYuBrH,EAAMqH,aAXrET,EAAYjB,QACZ0B,EAAa1B,GAFa,IAAQA,EAAM0B,GASlC,SAKGrH,EAAM+G,cAAcG,IAJhB,kBAAoBA,QCtBrC,I,YAAMI,GAEO,QAFPA,GAGO,QAHPA,GAIM,QAJNA,GAKM,SALNA,GAMO,SANPA,GAOO,SAGAC,GAAU,CACnBC,QAAQ,eAAD,OAVE,QAUF,KACPC,QAAQ,eAAD,OAAiBH,GAAjB,KACPI,QAAQ,eAAD,OAAiBJ,GAAjB,KACPK,OAAO,eAAD,OAAiBL,GAAjB,KACNM,OAAO,eAAD,OAAiBN,GAAjB,KACNO,QAAQ,eAAD,OAAiBP,GAAjB,KACPQ,QAAQ,eAAD,OAAiBR,GAAjB,MCaXS,IAASC,cARc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,GAAKR,IAASS,YACdC,GAAa,kBAIb3G,GAAYpC,IAAOmC,IAAV,kPAED0F,GAAQC,QAIRD,GAAQK,OAIRL,GAAQO,SAShBY,GAAShJ,IAAOmC,IAAV,2IAQN8G,GAAOjJ,IAAOmC,IAAV,mIAQJ+G,GAAQlJ,IAAOmC,IAAV,4FAkIIgH,OA3Hf,WAEE,IAKIC,EALJ,EAAwB9G,mBAAS,eAAjC,mBAAO2D,EAAP,KAAaoD,EAAb,KAEIC,GAAe,EAKjBF,EADW,aAATnD,EACM4C,GAAGE,WAAWA,IAAYQ,QAAQtD,EAAM,QAExC4C,GAAGE,WAAWA,IAAYQ,QAAQtD,GAI5C,MAAgCuD,YAAcJ,GAA9C,mBAAOzH,EAAP,KAAc6E,EAAd,KAAuBK,EAAvB,KAUA,SAASF,EAAiB8C,GACxBZ,GAAGE,WAAWA,IAAYrC,IAAI+C,GAAQC,SAiBxC,SAAS9C,EAAuB6C,EAAQE,EAAOhI,GAC7CkH,GAAGE,WAAWA,IAAYrC,IAAI+C,GAAQG,OAAtC,eAA+CD,EAAQhI,IA5C5C,4CA+Cb,4BAAAwE,EAAA,6DACQ0D,EAAWhB,GAAGE,WAAWA,IADjC,SAEyBc,EAASC,MAAM,YAAa,MAAM,GAAMC,MAFjE,cAGWC,SAAQ,SAAAtD,GACfmC,GAAGE,WAAWA,IAAYrC,IAAIA,EAAIrB,IAAIqE,YAIxCJ,GAAe,EARjB,4CA/Ca,sBA2Db,IAAK9C,GAAW7E,EAAO,CACnB,IAAIqE,EAAOrE,EAAM8E,KAAK5B,KAAI,SAAC6B,GAAD,OAASA,EAAIV,UACvCsD,EAA8D,IAA/CtD,EAAKE,QAAO,SAAA+D,GAAI,OAAIA,EAAKrJ,aAAWsJ,OAIvD,OACE,mCACI,eAAC,GAAD,CAAWzI,UAAU,MAArB,UACE,eAACuH,GAAD,WACE,cAACE,GAAD,oBACA,cAACnC,GAAD,CAAgBY,aAAc0B,EAAShC,cArD3B,CACpB,YAAgB,eAChB,SAAa,WACb,YAAgB,oBAqDV,eAAC4B,GAAD,WACE,cAAC,EAAD,CAASjG,UA7CnB,SAAuBsC,EAAaC,EAAU4E,GAC5C,IAAM9E,EAAK+E,cACXvB,GAAGE,WAAWA,IAAYrC,IAAIrB,GAAIgF,IAChC,CACEhF,GAAIA,EACJC,YAAaA,EACb1E,WAAW,EACX2E,SAAUA,EACV+E,YAAajC,IAASS,UAAUyB,UAAUC,WAuCtC,eAAC,GAAD,WACE,8BACE,cAAC,GAAD,CACEvD,SAAUhB,EACVmD,MAAOA,EACP5C,QAASA,EACT7E,MAAOA,EACPsE,KAAM,MACNY,MAAOA,EACPD,uBAAwBA,EACxBD,iBAAkBA,KATb,OAYT,8BACE,cAAC,GAAD,CACEM,SAAUhB,EACVmD,MAAOA,EACP5C,QAASA,EACT7E,MAAOA,EACPsE,KAAM,WACNY,MAAOA,EACPD,uBAAwBA,EACxBD,iBAAkBA,KATb,QAYT,8BACE,cAAC,GAAD,CACEM,SAAUhB,EACVmD,MAAOA,EACP5C,QAASA,EACT7E,MAAOA,EACPsE,KAAM,aACNY,MAAOA,EACPD,uBAAwBA,EACxBD,iBAAkBA,KATb,qBAeb,cAAC,EAAD,CAA0BvG,UAAWkJ,EAAcnF,0BApH9C,mDCvEAsG,OAJf,SAAqBnK,GACjB,OAAO,cAAC,GAAD,CAAKoK,YAAapK,EAAMoK,eCOpBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.31f4ac42.chunk.js","sourcesContent":["import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 5px 12px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot}/>;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextAreaAutosize = styled(TextareaAutosize)`\n  outline: none;  \n  background-color: black;\n  color: ${prop => prop.completed ? '#555555' : 'lightgray'};\n  border: none;\n  width: 60%;\n  &:focus {\n    border: none;\n    border-bottom: 2px solid gray;\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  resize: none;\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextAreaAutosize {...props} />;\n  }","import Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n    margin: \"0 10px\",\n    \"& > * + *\": {\n    marginTop: theme.spacing(1)\n    }\n},\nemptyStar: {\n    color: \"gray\"\n}\n}));\n\n\nconst StarsRating = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n        <Rating\n            value={props.value}\n            defaultValue={props.defaultValue}\n            max={3}\n            size=\"small\"\n            emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\n            // onChange={props.onChange}\n            onChange={props.onChange}\n        />\n        </div>\n    );\n};\nexport default StarsRating; ","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// import Rating from '@mui/material/Rating';\n// import StarBorderIcon from \"@material-ui/icons/StarBorder\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n  justify-content: space-between;\n  z-index: -1;\n`;\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority);\n    setTaskDescription(\"\");\n    setTaskPriority(0);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      props.onAddTask(taskDescription, taskPriority);\n      setTaskDescription(\"\");\n      setTaskPriority(0);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea \n          completed={false} \n          placeholder=\"New task\" \n          value={taskDescription} \n          onChange={event => setTaskDescription(event.target.value)} \n          nKeyDown={(handleKeyDown)}\n        /> \n        \n        <SubmitButtonContainer>\n          <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            value={taskPriority}\n            onChange={(event, value) => setTaskPriority(value)}\n            // onPriorityChange={setTaskPriority}\n            max={3}\n            size=\"small\"\n          />\n          \n          <OurButton \n            className=\"submitButton\" \n            disabled={taskDescription===\"\"} \n            variant=\"contained\" \n            onClick={handleSubmit}\n          >\n            Add\n          </OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default NewTask;\n\n","import styled from 'styled-components';\n\n// Local imports\nimport './DeleteAllCompletedButton';\nimport OurButton from './OurButton';\n\n\n// Create custom styled components\nconst Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: black;\n    opacity: 100%;\n    width: 100vw;\n    height: 100vh;\n    color: white;\n    display: flex;\n`;\n\nconst Modal = styled.div`\n    opacity: none;\n    opacity: 1;\n    background-color: rgb(46, 46, 46, 100);\n    background: rgb(46, 46, 46);\n    \n    border-radius: 5px;\n    border-color: transparent;\n    border-style: none;\n    margin: 0 auto;\n    height: 200px;\n    width: 300px;\n    padding: 10px;\n    position: relative;\n    align-items: center;\n    top: 150px;\n`;\n\nconst ButtonContainer = styled.div`\n    padding: 10px 10px;\n    width: 70%;\n    display: flex;\n    justify-content: space-evenly;\n    margin: auto;\n`;\n\n\nfunction Alert(props) {\n    return (\n    <Backdrop>\n        <Modal>\n            {props.children}\n                <ButtonContainer>\n                    <OurButton\n                        onClick={props.onClose}>\n                        {props.cancelText ? props.cancelText : \"Cancel\"}\n                    </OurButton>\n                    <OurButton\n                        onClick={props.onOK}>\n                        {props.OKText ? props.OKText : \"Ok\"}\n                    </OurButton>\n                </ButtonContainer>\n        </Modal>\n    </Backdrop>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\n// import './Alert.css';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  font-size: 4px;\n  height: 10%;\n`;\n\nconst ModalText = styled.div`\n  color: white;\n  font-size: 20px;\n  padding: 20px;\n  opacity: 100%;\n`;\n\n\nfunction DeleteAllCompletedButton(props) {\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal(modalState) {\n    setShowAlert(modalState);\n  }\n\n  function handleAlertOK() {\n    props.onDeleteAllCompletedTasks();\n    toggleModal(false);\n  }\n\n  return (\n    <>\n      <Container> \n        <OurButton disabled={props.disabled} onClick={() => toggleModal(true)}>Delete Completed</OurButton>\n        {showAlert &&\n          <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n            <ModalText>\n              Are you sure you want to delete all completed tasks?\n            </ModalText>\n          </Alert>\n        }\n      </Container>\n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return (\n        <li className={classNames.join(\" \")} onClick={() => props.onClickTab(props.label)}>\n                {props.label}\n        </li>\n    )\n}","import {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => setActiveTab(child.key)}/>\n                    )\n                }\n            </ol>\n            {props.children.map((child) => activeTab === child.key && child)}\n        </div>\n    );\n}\n\nexport default TabList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import Rating from '@mui/material/Rating';\n// import StarBorderIcon from \"@material-ui/icons/StarBorder\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n    width: 4vw;\n    height: 4vw;\n    margin: 0 2vw 2vw 0;\n`;\n\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n              <StarsRating\n                value={props.priority}\n                onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n                max={3}\n                size=\"small\"\n              />\n            <IconButton aria-label=\"delete\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 100%;\n`;\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  let displayData = props.data\n  \n  if (props.view === 1) \n    displayData = displayData.filter(a => a.completed)\n  else if (props.view === 2)\n    displayData = displayData.filter(a => !a.completed)\n\n\n  return (\n    <Container>\n      {displayData.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n            onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </Container>\n  );\n}\n\nexport default TaskList;\n","import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 55vh;\n`\n\nfunction TasksSortedList(props) {\n    let appContent;\n    // Pass in a filtered prop\n    if (props.loading) {\n        appContent = <h1>Loading</h1>\n    } else if (props.value) {\n        let data = props.value.docs.map((doc) => doc.data())\n        if (props.view == \"Complete\") {\n            data = data.filter((doc) => doc.completed);\n        } else if (props.view == \"Incomplete\") {\n            data = data.filter((doc) => !doc.completed);\n        }\n        \n        appContent = <Container> \n                      <TaskList\n                        data={data} \n                        onDeleteTask={props.handleDeleteTask}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        view={props.view}\n                      /> \n                    </Container>\n\n    } else {\n        appContent = <h1>{props.error.message}</h1>\n    }\n\n\n\n\n\n    return (\n    <>\n        {appContent}\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nimport '../css/Dropdown.css';\n\nexport default function CustomDropdown(props) {\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    onSelectView(view);\n  };\n\n  return (\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item\n            key={\"drop-down-item-\" + option}\n            className=\"drop-down-item\"\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n      }\n    </DropdownButton>\n\n  );\n}","const sizes = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px',\n};\n\nexport const devices = {\n    mobileS: `(min-width: ${sizes.mobileS})`,\n    mobileM: `(min-width: ${sizes.mobileM})`,\n    mobileL: `(min-width: ${sizes.mobileL})`,\n    tablet: `(min-width: ${sizes.tablet})`,\n    laptop: `(min-width: ${sizes.laptop})`,\n    laptopL: `(min-width: ${sizes.laptopL})`,\n    desktop: `(min-width: ${sizes.desktop})`,\n  };","// React imports\nimport { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Local imports\n// import TaskList from './components/TaskList';\nimport NewTask from './components/Tasks/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\n// import ViewSelector from './components/ViewSelector';\nimport TabList from './components/Tabs/TabList';\nimport TasksSortedList from './components/Tasks/TasksSortedList';\nimport CustomDropdown from './components/CustomDropdown';\n\nimport './App.css';\nimport { devices } from './components/Design';\n\n// Set up Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst collection = \"cherrymar-tasks\";\n\n\n// Create custom styled components\nconst Container = styled.div`\n\n  // @media ${devices.mobileS} { \n  //   max-width: 90vw;\n  // }\n\n  // @media ${devices.laptop} { \n  //   max-width: 1000px;\n  // }\n\n  // @media ${devices.desktop} { \n  //   max-width: 2000px;\n  // }\n\n  max-width: 90vw;\n  margin: 5% auto;\n\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10vh;\n`;\n\nconst Body = styled.div`\n  height: 75vh;\n  z-index: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  margin: 10px 0;\n`\nconst Title = styled.div`\n  font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\n\nfunction App() {\n  // Hooks for managing view state\n  const [view, setView] = useState(\"dateCreated\");\n\n  let hasCompleted = false\n\n  // Retrieve data from Firebase\n  let query;\n  if (view === \"priority\") {\n    query = db.collection(collection).orderBy(view, \"desc\");\n  } else {\n    query = db.collection(collection).orderBy(view);\n\n  }\n  \n  const [value, loading, error] = useCollection(query);\n\n  const sortByOptions = {\n    \"dateCreated\" : \"Date Created\", \n    \"priority\" : \"Priority\", \n    \"description\" : \"Description\",\n  }\n  const options = ['dateCreated', 'priority', 'description'];\n  \n  // Helper functions\n  function handleDeleteTask(taskId) {\n    db.collection(collection).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority, dueDate) {\n    const id = generateUniqueID();\n    db.collection(collection).doc(id).set(\n      {\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n        // dateDue: dueDate\n      }\n    )\n  }\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    db.collection(collection).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    const tasksRef = db.collection(collection);\n    const snapshot = await tasksRef.where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      db.collection(collection).doc(doc.id).delete();\n    });\n\n    // Just deleted all completed tasks\n    hasCompleted = false;\n  }\n\n\n  if (!loading && value) {\n      let data = value.docs.map((doc) => doc.data())\n      hasCompleted = data.filter(task => task.completed).length !== 0\n  }\n\n\n  return (\n    <>\n        <Container className=\"App\">\n          <Header>\n            <Title>Tasks</Title>\n            <CustomDropdown onSelectView={setView} sortByOptions={sortByOptions}/>\n          </Header>\n\n          <Body>\n            <NewTask onAddTask={handleAddTask}/>\n          \n            <TabList>\n              <div key=\"All\">\n                <TasksSortedList \n                  sortView={view} \n                  query={query} \n                  loading={loading} \n                  value={value} \n                  view={\"All\"} \n                  error={error} \n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n              <div key=\"Done\">\n                <TasksSortedList \n                  sortView={view} \n                  query={query} \n                  loading={loading} \n                  value={value} \n                  view={\"Complete\"} \n                  error={error} \n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n              <div key=\"In Progress\">\n                <TasksSortedList \n                  sortView={view} \n                  query={query} \n                  loading={loading} \n                  value={value} \n                  view={\"Incomplete\"} \n                  error={error} \n                  handleTaskFieldChanged={handleTaskFieldChanged} \n                  handleDeleteTask={handleDeleteTask}\n                />\n              </div>\n            </TabList>\n          </Body>\n\n          <DeleteAllCompletedButton disabled={!hasCompleted} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n        </Container>  \n    </>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}