{"version":3,"sources":["images/logo.png","reportWebVitals.js","backend/store/actions/actionTypes.js","backend/store/reducers/authReducer.js","backend/store/reducers/appReducer.js","backend/store/reducers/index.js","backend/Firebase/Firebase.js","backend/store/index.js","components/Loader/Loader.js","backend/store/actions/authActions.js","backend/store/actions/appActions.js","components/LogIn/LogInSchemas.js","components/LogIn/LogInForm.js","components/SignUp/SignUpLink.js","constants/routes.js","components/Landing/Landing.js","components/Misc/Button.js","components/LogOut/LogOut.js","components/LogIn/LogInLink.js","components/SignUp/SignUpSchema.js","components/SignUp/SignUpForm.js","components/SignUp/SignUpPage.js","components/Tasks/SelectSortView.js","components/Tasks/Tabs/Tab.js","components/Tasks/Tabs/TabList.js","components/Misc/AutoResizeTextArea.js","components/Tasks/List/AddTaskList.js","components/Tasks/List/DeleteTaskList.js","components/Tasks/List/TaskList.js","components/Tasks/List/TaskListPage.js","components/Misc/StarsRating.js","components/Tasks/Item/AddTaskItem.js","components/Tasks/Item/DeleteTaskItem.js","components/Tasks/Item/EditTaskItem.js","components/Tasks/Item/TaskItem.js","components/Tasks/Item/TaskItemList.js","components/Tasks/Item/DeleteAllAlert.js","components/Tasks/Item/DeleteAllCompletedButton.js","components/Tasks/Item/TaskItemPage.js","components/Tasks/List/ShareTaskPopup.js","components/Tasks/List/ShareTaskList.js","components/Tasks/TaskPage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","GET_TASK_LISTS","GET_TASK_ITEMS","initialState","error","loading","type","userID","recoverPassword","verifyEmail","profileEdit","friendsQuery","tasksLists","tasksItems","listId","listName","onListSelected","sortView","filterView","hasCompleted","addTaskList","editTaskList","deleteTaskList","shareTaskList","addTaskItem","editTaskItem","deleteTaskItem","combineReducers","auth","state","arguments","length","undefined","payload","id","Object","objectSpread2","app","actions","firebase","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","composeEnhancers","compose","store","createStore","rootReducer","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","Loader","react_default","a","createElement","className","clean","TASKS_LISTS_COLLECTION","TASKS_ITEMS_SUBCOLLECTION","selectList","data","_ref26","asyncToGenerator","regenerator_default","mark","_callee13","dispatch","getState","_ref25","wrap","_context13","prev","next","currentUser","console","log","getTaskItems","taskItems","stop","_x37","_x38","_x39","apply","this","getTaskList","_callee18","user","taskListData","_context18","collection","where","email","get","querySnapshot","forEach","doc","push","catch","_callee19","_context19","orderBy","document","filter","completed","LogInSchema","Yup","shape","required","password","min","mapDispatchToProps","logInEmail","_ref6","_callee3","_ref5","res","_context3","signInWithEmailAndPassword","sent","uid","t0","message","_x7","_x8","_x9","logInGoogle","_ref8","_callee4","_ref7","_context4","signInWithPopup","GoogleAuthProvider","exists","set","firstName","additionalUserInfo","profile","given_name","lastName","family_name","username","split","friends","friendRequests","_x10","_x11","_x12","cleanUp","connect","displayError","display","useEffect","Fragment","formik_esm","initialValues","validationSchema","onSubmit","_ref3","_callee","values","_ref2","resetForm","setSubmitting","_context","_x","_x2","_ref4","errors","touched","isSubmitting","join","name","render","msg","style","disabled","onClick","SignUpLink","react_router_dom","to","Landing","src","logo","alt","LogIn_LogInForm","SignUp_SignUpLink","CustomButtonRoot","styled","_templateObject","taggedTemplateLiteral","buttonUnstyledClasses","active","focusVisible","Button","props","react","ButtonUnstyled","assign","component","logout","_callee2","_context2","signOut","_x4","_x5","_x6","appCleanUp","LogInLink","SignUpSchema","confirmPassword","oneOf","signUp","createUserWithEmailAndPassword","sendEmailVerification","friendInvites","_x3","SignUpPage","SignUp_SignUpForm","LogIn_LogInLink","sortByOptions","dateCreated","priority","description","setSortByView","_ref32","_callee16","_ref31","_context16","_x46","_x47","_x48","initialSortView","_useState","useState","_useState2","slicedToArray","setSortView","DropdownButton","title","keys","map","option","Dropdown","Item","aria-label","key","event","view","Tab","classNames","activeTab","label","tabIndex","onClickTab","onKeyDown","setFilterByView","_ref34","_callee17","_ref33","_context17","_x49","_x50","_x51","initialFilterView","children","setActiveTab","child","tab","StyledTextAreaAutosize","TextareaAutosize","AutoResizeTextArea_templateObject","prop","AutoResizeTextArea","owner","sharedWith","setStateListName","handleSubmit","generateUniqueID","placeholder","value","onChange","target","variant","delete","currentListId","IconButton","size","sx","padding","Delete_default","fontSize","color","CustomButton","TaskList_templateObject","ListContainer","div","_templateObject2","index","List_DeleteTaskList","TaskListPage","List_AddTaskList","List_TaskList","useStyles","makeStyles","theme","root","margin","& > * + *","marginTop","spacing","emptyStar","StarsRating","classes","Rating","defaultValue","max","emptyIcon","StarBorder_default","_ref12","_callee6","_ref11","_context6","Timestamp","now","_x16","_x17","_x18","taskDescription","setTaskDescription","_useState3","_useState4","taskPriority","setTaskPriority","Misc_StarsRating","_ref16","_callee8","_ref15","_context8","taskId","_x22","_x23","_x24","_ref14","_callee7","_ref13","_context7","update","defineProperty","field","_x19","_x20","_x21","checked","toString","TaskItem","Item_EditTaskItem","Item_DeleteTaskItem","Container","TaskItemList_templateObject","selectedId","setSelectedId","task","onRowClick","selected","Backdrop","DeleteAllAlert_templateObject","Modal","DeleteAllAlert_templateObject2","ButtonContainer","_templateObject3","DeleteAllAlert","cancelText","onClose","OKText","onOK","DeleteAllCompletedButton_templateObject","ModalText","DeleteAllCompletedButton_templateObject2","deleteAllTaskItems","_ref18","_callee9","_ref17","_context9","_x25","_x26","_x27","showAlert","setShowAlert","DeleteAllCompletedButton_Container","Item_DeleteAllAlert","TaskItemPage_templateObject","TaskItemPage","Item_TaskItemList","Item_DeleteAllCompletedButton","ShareTaskPopup_templateObject","ShareTaskPopup_templateObject2","ShareTaskPopup_templateObject3","Input","input","_templateObject4","Text","_templateObject5","InputContainer","_templateObject6","setEmail","shareEmail","ShareTaskPopup_Backdrop","ShareTaskPopup_Modal","ShareTaskPopup_ButtonContainer","ShareTaskList_templateObject","ShareTaskList_templateObject2","ShareTaskList_Container","Share_default","List_ShareTaskPopup","handleAlertOK","ShareTaskList_ModalText","TaskPage_templateObject","TaskPage_templateObject2","userId","useMediaQuery","maxWidth","components_LogOut_LogOut","Tasks_SelectSortView","List_ShareTaskList","Item_AddTaskItem","Tabs_TabList","getLists","_ref28","_callee14","_ref27","_context14","_x40","_x41","_x42","emailVerified","routes","sideDrawer","react_router","exact","path","LogOut","TaskPage","getElementById","ReactDOM","components_Loader_Loader","firebaseAuthIsReady","es","src_App_0"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yRCYzBC,UAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCJ,EAAAK,EAAA,GAAAC,KAAAN,EAAAO,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,gDCuDDW,EAAiB,iBACjBC,EAAiB,iBC7DxBC,EAAe,CACjBC,MAAO,KACPC,SAAS,EACTC,KAAM,KACNC,OAAQ,KAERC,gBAAiB,CACbJ,MAAO,KACPC,SAAS,GAGbI,YAAa,CACTL,MAAO,KACPC,SAAS,GAGbK,YAAa,CACTN,MAAO,KACPC,SAAS,IClBXF,EAAe,CACjBC,MAAO,KACPC,SAAS,EACTC,KAAM,KAENK,cAAc,EACdC,WAAY,KACZC,WAAY,KAEZC,OAAQ,KACRC,SAAU,KACVC,gBAAgB,EAEhBC,SAAU,cACVC,WAAY,MACZC,cAAc,EAIdC,YAAa,CACThB,MAAO,KACPC,SAAS,GAGbgB,aAAc,CACVjB,MAAO,KACPC,SAAS,GAGbiB,eAAgB,CACZlB,MAAO,KACPC,SAAS,GAGbkB,cAAe,CACXnB,MAAO,KACPC,SAAS,GAQbmB,YAAa,CACTpB,MAAO,KACPC,SAAS,GAGboB,aAAc,CACVrB,MAAO,KACPC,SAAS,GAGbqB,eAAgB,CACZtB,MAAO,KACPC,SAAS,IClDFsB,cAAgB,CAC3BC,KFeW,WAA+C,IAA9CC,EAA8CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC3B,EAAsCR,EAAAmC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAvB1B,EAAuBX,EAAvBW,KAAM2B,EAAiBtC,EAAjBsC,QAASC,EAAQvC,EAARuC,GAClD,OAAQ5B,GAEJ,ID1BwB,mBC6BxB,ID5ByB,oBC6BrB,OAAO6B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKN,GAAZ,IAAmBxB,SAAS,IAEhC,ID7BiB,YC8Bb,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKN,GAAZ,IAAmBzB,MAAO6B,EAAS5B,SAAS,IAEhD,IDjCoB,eCkChB,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAKN,GAAZ,IAAmBzB,OAAO,EAAOC,SAAS,EAAOE,OAAQ2B,IAG7D,IDlCsB,iBCmClB,OAAAC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIrB,gBAAgB2B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMrB,iBAAb,IAA8BH,SAAS,MAE9D,IDrCqB,gBCsCjB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIrB,gBAAgB2B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMrB,iBAAb,IAA8BH,SAAS,EAAOD,MAAO6B,MAE5E,ID3CwB,mBC4CpB,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIrB,gBAAgB2B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMrB,iBAAb,IAA8BH,SAAS,EAAOD,OAAO,MAG5E,ID9CgB,WC+CZ,OAAO+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIzB,MAAO,KACPC,SAAS,EACTC,KAAM,KACNE,gBAAgB2B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACTN,EAAMrB,iBADE,IAEXH,SAAS,EACTD,MAAO,OAEXK,YAAY0B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAMpB,aADF,IAEPJ,SAAS,EACTD,MAAO,OAEXM,YAAYyB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAMnB,aADF,IAEPL,SAAS,EACTD,MAAO,SAInB,IDhEoB,eCiEhB,OAAO+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIpB,YAAY0B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMpB,aAAb,IAA0BJ,SAAS,MAGtD,IDrEsB,iBCsElB,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIpB,YAAY0B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMpB,aAAb,IAA0BL,OAAO,EAAOC,SAAS,MAGpE,ID1EmB,cC2Ef,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIpB,YAAY0B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMpB,aAAb,IAA0BL,MAAO6B,EAAS5B,SAAS,MAGtE,ID9E0B,qBC+EtB,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEInB,YAAYyB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMnB,aAAb,IAA0BL,SAAS,EAAMD,MAAO,SAGnE,IDnF4B,uBCoFxB,OAAO+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEInB,YAAYyB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMnB,aAAb,IAA0BL,SAAS,EAAOD,OAAO,MAGpE,IDxFyB,oBCyFrB,OAAO+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEInB,YAAYyB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMnB,aAAb,IAA0BL,SAAS,EAAOD,MAAO6B,MAEpE,QACI,OAAOJ,IEzGfQ,IDmEW,WAML,IANMR,EAMNC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GANc3B,EAMdR,EAAAmC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EALF1B,EAKEX,EALFW,KAAM2B,EAKJtC,EALIsC,QACNrB,EAIEjB,EAJFiB,WAAYC,EAIVlB,EAJUkB,WACZC,EAGEnB,EAHFmB,OAAQC,EAGNpB,EAHMoB,SAAUC,EAGhBrB,EAHgBqB,eAClBC,EAEEtB,EAFFsB,SAAUC,EAERvB,EAFQuB,WACVC,EACExB,EADFwB,aAIJ,OAAQb,GACJ,IF1D4B,uBE2DxB,OAAA6B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIT,YAAYe,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMT,aAAb,IAA0Bf,SAAS,MAEtD,IF7D2B,sBE8DvB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIT,YAAYe,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMT,aAAb,IAA0Bf,SAAS,EAAOD,MAAO6B,MAEpE,IFnE8B,yBEoE1B,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAIIT,YAAYe,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAMT,aADF,IAEPf,SAAS,EACTD,OAAO,MAInB,IF5E6B,wBE6EzB,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIR,aAAac,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMR,cAAb,IAA2BhB,SAAS,MAExD,IF/E4B,uBEgFxB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIR,aAAac,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMR,cAAb,IAA2BhB,SAAS,EAAOD,MAAO6B,MAEtE,IFrF+B,0BEsF3B,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAGIR,aAAac,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNN,EAAMR,cADD,IAERhB,SAAS,EACTD,OAAO,MAInB,IF7F+B,0BE8F3B,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIP,eAAea,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMP,gBAAb,IAA6BjB,SAAS,MAE5D,IFhG8B,yBEiG1B,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIP,eAAea,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMP,gBAAb,IAA6BjB,SAAS,EAAOD,MAAO6B,MAE1E,IFtGiC,4BEuG7B,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAGIP,eAAea,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACRN,EAAMP,gBADC,IAEVjB,SAAS,EAAOD,OAAO,MAInC,IF7GsB,iBE8GlB,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIL,YAAYW,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAML,aAAb,IAA0BnB,SAAS,MAEtD,IFhHqB,gBEiHjB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIL,YAAYW,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAML,aAAb,IAA0BnB,SAAS,EAAOD,MAAO6B,MAEpE,IFtHwB,mBEuHpB,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAIIL,YAAYW,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAML,aADF,IAEPnB,SAAS,EACTD,OAAO,MAInB,IF/HuB,kBEgInB,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIJ,aAAaU,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMJ,cAAb,IAA2BpB,SAAS,MAExD,IFlIsB,iBEmIlB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIJ,aAAaU,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMJ,cAAb,IAA2BpB,SAAS,EAAOD,MAAO6B,MAEtE,IFxIyB,oBEyIrB,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAIIJ,aAAaU,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNN,EAAMJ,cADD,IAERpB,SAAS,EACTD,OAAO,MAInB,IFjJyB,oBEkJrB,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIH,eAAeS,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMH,gBAAb,IAA6BrB,SAAS,MAE5D,IFpJwB,mBEqJpB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIH,eAAeS,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMH,gBAAb,IAA6BrB,SAAS,EAAOD,MAAO6B,MAE1E,IF1J2B,sBE2JvB,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAIIH,eAAeS,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACRN,EAAMH,gBADC,IAEVrB,SAAS,EAAOD,OAAO,MAoDnC,IFzL8B,yBE0L1B,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIN,cAAcY,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMN,eAAb,IAA4BlB,SAAS,MAE1D,IF5L6B,wBE6LzB,OAAA8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIN,cAAcY,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMN,eAAb,IAA4BlB,SAAS,EAAOD,MAAO6B,MAExE,IFlMgC,2BEmM5B,OAAAE,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIN,cAAcY,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMN,EAAMN,eAAb,IAA4BlB,SAAS,EAAOD,OAAO,MAoBxE,IF3OwB,mBE4OpB,OAAA+B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIf,OAAQA,EAERC,SAAUA,EACVC,eAAgBA,IAGxB,KAAKsB,EACD,OAAAH,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIjB,WAAYA,IAGpB,KAAK0B,EACD,OAAAH,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACON,GADP,IAEIhB,WAAYA,EACZM,aAAcA,IAGtB,IFvSqB,gBEwSjB,OAAOgB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIZ,SAAUA,IAGlB,IF5SuB,kBE6SnB,OAAOkB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIX,WAAYA,IAGpB,IFhTuB,kBEiTnB,MAAM,CACFd,MAAO,KACPC,SAAS,EACTC,KAAM,KAENK,cAAc,EACdC,WAAY,KACZC,WAAY,KAEZC,OAAQ,KACRC,SAAU,KACVC,gBAAgB,EAEhBC,SAAU,cACVC,WAAY,MACZC,cAAc,EAIdC,YAAa,CACThB,MAAO,KACPC,SAAS,GAGbgB,aAAc,CACVjB,MAAO,KACPC,SAAS,GAGbiB,eAAgB,CACZlB,MAAO,KACPC,SAAS,GAGbkB,cAAe,CACXnB,MAAO,KACPC,SAAS,GAQbmB,YAAa,CACTpB,MAAO,KACPC,SAAS,GAGboB,aAAc,CACVrB,MAAO,KACPC,SAAS,GAGbqB,eAAgB,CACZtB,MAAO,KACPC,SAAS,IAMrB,IF/XgB,WEgYZ,OAAO8B,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIzB,MAAO,KACPC,SAAS,EACTC,KAAM,KAENc,YAAYe,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAMT,aADF,IAEPhB,MAAO,KACPC,SAAS,IAGbgB,aAAac,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNN,EAAMR,cADD,IAERjB,MAAO,KACPC,SAAS,IAGbiB,eAAea,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACRN,EAAMP,gBADC,IAEVlB,MAAO,KACPC,SAAS,IAGbkB,cAAcY,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACPN,EAAMN,eADA,IAETnB,MAAO,KACPC,SAAS,IASbmB,YAAYW,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACLN,EAAML,aADF,IAEPpB,MAAO,KACPC,SAAS,IAGboB,aAAaU,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNN,EAAMJ,cADD,IAERrB,MAAO,KACPC,SAAS,IAGbqB,eAAeS,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACRN,EAAMH,gBADC,IAEVtB,MAAO,KACPC,SAAS,MAsBrB,QACI,OAAOwB,ICzcfU,SAAUC,oDCIdD,IAASE,cAVM,CACbC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBT,IAASU,YAGMV,QAAf,WCLMW,EAAqHC,IAW5GC,EATDC,YACVC,EACAJ,EACIK,6BAAmBhB,EAZT,CACdiB,YAAa,QAEbC,wBAAwB,EACxBC,mBAAmB,IASfC,yBAAepB,GACfqB,YAAgBC,IAAMC,kBAAkB,CAAEC,0BAAaC,yCCNhDC,EAbA,WACX,OACIC,EAAAC,EAAAC,cAAA,QAAMC,UAAY,kBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,YACdH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,+CCqFHE,EAAQ,iBAAO,CACxBhE,KPrFoB,8BQJlBiE,EAAyB,cACzBC,EAA4B,QA+SrBC,EAAa,SAAAC,GAAI,sBAAAC,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAC,EAAOC,EAAUC,EAAjBC,GAAA,IAAAnB,EAAAC,EAAAzB,EAAA,OAAAsC,EAAAV,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA6BvB,EAA7BmB,EAA6BnB,YAAaC,EAA1CkB,EAA0ClB,aAClEzB,EAAWwB,IACCC,IACLzB,EAASX,OAAO2D,YAC7BC,QAAQC,IAAI,aAAcf,EAAK3D,UAC3B2D,EAAK1D,gBACLgE,EAAS,CACL1E,KRhQoB,mBQiQpBQ,OAAQ4D,EAAK5D,OACbC,SAAU2D,EAAK3D,SACfC,eAAgB0D,EAAK1D,iBAEzB0E,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,aAEnF8D,EAAS,CACL1E,KRxQoB,mBQyQpBQ,OAAQ,KACR6E,UAAW,KACX5E,SAAU,KACVC,gBAAgB,IAnBM,wBAAAoE,EAAAQ,SAAAb,MAAJ,gBAAAc,EAAAC,EAAAC,GAAA,OAAApB,EAAAqB,MAAAC,KAAAnE,YAAA,aAiDfoE,mFAAf,SAAAC,EAA2BnB,EAAUjB,EAAaC,GAAlD,IAAAzB,EAAAU,EAAAmD,EAAAC,EAAA,OAAAxB,EAAAV,EAAAgB,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACIE,QAAQC,IAAI,eACNlD,EAAWwB,IACXd,EAAYe,IACZoC,EAAO7D,EAASX,OAAO2D,YAEzBc,EAAe,GANvBC,EAAAhB,KAAA,EAOUrC,EACDsD,WAAWhC,GACXiC,MAAM,aAAc,iBAAkBJ,EAAKK,OAC3CC,MACAjH,KAAK,SAACkH,GACHA,EAAcC,QAAQ,SAACC,GACnBR,EAAaS,KAAKD,EAAInC,YAG7BqC,MAAM,SAAC3G,GACJoF,QAAQC,IAAI,4BAA6BrF,KAjBrD,OAoBI4E,EAAS,CACL1E,KAAMgC,EACN1B,WAAYyF,IAtBpB,wBAAAC,EAAAV,SAAAO,sCA0BeT,yFAAf,SAAAsB,EAA4BhC,EAAUjB,EAAaC,EAAclD,EAAQG,EAAUC,GAAnF,IAAAqB,EAAAU,EAAApC,EAAAM,EAAA,OAAA0D,EAAAV,EAAAgB,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,UACIE,QAAQC,IAAI,eAAgB3E,EAAQG,EAAUC,GACxCqB,EAAWwB,IACXd,EAAYe,IACLzB,EAASX,OAAO2D,YAEzB1E,EAAa,GAEA,aAAbI,EARR,CAAAgG,EAAA3B,KAAA,gBAAA2B,EAAA3B,KAAA,EAScrC,EACLsD,WAAWhC,GACXsC,IAAI/F,GACJyF,WAAW/B,GACX0C,QAAQjG,EAAU,QAClByF,MACAjH,KAAK,SAACkH,GACHA,EAAcC,QAAQ,SAACO,GACnBtG,EAAWiG,KAAKK,EAASzC,YAjBzC,OAAAuC,EAAA3B,KAAA,wBAAA2B,EAAA3B,KAAA,GAqBcrC,EACLsD,WAAWhC,GACXsC,IAAI/F,GACJyF,WAAW/B,GACX0C,QAAQjG,GACRyF,MACAjH,KAAK,SAACkH,GACHA,EAAcC,QAAQ,SAACO,GACnBtG,EAAWiG,KAAKK,EAASzC,YA7BzC,QAkCuB,gBAAfxD,EACAL,EAAaA,EAAWuG,OAAO,SAACP,GAAD,OAAUA,EAAIQ,YACvB,SAAfnG,IACPL,EAAaA,EAAWuG,OAAO,SAACP,GAAD,OAASA,EAAIQ,aAG5ClG,EAAmE,GAApDN,EAAWuG,OAAO,SAACP,GAAD,OAASA,EAAIQ,YAAWtF,OAE7DiD,EAAS,CACL1E,KAAMgC,EACNzB,WAAYA,EACZM,aAAcA,IA7CtB,yBAAA8F,EAAArB,SAAAoB,iDC1XeM,EALKC,WAAaC,MAAM,CACnCf,MAAOc,SAAW,yBAAyBd,MAAM,yBAAyBgB,SAAS,2BACnFC,SAAUH,WAAaI,IAAI,EAAG,0CAA0CF,SAAS,gCCiE/EG,EAAqB,CACzBC,WHpBwB,SAAAnD,GAAI,sBAAAoD,EAAA3F,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAiD,EAAO/C,EAAUC,EAAjB+C,GAAA,IAAAjE,EAAAxB,EAAA0F,EAAA,OAAApD,EAAAV,EAAAgB,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAA6BvB,EAA7BiE,EAA6BjE,YACrDxB,EAAWwB,IAEjBiB,EAAS,CAAE1E,KPpDiB,qBOiDE4H,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EAKR/C,EAASX,OAAOuG,2BAA2BzD,EAAK+B,MAAO/B,EAAKgD,UALpD,OAKpBO,EALoBC,EAAAE,KAO1BpD,EAAS,CAAE1E,KPtDS,eOsDmB4B,GAAI+F,EAAI7B,KAAKiC,MAP1BH,EAAA5C,KAAA,iBAAA4C,EAAA7C,KAAA,GAAA6C,EAAAI,GAAAJ,EAAA,SAS1BlD,EAAS,CAAE1E,KPvDM,YOuDmB2B,QAASiG,EAAAI,GAAIC,UATvB,yBAAAL,EAAAtC,SAAAmC,EAAA,kBAAJ,gBAAAS,EAAAC,EAAAC,GAAA,OAAAZ,EAAA9B,MAAAC,KAAAnE,YAAA,IGqB5B6G,YHRyB,SAAAjE,GAAI,sBAAAkE,EAAAzG,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA+D,EAAO7D,EAAUC,EAAjB6D,GAAA,IAAA/E,EAAAC,EAAAzB,EAAAU,EAAAgF,EAAA,OAAApD,EAAAV,EAAAgB,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAA6BvB,EAA7B+E,EAA6B/E,YAAaC,EAA1C8E,EAA0C9E,aACnEzB,EAAWwB,IACXd,EAAYe,IAElBgB,EAAS,CAAE1E,KPjEkB,sBO6DEyI,EAAA1D,KAAA,EAAA0D,EAAAzD,KAAA,EAMT/C,EAASX,OAAOoH,gBAAgB,IAAIzG,EAASX,KAAKqH,oBANzC,cAMrBhB,EANqBc,EAAAX,KAAAW,EAAAzD,KAAA,GAOLrC,EAAUsD,WAlEhB,SAkE4CM,IAAIoB,EAAI7B,KAAKiC,KAAK3B,MAPnD,WAAAqC,EAAAX,KASdc,OATc,CAAAH,EAAAzD,KAAA,gBAAAyD,EAAAzD,KAAA,GAWjBrC,EAAUsD,WAtEJ,SAsEgCM,IAAIoB,EAAI7B,KAAKiC,KAAKc,IAAI,CAC9DjH,GAAI+F,EAAI7B,KAAKiC,IACbe,UAAWnB,EAAIoB,mBAAmBC,QAAQC,WAC1CC,SAAUvB,EAAIoB,mBAAmBC,QAAQG,YACzCC,SAAUzB,EAAI7B,KAAKK,MAAMkD,MAAM,KAAK,GACpClD,MAAOwB,EAAI7B,KAAKK,MAChBmD,QAAS,GACTC,eAAgB,KAlBG,QAAAd,EAAAzD,KAAA,iBAsBvBE,QAAQC,IAAI,uBAtBW,QAwB3BT,EAAS,CAAE1E,KPpFS,eOoFmB4B,GAAI+F,EAAI7B,KAAKiC,MAxBzBU,EAAAzD,KAAA,iBAAAyD,EAAA1D,KAAA,GAAA0D,EAAAT,GAAAS,EAAA,SA0B3B/D,EAAS,CAAE1E,KPrFM,YOqFmB2B,QAAS8G,EAAAT,GAAIC,UA1BtB,yBAAAQ,EAAAnD,SAAAiD,EAAA,kBAAJ,gBAAAiB,EAAAC,EAAAC,GAAA,OAAApB,EAAA5C,MAAAC,KAAAnE,YAAA,IGS7BmI,QAAS3H,GAGI4H,cAXS,SAAAlC,GAAA,IAAGpG,EAAHoG,EAAGpG,KAAH,MAAe,CACrCvB,QAASuB,EAAKvB,QACdD,MAAOwB,EAAKxB,QAS0BwH,EAAzBsC,CApEG,SAAAvK,GAA0D,IACtEwK,EADetC,EAAuDlI,EAAvDkI,WAAYc,EAA2ChJ,EAA3CgJ,YAAsBvI,GAAqBT,EAA9BU,QAA8BV,EAArBS,OAAO6J,EAActK,EAAdsK,QAe5D,OAXIE,EADA/J,EACe,CAACgK,QAAS,SAEV,CAACA,QAAS,QAG7BC,oBAAU,WACR,OAAO,WACLJ,MAED,CAACA,IAGF/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACEpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,cAAiB,CACf/D,MAAO,GACPiB,SAAU,IAEZ+C,iBAAoBnD,EACpBoD,SAAQ,eAAAC,EAAAxI,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA8F,EAAQC,EAARC,GAAA,IAAAC,EAAAC,EAAA,OAAAnG,EAAAV,EAAAgB,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAkByF,EAAlBD,EAAkBC,UAAWC,EAA7BF,EAA6BE,cAA7BC,EAAA3F,KAAA,EACJuC,EAAWgD,GADP,OAEVE,IACAC,GAAc,GAHJ,wBAAAC,EAAArF,SAAAgF,MAAJ,gBAAAM,EAAAC,GAAA,OAAAR,EAAA3E,MAAAC,KAAAnE,YAAA,IAMP,SAAAsJ,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAASC,EAApBH,EAAoBG,aAApB,OACCrH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlG,UAAY,gBAEhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ7E,OAAS4E,EAAO5E,OAAS,cAAc+E,KAAK,MACnFtH,EAAAC,EAAAC,cAAA,wBADF,IACyBF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,QAAQnL,KAAO,UAF/B,IAEyC4D,EAAAC,EAAAC,cAAA,WACvCF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,WAGhFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ5D,UAAY2D,EAAO3D,UAAY,cAAc8D,KAAK,MACzFtH,EAAAC,EAAAC,cAAA,2BADF,IAC4BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,WAAWnL,KAAO,aAFlC,IAE+C4D,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,cAGhFvH,EAAAC,EAAAC,cAAA,KAAGwH,MAASzB,GAAe/J,GAC3B8D,EAAAC,EAAAC,cAAA,UAAQ9D,KAAO,SAASuL,SAAYN,EAAclH,UAAY,kBAA9D,eAONH,EAAAC,EAAAC,cAAA,UAAQ0H,QAAS,kBAAMnD,MAAvB,wBCjDSoD,EANI,kBACf7H,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aAAjB,kBACiBH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAMC,GCLJ,UDKwB5H,UAAY,QAAtC,+BEGN,SAAS6H,IAEpB,OACIhI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,IAAOC,IAAMC,IAAI,UAGhDnI,EAAAC,EAAAC,cAAA,+BACIF,EAAAC,EAAAC,cAACkI,EAAD,MAEJpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACmI,EAAD,kDClBdC,GAAmBC,YAAO,SAAPA,CAAHC,MAAAvK,OAAAwK,EAAA,EAAAxK,CAAA,osBAiBhByK,IAAsBC,OAItBD,IAAsBE,aAKtBF,IAAsBf,UAQb,SAASkB,GAAOC,GAC7B,OAAOC,EAAA,cAACC,EAAA,EAAD/K,OAAAgL,OAAA,GAAoBH,EAApB,CAA2BI,UAAWZ,MC/B/C,IAoBM5E,GAAqB,CACzByF,ORUoB,iCAAAjC,EAAAjJ,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAM,SAAAwI,EAAOtI,EAAUC,EAAjB0F,GAAA,IAAA5G,EAAAxB,EAAA,OAAAsC,EAAAV,EAAAgB,KAAA,SAAAoI,GAAA,cAAAA,EAAAlI,KAAAkI,EAAAjI,MAAA,cAA6BvB,EAA7B4G,EAA6B5G,YAC/CxB,EAAWwB,IADOwJ,EAAAlI,KAAA,EAAAkI,EAAAjI,KAAA,EAGd/C,EAASX,OAAO4L,UAHF,OAAAD,EAAAjI,KAAA,gBAAAiI,EAAAlI,KAAA,EAAAkI,EAAAjF,GAAAiF,EAAA,SAMpB/H,QAAQC,IAAI8H,EAAAjF,GAAIC,SANI,yBAAAgF,EAAA3H,SAAA0H,EAAA,iBAAN,gBAAAG,EAAAC,EAAAC,GAAA,OAAAvC,EAAApF,MAAAC,KAAAnE,YAAA,IQTpB8L,WPyTwB,SAAAlJ,GAAI,OAAI,SAACM,GAC/BA,EAAS,CAAE1E,KR9TgB,uBeOhB4J,eAAQ,KAAMtC,GAAdsC,CAzBA,SAAAvK,GAA4B,IAAzB0N,EAAyB1N,EAAzB0N,OAAQO,EAAiBjO,EAAjBiO,WAYtB,OAXAvD,oBAAU,WAERuD,KACC,CAACP,IASFnJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAC2I,GAAD,CAAQjB,QAAS,kBAPrB8B,SACAP,MAMI,cCXMQ,GAPE,kBACd3J,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aAAjB,2BAEEH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAMC,GJPW,IIOS5H,UAAY,QAAtC,YC+BSyJ,GA7BXvG,WAAaC,MAAM,CACf4B,UACI7B,SAAW,wBACVE,SAAS,0BAEd+B,SACIjC,SAAW,wBAEfmC,SACInC,SAAW,4BACVI,IAAI,EAAG,0CACPF,SAAS,2BAEdhB,MACIc,SAAW,yBACVd,MAAM,yBACNgB,SAAS,yBAEdC,SACIH,WACCI,IAAI,EAAG,0CACPF,SAAS,2BAEdsG,gBACIxG,WACCyG,MAAM,CAACzG,MAAQ,YAAa,MAAO,yBACnCE,SAAS,+CC6DhBG,GAAqB,CACvBqG,OX1FkB,SAAAvJ,GAAI,sBAAAoG,EAAA3I,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA8F,EAAO5F,EAAUC,EAAjBtF,GAAA,IAAAoE,EAAAC,EAAAzB,EAAAU,EAAAgF,EAAA7B,EAAA,OAAAvB,EAAAV,EAAAgB,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAA6BvB,EAA7BpE,EAA6BoE,YAAaC,EAA1CrE,EAA0CqE,aAC9DzB,EAAWwB,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KPTiB,qBOMF2K,EAAA5F,KAAA,EAAA4F,EAAA3F,KAAA,EAKJ/C,EACbX,OACAsM,+BAA+BxJ,EAAK+B,MAAO/B,EAAKgD,UAP/B,cAKhBO,EALgBgD,EAAA7C,KAUhBhC,EAAO7D,EAASX,OAAO2D,YAVP0F,EAAA3F,KAAA,GAWhBc,EAAK+H,wBAXW,eAAAlD,EAAA3F,KAAA,GAahBrC,EAAUsD,WAhBA,SAgB4BM,IAAIoB,EAAI7B,KAAKiC,KAAKc,IAAI,CAC9DjH,GAAI+F,EAAI7B,KAAKiC,IACbe,UAAW1E,EAAK0E,UAChBI,SAAU9E,EAAK8E,SACfE,SAAUhF,EAAKgF,SACfjD,MAAO/B,EAAK+B,MACZmD,QAAS,GACTC,eAAgB,GAChBuE,cAAe,KArBG,QAwBtBpJ,EAAS,CAAE1E,KP5BS,eO4BmB4B,GAAI+F,EAAI7B,KAAKiC,MAxB9B4C,EAAA3F,KAAA,iBAAA2F,EAAA5F,KAAA,GAAA4F,EAAA3C,GAAA2C,EAAA,SA2BtBjG,EAAS,CAAE1E,KP9BM,YO8BmB2B,QAASgJ,EAAA3C,GAAIC,UA3B3B,yBAAA0C,EAAArF,SAAAgF,EAAA,kBAAJ,gBAAAM,EAAAC,EAAAkD,GAAA,OAAAvD,EAAA9E,MAAAC,KAAAnE,YAAA,IW2FtBmI,QAAS3H,GAGE4H,eAVS,SAAAlC,GAAA,IAAGpG,EAAHoG,EAAGpG,KAAH,MAAe,CACnCvB,QAASuB,EAAKvB,QACdD,MAAOwB,EAAKxB,QAQwBwH,GAAzBsC,CA9FI,SAAAvK,GAAyC,IACpDwK,EADc8D,EAAsCtO,EAAtCsO,OAAiB7N,GAAqBT,EAA9BU,QAA8BV,EAArBS,OAAO6J,EAActK,EAAdsK,QAe1C,OAXIE,EADA/J,EACe,CAACgK,QAAS,SAEV,CAACA,QAAS,QAG7BC,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAGA/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACApG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACIC,cAAiB,CAGbd,SAAU,GACVjD,MAAO,GACPiB,SAAU,GACVqG,gBAAiB,IAErBtD,iBAAoBqD,GACpBpD,SAAQ,eAAAC,EAAAxI,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA8F,EAAQC,EAARC,GAAA,IAAAC,EAAAC,EAAA,OAAAnG,EAAAV,EAAAgB,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAkByF,EAAlBD,EAAkBC,UAAWC,EAA7BF,EAA6BE,cAA7BC,EAAA3F,KAAA,EACF2I,EAAOpD,GADL,OAERE,IACAC,GAAc,GAHN,wBAAAC,EAAArF,SAAAgF,MAAJ,gBAAAM,EAAAC,GAAA,OAAAR,EAAA3E,MAAAC,KAAAnE,YAAA,IAMX,SAAAsJ,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAASC,EAApBH,EAAoBG,aAApB,OACDrH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlG,UAAY,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQlC,WAAaiC,EAAOjC,WAAa,cAAcoC,KAAK,MACzFtH,EAAAC,EAAAC,cAAA,6BADJ,IACgCF,EAAAC,EAAAC,cAAA,WAC5BF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,YAAYnL,KAAO,SAFrC,IAE8C4D,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,eAGlFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ9B,UAAY6B,EAAO7B,UAAY,cAAcgC,KAAK,MACvFtH,EAAAC,EAAAC,cAAA,4BADJ,IAC+BF,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,WAAWnL,KAAO,SAFpC,IAE6C4D,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,cAGlFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ5B,UAAY2B,EAAO3B,UAAY,cAAc8B,KAAK,MACvFtH,EAAAC,EAAAC,cAAA,2BADJ,IAC8BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,WAAWnL,KAAO,SAFpC,IAE6C4D,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,cAGlFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ7E,OAAS4E,EAAO5E,OAAS,cAAc+E,KAAK,MACjFtH,EAAAC,EAAAC,cAAA,wBADJ,IAC2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,QAAQnL,KAAO,UAFjC,IAE2C4D,EAAAC,EAAAC,cAAA,WACvCF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,WAGlFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQ5D,UAAY2D,EAAO3D,UAAY,cAAc8D,KAAK,MACvFtH,EAAAC,EAAAC,cAAA,2BADJ,IAC8BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,WAAWnL,KAAO,aAFpC,IAEiD4D,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,cAGlFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAa,CAAC,aAAciH,EAAQyC,iBAAmB1C,EAAO0C,iBAAmB,cAAcvC,KAAK,MACrGtH,EAAAC,EAAAC,cAAA,mCADJ,IACsCF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOkB,KAAO,kBAAkBnL,KAAO,aAF3C,IAEwD4D,EAAAC,EAAAC,cAAA,WACpDF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAcmB,OAAU,SAAAC,GAAG,OAAIzH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAf,IAA6BsH,EAA7B,MAAwCF,KAAO,qBAKlFvH,EAAAC,EAAAC,cAAA,KAAGwH,MAASzB,GAAe/J,GAC3B8D,EAAAC,EAAAC,cAAA,UAAQ9D,KAAO,SAASuL,SAAYN,EAAclH,UAAY,kBAA9D,mBC1DGiK,GAhBI,kBACjBpK,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YAAY8H,IAAOC,IAAMC,IAAM,UAGlDnI,EAAAC,EAAAC,cAACmK,GAAD,MAEArK,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAACoK,GAAD,iFCsBAC,GAAgB,CAClBC,YAAgB,eAChBC,SAAa,WACbC,YAAgB,eAwCdhH,GAAqB,CACvBiH,cZwQyB,SAAAnK,GAAI,sBAAAoK,EAAA3M,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAiK,EAAO/J,EAAUC,EAAjB+J,GAAA,IAAAjL,EAAAC,EAAA,OAAAa,EAAAV,EAAAgB,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,OAA6BvB,EAA7BiL,EAA6BjL,YAAaC,EAA1CgL,EAA0ChL,aAC3E0B,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRtUc,gBQsUeW,SAAUyD,EAAKzD,WAFtB,wBAAAgO,EAAArJ,SAAAmJ,MAAJ,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAA9I,MAAAC,KAAAnE,YAAA,KYrQlBoI,eAVS,SAAAY,KAAGvI,SAAH,IAAaF,EAAbyI,EAAazI,IAAb,MAAwB,CAC5CgN,gBAAiBhN,EAAIpB,SACrBH,OAAQuB,EAAIvB,OACZI,WAAYmB,EAAInB,aAOoB0G,GAAzBsC,CAzCQ,SAAAvK,GAA4D,IAAzD0P,EAAyD1P,EAAzD0P,gBAAiBnO,EAAwCvB,EAAxCuB,WAAYJ,EAA4BnB,EAA5BmB,OAAQ+N,EAAoBlP,EAApBkP,cAC3DrJ,QAAQC,IAAI,oBAAqB4J,GACjC,IAAAC,EAAgCC,mBAASF,GAAzCG,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAOrO,EAAPuO,EAAA,GAAiBE,EAAjBF,EAAA,GAQA,OACItL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,aACAH,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAgBzN,GAAG,wBAAwB0N,MAAOnB,GAAcxN,IAExDkB,OAAO0N,KAAKpB,IAAeqB,IAAI,SAACC,GAAD,OAC3B7L,EAAAC,EAAAC,cAAC4L,GAAA,EAASC,KAAV,CACIC,aAAYzB,GAAcsB,GAC1BI,IAAK,kBAAoBJ,EACzB1L,UAAU,iBACVyH,QAAS,SAACsE,GAAD,OAhBGC,EAgBmCN,EAfnEvK,QAAQC,IAAI,gBAAiB4K,GAC7BX,EAAYW,QACZxB,EAAc,CAAC/N,OAAQA,EAAQG,SAAUoP,EAAMnP,WAAYA,IAHnC,IAAQmP,IAkBX5B,GAAcsB,UChE5B,SAASO,GAAItD,GACxB,IAAMuD,EAAa,CAAC,iBAEhBvD,EAAMwD,YAAcxD,EAAMyD,OAC1BF,EAAWzJ,KAAK,mBASpB,OACI5C,EAAAC,EAAAC,cAAA,MACIsM,SAAS,IACTrM,UAAWkM,EAAW/E,KAAK,KAC3BM,QAAS,kBAAMkB,EAAM2D,WAAW3D,EAAMyD,QACtCG,UAXc,SAACR,GACD,MAAdA,EAAMD,KAA6B,UAAdC,EAAMD,KAC3BnD,EAAM2D,WAAW3D,EAAMyD,SAWlBzD,EAAMyD,OCVvB,OAoCM7I,GAAqB,CACvBiJ,gBd8S2B,SAAAnM,GAAI,sBAAAoM,EAAA3O,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAiM,EAAO/L,EAAUC,EAAjB+L,GAAA,IAAAjN,EAAAC,EAAA,OAAAa,EAAAV,EAAAgB,KAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,OAA6BvB,EAA7BiN,EAA6BjN,YAAaC,EAA1CgN,EAA0ChN,aAC7E0B,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KR1UgB,kBQ0UeY,WAAYwD,EAAKxD,aAFxB,wBAAA+P,EAAArL,SAAAmL,MAAJ,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAA9K,MAAAC,KAAAnE,YAAA,Kc3SpBoI,eAVS,SAAAY,KAAGvI,SAAH,IAAaF,EAAbyI,EAAazI,IAAb,MAAwB,CAC5CgP,kBAAmBhP,EAAInB,WACvBD,SAAUoB,EAAIpB,SACdH,OAAQuB,EAAIvB,SAOwB8G,GAAzBsC,CAxCC,SAAAvK,GAAwE,IAArEsB,EAAqEtB,EAArEsB,SAAUH,EAA2DnB,EAA3DmB,OAAQuQ,EAAmD1R,EAAnD0R,kBAAmBR,EAAgClR,EAAhCkR,gBAAiBS,EAAe3R,EAAf2R,SACrE9L,QAAQC,IAAI,sBAAuB4L,GACnC,IAAA/B,EAAkCC,mBAAS8B,GAA3C7B,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAOkB,EAAPhB,EAAA,GAAkB+B,EAAlB/B,EAAA,GAQA,OACItL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAENiN,EAASxB,IAAI,SAAC0B,GAAD,OACTtN,EAAAC,EAAAC,cAACkM,GAAD,CACIH,IAAKqB,EAAMrB,IACXM,MAAOe,EAAMrB,IACbK,UAAWA,EACXG,WAAY,kBAffc,EAeiCD,EAAMrB,IAdxD3K,QAAQC,IAAI,kBAAmBgM,GAC/BZ,EAAgB,CAAC3P,WAAYuQ,EAAKxQ,SAAUA,EAAUH,OAAQA,SAC9DyQ,EAAaE,GAHjB,IAAqBA,QAoBZH,EAASxB,IAAI,SAAC0B,GAAD,OAAWhB,IAAcgB,EAAMrB,KAAOqB,iBC/B1DE,GAAyBjF,aAAOkF,KAAPlF,CAAHmF,QAAAzP,OAAAwK,EAAA,EAAAxK,CAAA,qTAGf,SAAA0P,GAAI,MAAuB,SAAnBA,EAAKxK,UAAuB,UAAY,cAe9C,SAASyK,GAAmB9E,GAC1C,OAAO9I,EAAAC,EAAAC,cAACsN,GAA2B1E,GCdpC,UA+DMpF,GAAqB,CACvBxG,YhB9DuB,SAAAsD,GAAI,sBAAAoG,EAAA3I,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA8F,EAAO5F,EAAUC,EAAjBtF,GAAA,IAAAoE,EAAAC,EAAAzB,EAAAU,EAAAmD,EAAA,OAAAvB,EAAAV,EAAAgB,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAA6BvB,EAA7BpE,EAA6BoE,YAAaC,EAA1CrE,EAA0CqE,aACzEwB,QAAQC,IAAI,eACNlD,EAAWwB,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KRYqB,yBQhBD2K,EAAA5F,KAAA,EAMrBe,EAAO7D,EAASX,OAAO2D,YANF0F,EAAA3F,KAAA,EAQrBrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQqI,IAAI,CACpEjH,GAAIwC,EAAK5D,OACT2K,KAAM/G,EAAK+G,KACXsG,MAAO3L,EAAKK,MACZuL,WAAY,CAAC5L,EAAKK,SAZK,OAe3BP,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrE8D,EAAS,CAAE1E,KRCmB,2BQjBH2K,EAAA3F,KAAA,iBAAA2F,EAAA5F,KAAA,GAAA4F,EAAA3C,GAAA2C,EAAA,SAmB3BzF,QAAQC,IAAI,gBAAZwF,EAAA3C,IACAtD,EAAS,CAAE1E,KRFgB,sBQEmB2B,QAASgJ,EAAA3C,GAAIC,UApBhC,yBAAA0C,EAAArF,SAAAgF,EAAA,kBAAJ,gBAAAM,EAAAC,EAAAkD,GAAA,OAAAvD,EAAA9E,MAAAC,KAAAnE,YAAA,IgB+D3B2C,WAAYnC,EAEZ2H,QAAS3H,GAGE4H,eAfS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAClChC,QAASgC,EAAIjB,YAAYf,QACzBD,MAAOiC,EAAIjB,YAAYhB,MAEvBa,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAUoB0G,GAAzBsC,CAtEK,SAAAvK,GAAgF,IAA7E8E,EAA6E9E,EAA7E8E,WAAYrD,EAAiEzB,EAAjEyB,YAAsBhB,GAA2CT,EAApDU,QAAoDV,EAA3CS,OAAO6J,EAAoCtK,EAApCsK,QAAShJ,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAC/EoO,EAAqCC,mBAAS,IAA9CC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAOvO,EAAPyO,EAAA,GAAiByC,EAAjBzC,EAAA,GAiBA,SAAS0C,IACL,IAAIhQ,EAAKiQ,cACT1N,EAAW,CAAC3D,OAAQoB,EAAInB,SAAUA,EAAUC,gBAAgB,EAAMC,SAAUA,EAAUC,WAAYA,IAClGE,EAAY,CAACqK,KAAM1K,EAAUD,OAAQoB,EAAIjB,SAAUA,EAAUC,WAAYA,IACzE+Q,EAAiB,IAlBjB7R,GAEAoF,QAAQC,IAAIrF,GAKhBiK,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAgBJ,OACI/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAC0N,GAAD,CACI5B,aAAW,qBACX7I,UAAW,QACX+K,YAAY,gBACZC,MAAOtR,EACPuR,SAAU,SAAAlC,GAAK,OAAI6B,EAAiB7B,EAAMmC,OAAOF,QACjDzB,UAdU,SAACR,GACD,UAAdA,EAAMD,KACN+B,OAeAhO,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAW,oBACX7L,UAAU,eACVwH,SAAqB,KAAX9K,EACVyR,QAAQ,YACR1G,QAAS,kBAAMoG,MALnB,yCCANtK,GAAqB,CACvBtG,ejBC0B,SAAAoD,GAAI,sBAAAoD,EAAA3F,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAiD,EAAO/C,EAAUC,EAAjB+C,GAAA,IAAAjE,EAAAC,EAAAf,EAAA,OAAA4B,EAAAV,EAAAgB,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAA6BvB,EAA7BiE,EAA6BjE,YAAaC,EAA1CgE,EAA0ChE,aAC3DD,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KRrBwB,4BQkBD4H,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EAKPrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BkC,MAL7F,OAAAwB,EAAAE,KAMrBxB,QAAQ,SAAAC,GACb5D,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BqC,IAAIA,EAAI3E,IAAIuQ,WAEpHxP,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQ2R,SAE9DvM,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrE8D,EAAS,CAAE1E,KR7BsB,8BQiBH4H,EAAA5C,KAAA,iBAAA4C,EAAA7C,KAAA,GAAA6C,EAAAI,GAAAJ,EAAA,SAe9B1C,QAAQC,IAAI,mBAAZyC,EAAAI,IACAtD,EAAS,CAAE1E,KRhCmB,yBQgCmB2B,QAASiG,EAAAI,GAAIC,UAhBhC,yBAAAL,EAAAtC,SAAAmC,EAAA,kBAAJ,gBAAAS,EAAAC,EAAAC,GAAA,OAAAZ,EAAA9B,MAAAC,KAAAnE,YAAA,IiBA9B2C,WAAYnC,EACZ2H,QAAS3H,GAGE4H,eAfS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAClChC,QAASgC,EAAIf,eAAejB,QAC5BD,MAAOiC,EAAIf,eAAelB,MAC1BsS,cAAerQ,EAAIvB,OAEnBG,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aASoB0G,GAAzBsC,CAhDQ,SAAAvK,GAAgH,IAA7G2B,EAA6G3B,EAA7G2B,eAAgBmD,EAA6F9E,EAA7F8E,WAAqBrE,GAAwET,EAAjFU,QAAiFV,EAAxES,OAAO6J,EAAiEtK,EAAjEsK,QAASyI,EAAwD/S,EAAxD+S,cAAe5R,EAAyCnB,EAAzCmB,OAAQ2K,EAAiC9L,EAAjC8L,KAAMxK,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAwBlH,OArBId,GAEAoF,QAAQC,IAAIrF,GAKhBiK,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAWA/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CAAYzC,aAAY,UAAYzE,EAAO,QAASmH,KAAK,QAAQ9G,QAAS,kBAR1E4G,IAAkB5R,GAClB2D,EAAW,CAAC3D,OAAQ,KAAMC,SAAU,KAAMC,gBAAgB,EAAOC,SAAUA,EAAUC,WAAYA,SAErGI,EAAe,CAACR,OAAQA,EAAQG,SAAUA,EAAUC,WAAYA,KAKoC2R,GAAI,CAACC,QAAS,IAC1G5O,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAY6O,SAAS,QAAQH,GAAI,CAACI,MAAO,mBC3BnDC,GAAezG,aAAOM,GAAPN,CAAH0G,QAAAhR,OAAAwK,EAAA,EAAAxK,CAAA,8CAKZiR,GAAgB3G,KAAO4G,IAAVC,QAAAnR,OAAAwK,EAAA,EAAAxK,CAAA,oHAoCbyF,GAAqB,CACvBnD,WAAYnC,GAGD4H,eAVS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAClCzB,WAAYyB,EAAIzB,WAChBK,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAOoB0G,GAAzBsC,CAhCE,SAAAvK,GAAoD,IAAlD8E,EAAkD9E,EAAlD8E,WAAY7D,EAAsCjB,EAAtCiB,WAAYK,EAA0BtB,EAA1BsB,SAAUC,EAAgBvB,EAAhBuB,WAC7C,OACAgD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACM1J,GACEA,EAAWkP,IAAI,SAACuC,EAAOkB,GAAR,OACXrP,EAAAC,EAAAC,cAACgP,GAAD,KACIlP,EAAAC,EAAAC,cAAC8O,GAAD,CACIhD,aAAYmC,EAAM5G,KAAO,aACzBK,QAAS,kBAAMrH,EAAW,CAAC3D,OAAQuR,EAAMnQ,GAAInB,SAAUsR,EAAM5G,KAAMzK,gBAAgB,EAAMC,SAAUA,EAAUC,WAAYA,KACzHiP,IAAKkC,EAAMnQ,IAEVmQ,EAAM5G,MAEXvH,EAAAC,EAAAC,cAACoP,GAAD,CAAgBrD,IAAK,SAASkC,EAAMnQ,GAAIpB,OAAQuR,EAAMnQ,GAAIuJ,KAAM4G,EAAM5G,aC7B/E,SAASgI,KACpB,OACIvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACsP,GAAD,MACAxP,EAAAC,EAAAC,cAACuP,GAAD,uDCPNC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,SACRC,YAAa,CACbC,UAAWJ,EAAMK,QAAQ,KAG7BC,UAAW,CACPnB,MAAO,WAqBAoB,GAhBK,SAACrH,GACjB,IAAMsH,EAAUV,KAChB,OACI1P,EAAAC,EAAAC,cAAA,OAAKC,UAAWiQ,EAAQP,MACpB7P,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACIrE,aAAW,kBACXmC,MAAOrF,EAAMqF,MACbmC,aAAcxH,EAAMwH,aACpBC,IAAK,EACL7B,KAAK,QACL8B,UAAWxQ,EAAAC,EAAAC,cAACuQ,GAAAxQ,EAAD,CAAgB6O,SAAS,UAAU3O,UAAWiQ,EAAQF,YACjE9B,SAAUtF,EAAMsF,aC0D1B1K,GAAqB,CACvBpG,YrByDuB,SAAAkD,GAAI,sBAAAkQ,EAAAzS,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA+P,EAAO7P,EAAUC,EAAjB6P,GAAA,IAAA/Q,EAAAC,EAAAzB,EAAAU,EAAAf,EAAA,OAAA2C,EAAAV,EAAAgB,KAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,cAA6BvB,EAA7B+Q,EAA6B/Q,YAAaC,EAA1C8Q,EAA0C9Q,aACnEzB,EAAWwB,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KR3Ge,mBQwGKyU,EAAA1P,KAAA,EAKrBnD,EAAKiQ,cALgB4C,EAAAzP,KAAA,EAMrBrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BqC,IAAI3E,GAAIiH,IAAI,CAClHjH,GAAIA,EACJ0M,YAAalK,EAAKkK,YAClBvH,WAAW,EACXsH,SAAUjK,EAAKiK,SACfD,YAAanM,EAASU,UAAU+R,UAAUC,QAXnB,OAc3B/O,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrEwE,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRvHa,qBQuGGyU,EAAAzP,KAAA,iBAAAyP,EAAA1P,KAAA,GAAA0P,EAAAzM,GAAAyM,EAAA,SAmB3BvP,QAAQC,IAAI,gBAAZsP,EAAAzM,IACAtD,EAAS,CAAE1E,KR1HU,gBQ0HmB2B,QAAS8S,EAAAzM,GAAIC,UApB1B,yBAAAwM,EAAAnP,SAAAiP,EAAA,kBAAJ,gBAAAK,EAAAC,EAAAC,GAAA,OAAAR,EAAA5O,MAAAC,KAAAnE,YAAA,IqBxD3BmI,QAAS3H,GAGE4H,eAdS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAClChC,QAASgC,EAAIb,YAAYnB,QACzBD,MAAOiC,EAAIb,YAAYpB,MACvBU,OAAQuB,EAAIvB,OAEZG,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQoB0G,GAAzBsC,CAhFK,SAAAvK,GAA4E,IAAzE6B,EAAyE7B,EAAzE6B,YAA6ByI,GAA4CtK,EAA5DU,QAA4DV,EAAnDS,MAAmDT,EAA5CsK,SAASnJ,EAAmCnB,EAAnCmB,OAAQG,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAC3EoO,EAA8CC,mBAAS,IAAvDC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAO+F,EAAP7F,EAAA,GAAwB8F,EAAxB9F,EAAA,GACA+F,EAAwChG,mBAAS,GAAjDiG,EAAArT,OAAAsN,GAAA,EAAAtN,CAAAoT,EAAA,GAAOE,EAAPD,EAAA,GAAqBE,EAArBF,EAAA,GAiBA,SAAStD,IACL1Q,EAAY,CAACV,OAAQA,EAAQ8N,YAAayG,EAAiB1G,SAAU8G,EAAcxU,SAAUA,EAAUC,WAAYA,IACnHoU,EAAmB,IACnBI,EAAgB,GAVpBrL,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAeN,OACE/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAC0N,GAAD,CACIzK,UAAW,QACX+K,YAAY,WACZC,MAAOgD,EACP/C,SAAU,SAAAlC,GAAK,OAAIkF,EAAmBlF,EAAMmC,OAAOF,QACnDzB,UAdQ,SAACR,GACH,UAAdA,EAAMD,KACN+B,OAeIhO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAACuR,GAAD,CACIlK,KAAK,mBACL+I,aAAc,EACdnC,MAAOoD,EACPnD,SAAU,SAAClC,EAAOiC,GAAR,OAAkBqD,EAAgBrD,IAC5CoC,IAAK,EACL7B,KAAK,UAGT1O,EAAAC,EAAAC,cAAC2I,GAAD,CACI1I,UAAU,eACVwH,SAA4B,KAAlBwJ,EACV7C,QAAQ,YACR1G,QAASoG,GAJb,YCjBVtK,GAAqB,CACvBlG,etB2I0B,SAAAgD,GAAI,sBAAAkR,EAAAzT,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA+Q,EAAO7Q,EAAUC,EAAjB6Q,GAAA,IAAA/R,EAAAC,EAAAf,EAAA,OAAA4B,EAAAV,EAAAgB,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAA6BvB,EAA7B+R,EAA6B/R,YAAaC,EAA1C8R,EAA0C9R,aAC3DD,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KR7IkB,sBQ0IKyV,EAAA1Q,KAAA,EAAA0Q,EAAAzQ,KAAA,EAKxBrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BqC,IAAInC,EAAKsR,QAAQvD,SAL7F,OAO9BvM,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrEwE,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRlJgB,wBQyIGyV,EAAAzQ,KAAA,iBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAAzN,GAAAyN,EAAA,SAY9BvQ,QAAQC,IAAI,mBAAZsQ,EAAAzN,IACAtD,EAAS,CAAE1E,KRrJa,mBQqJmB2B,QAAS8T,EAAAzN,GAAIC,UAb1B,yBAAAwN,EAAAnQ,SAAAiQ,EAAA,kBAAJ,gBAAAI,EAAAC,EAAAC,GAAA,OAAAP,EAAA5P,MAAAC,KAAAnE,YAAA,IsB1I9BmI,QAAS3H,GAGE4H,eAdS,SAAAY,KAAGlJ,KAAH,IAASS,EAATyI,EAASzI,IAAT,MAAoB,CACxChC,QAASgC,EAAIX,eAAerB,QAC5BD,MAAOiC,EAAIX,eAAetB,MAC1BU,OAAQuB,EAAIvB,OAEZG,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQoB0G,GAAzBsC,CA5CQ,SAAAvK,GAAuF,IAApF+B,EAAoF/B,EAApF+B,eAAyBtB,GAA2DT,EAApEU,QAAoEV,EAA3DS,OAAO6J,EAAoDtK,EAApDsK,QAASnJ,EAA2CnB,EAA3CmB,OAAQkV,EAAmCrW,EAAnCqW,OAAQ/U,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAgBzF,OAbId,GAEAoF,QAAQC,IAAIrF,GAKhBiK,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAGA/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CACIzC,aAAW,cACX0C,KAAK,QACL9G,QAAS,kBAAMpK,EAAe,CAACZ,OAAQA,EAAQkV,OAAQA,EAAQ/U,SAAUA,EAAUC,WAAYA,KAAc2R,GAAI,CAACC,QAAS,IAE3H5O,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAY6O,SAAS,QAAQH,GAAI,CAACI,MAAO,mBCoDnDrL,GAAqB,CACvBnG,avBsFwB,SAAAiD,GAAI,sBAAA0R,EAAAjU,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAAuR,EAAOrR,EAAUC,EAAjBqR,GAAA,IAAAvS,EAAAC,EAAAf,EAAA,OAAA4B,EAAAV,EAAAgB,KAAA,SAAAoR,GAAA,cAAAA,EAAAlR,KAAAkR,EAAAjR,MAAA,cAA6BvB,EAA7BuS,EAA6BvS,YAAaC,EAA1CsS,EAA0CtS,aACzDD,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KRhIgB,oBQ6HKiW,EAAAlR,KAAA,EAAAkR,EAAAjR,KAAA,EAKtBrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BqC,IAAInC,EAAKsR,QAAQQ,OAArHrU,OAAAsU,EAAA,EAAAtU,CAAA,GAA8HuC,EAAKgS,MAAQhS,EAAK2N,QAL1H,OAO5BnM,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrEwE,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRrIc,sBQ4HGiW,EAAAjR,KAAA,iBAAAiR,EAAAlR,KAAA,GAAAkR,EAAAjO,GAAAiO,EAAA,SAY5B/Q,QAAQC,IAAI,iBAAZ8Q,EAAAjO,IACAtD,EAAS,CAAE1E,KRxIW,iBQwImB2B,QAASsU,EAAAjO,GAAIC,UAb1B,yBAAAgO,EAAA3Q,SAAAyQ,EAAA,kBAAJ,gBAAAM,EAAAC,EAAAC,GAAA,OAAAT,EAAApQ,MAAAC,KAAAnE,YAAA,IuBrF5BmI,QAAS3H,GAGI4H,eAdO,SAAAY,KAAGlJ,KAAH,IAASS,EAATyI,EAASzI,IAAT,MAAoB,CACxCjC,MAAOiC,EAAIZ,aAAapB,QACxBA,QAASgC,EAAIZ,aAAarB,MAC1BU,OAAQuB,EAAIvB,OAEZG,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQsB0G,GAAzBsC,CA9EI,SAAAvK,GAAuH,IAApH8B,EAAoH9B,EAApH8B,aAAuBrB,GAA6FT,EAAtGU,QAAsGV,EAA7FS,OAAO6J,EAAsFtK,EAAtFsK,QAASnJ,EAA6EnB,EAA7EmB,OAAQkV,EAAqErW,EAArEqW,OAAQ3O,EAA6D1H,EAA7D0H,UAAWuH,EAAkDjP,EAAlDiP,YAAaD,EAAqChP,EAArCgP,SAAU1N,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAoBvH,OAdId,GAEAoF,QAAQC,IAAIrF,GAKhBiK,oBAAU,WACN,OAAO,WACHJ,MAEL,CAACA,IAIJ/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,SACIC,UAAU,qBACV6L,aAAa,YACb5P,KAAK,WACLwW,SAAqB,IAAZzP,EACTiL,SAAU,SAAAlC,GAAK,OAAI3O,EAAa,CAC5BX,OAAQA,EACRkV,OAAQA,EACRU,MAAO,YACPrE,MAAOjC,EAAMmC,OAAOuE,QACpB7V,SAAUA,EACVC,WAAYA,OAEpBgD,EAAAC,EAAAC,cAAC0N,GAAD,CACIzK,UAAWA,EAAU0P,WACrB7U,GAAI8T,EACJ5D,YAAaxD,EACb4F,aAAc5F,EACd0D,SAAU,SAAAlC,GAAK,OAAI3O,EAAa,CAC5BX,OAAQA,EACRkV,OAAQA,EACRU,MAAO,cACPrE,MAAOjC,EAAMmC,OAAOF,MACpBpR,SAAUA,EACVC,WAAYA,OAEpBgD,EAAAC,EAAAC,cAACuR,GAAD,CACItD,MAAO1D,EACP2D,SAAU,SAAClC,EAAOiC,GAAR,OAAkB5Q,EAAa,CACrCX,OAAQA,EACRkV,OAAQA,EACRU,MAAO,WACPrE,MAAOA,EACPpR,SAAUA,EACVC,WAAYA,KAChBuT,IAAK,EACL7B,KAAK,aC7DF,SAASoE,GAAShK,GAI7B,OACA9I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC6S,GAAD,CACIjB,OAAQhJ,EAAMgJ,OACd3O,UAAW2F,EAAM3F,UACjBuH,YAAa5B,EAAM4B,YACnBD,SAAU3B,EAAM2B,WAEpBzK,EAAAC,EAAAC,cAAC8S,GAAD,CACIlB,OAAQhJ,EAAMgJ,WCN9B,aAAMmB,GAAY1K,KAAO4G,IAAV+D,QAAAjV,OAAAwK,EAAA,EAAAxK,CAAA,8GAmDA+H,eAjBS,SAAAY,KAAGvI,SAAH,IAAaF,EAAbyI,EAAazI,IAAb,MAAwB,CAK5CvB,OAAQuB,EAAIvB,OACZD,WAAYwB,EAAIxB,aAGO,GAQZqJ,CA3CM,SAAAvK,GAAkB,IAAhBkB,EAAgBlB,EAAhBkB,WACnByO,EAAoCC,mBAAS,MAA7CC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAO+H,EAAP7H,EAAA,GAAmB8H,EAAnB9H,EAAA,GAEA,OAEQtL,EAAAC,EAAAC,cAAC+S,GAAD,KACMtW,GACEA,EAAWiP,IAAI,SAACyH,EAAMhE,GAAP,OACXrP,EAAAC,EAAAC,cAAC4S,GAAD,CACIQ,WAAY,SAACtV,GAAD,OAAQoV,EAAcpV,IAClCuV,SAAUF,EAAKrV,KAAOmV,EACtBlH,IAAKoH,EAAKrV,GACV8T,OAAQuB,EAAKrV,GACbmF,UAAWkQ,EAAKlQ,UAChBuH,YAAa2I,EAAK3I,YAClBD,SAAU4I,EAAK5I,gBC7BrC+I,GAAWjL,KAAO4G,IAAVsE,QAAAxV,OAAAwK,EAAA,EAAAxK,CAAA,2LAYRyV,GAAQnL,KAAO4G,IAAVwE,QAAA1V,OAAAwK,EAAA,EAAAxK,CAAA,0WAkBL2V,GAAkBrL,KAAO4G,IAAV0E,QAAA5V,OAAAwK,EAAA,EAAAxK,CAAA,+HA+BN6V,gBAtBf,SAAwBhL,GACpB,OACA9I,EAAAC,EAAAC,cAACsT,GAAD,KACIxT,EAAAC,EAAAC,cAACwT,GAAD,KACK5K,EAAMsE,SACHpN,EAAAC,EAAAC,cAAC0T,GAAD,KACI5T,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAYlD,EAAMiL,WAAajL,EAAMiL,WAAa,SAClDnM,QAASkB,EAAMkL,SACdlL,EAAMiL,WAAajL,EAAMiL,WAAa,UAE3C/T,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAalD,EAAMmL,OAASnL,EAAMmL,OAAS,KAC3CrM,QAASkB,EAAMoL,MACdpL,EAAMmL,OAASnL,EAAMmL,OAAS,UCnDjDhB,GAAY1K,KAAO4G,IAAVgF,QAAAlW,OAAAwK,EAAA,EAAAxK,CAAA,iIAQTmW,GAAY7L,KAAO4G,IAAVkF,QAAApW,OAAAwK,EAAA,EAAAxK,CAAA,2FA0DTyF,GAAqB,CACvB4Q,mB3B8H8B,SAAA9T,GAAI,sBAAA+T,EAAAtW,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA4T,EAAO1T,EAAUC,EAAjB0T,GAAA,IAAA5U,EAAAC,EAAAf,EAAA,OAAA4B,EAAAV,EAAAgB,KAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,cAA6BvB,EAA7B4U,EAA6B5U,YAAaC,EAA1C2U,EAA0C3U,aAC/DD,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KR1JuB,2BQuJIsY,EAAAvT,KAAA,EAAAuT,EAAAtT,KAAA,EAKXrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BgC,MAAM,YAAa,MAAM,GAAME,MALxH,OAAAkS,EAAAxQ,KAMzBxB,QAAQ,SAAAC,GACb5D,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQyF,WAAW/B,GAA2BqC,IAAIA,EAAI3E,IAAIuQ,WAGpHvM,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrEwE,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRlKqB,6BQsJEsY,EAAAtT,KAAA,iBAAAsT,EAAAvT,KAAA,GAAAuT,EAAAtQ,GAAAsQ,EAAA,SAelCpT,QAAQC,IAAI,uBAAZmT,EAAAtQ,IACAtD,EAAS,CAAE1E,KRrKkB,wBQqKmB2B,QAAS2W,EAAAtQ,GAAIC,UAhB3B,yBAAAqQ,EAAAhT,SAAA8S,EAAA,kBAAJ,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAzS,MAAAC,KAAAnE,YAAA,I2B7HlCmI,QAAS3H,GAGE4H,eAfS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAGlCvB,OAAQuB,EAAIvB,OACZK,aAAckB,EAAIlB,aAElBF,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQoB0G,GAAzBsC,CAxDkB,SAAAvK,GAAiG,IAA9F6Y,EAA8F7Y,EAA9F6Y,mBAA6C1X,GAAiDnB,EAA1EU,QAA0EV,EAAjES,MAAiET,EAA1DsK,QAA0DtK,EAAjDmB,QAAQG,EAAyCtB,EAAzCsB,SAAUC,EAA+BvB,EAA/BuB,WAAYC,EAAmBxB,EAAnBwB,aAC3GmO,EAAkCC,oBAAS,GAA3CC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAO0J,EAAPxJ,EAAA,GAAkByJ,EAAlBzJ,EAAA,GAmBA,OACItL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACApG,EAAAC,EAAAC,cAAC8U,GAAD,KACIhV,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAW,6BACXrE,UAAW1K,EACX2K,QAAS,kBAAMmN,GAAa,KAHhC,oBAMCD,GACG9U,EAAAC,EAAAC,cAAC+U,GAAD,CAAgBjB,QAAS,kBAAMe,GAAa,IAAQb,KAAM,kBAdlEI,EAAmB,CAAC1X,OAAQA,EAAQG,SAAUA,EAAUC,WAAYA,SACpE+X,GAAa,IAa4EhB,WAAW,SAASE,OAAO,UACxGjU,EAAAC,EAAAC,cAACkU,GAAD,CAAW5H,SAAS,IAAIR,aAAW,wDAAnC,6DCzCEzD,KAAO4G,IAAV+F,QAAAjX,OAAAwK,EAAA,EAAAxK,CAAA,oHAOJ,SAASkX,KAEpB,OADA7T,QAAQC,IAAI,6BAERvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACkV,GAAD,OAEJpV,EAAAC,EAAAC,cAACmV,GAAD,8DClBN7B,GAAWjL,KAAO4G,IAAVmG,QAAArX,OAAAwK,EAAA,EAAAxK,CAAA,4MAaRyV,GAAQnL,KAAO4G,IAAVoG,QAAAtX,OAAAwK,EAAA,EAAAxK,CAAA,6XAoBL2V,GAAkBrL,KAAO4G,IAAVqG,QAAAvX,OAAAwK,EAAA,EAAAxK,CAAA,+HAQfwX,GAAQlN,KAAOmN,MAAVC,QAAA1X,OAAAwK,EAAA,EAAAxK,CAAA,oEAML2X,GAAOrN,KAAO4G,IAAV0G,QAAA5X,OAAAwK,EAAA,EAAAxK,CAAA,6FAQJ6X,GAAiBvN,KAAO4G,IAAV4G,QAAA9X,OAAAwK,EAAA,EAAAxK,CAAA,gGAyEdyF,GAAqB,CAEvBqC,QAAS3H,GAGE4H,eAfS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAClChC,QAASgC,EAAIjB,YAAYf,QACzBD,MAAOiC,EAAIjB,YAAYhB,MAEvBU,OAAQuB,EAAIvB,OAEZG,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQoB0G,GAAzBsC,CAxEQ,SAAAvK,GAA4G,IAAzGyY,EAAyGzY,EAAzGyY,KAAMF,EAAmGvY,EAAnGuY,QAASC,EAA0FxY,EAA1FwY,OAAQF,EAAkFtY,EAAlFsY,WAAqCnX,GAA6CnB,EAAtEU,QAAsEV,EAA7DS,MAA6DT,EAAtDsK,QAAsDtK,EAA7CmB,QAAQG,EAAqCtB,EAArCsB,SAAUC,EAA2BvB,EAA3BuB,WAAYoQ,EAAe3R,EAAf2R,SAEhHhC,EAA0BC,mBAAS,IAAnCC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAO7I,EAAP+I,EAAA,GAAc0K,EAAd1K,EAAA,GAGA,SAAS0C,IACLkG,EAAK,CAACtX,OAAQA,EAAQqZ,WAAY1T,EAAOxF,SAAUA,EAAUC,WAAYA,IAGzEgZ,EAAS,IAeb,OACAhW,EAAAC,EAAAC,cAACgW,GAAD,KACIlW,EAAAC,EAAAC,cAACiW,GAAD,KACK/I,EACGpN,EAAAC,EAAAC,cAAC4V,GAAD,KACI9V,EAAAC,EAAAC,cAAC0V,GAAD,sBACA5V,EAAAC,EAAAC,cAACuV,GAAD,CACIzJ,aAAW,aACX7I,UAAW,QACX+K,YAAY,QACZC,MAAO5L,EACP6L,SAAU,SAAAlC,GAAK,OAAI8J,EAAS9J,EAAMmC,OAAOF,QACzCzB,UAnBE,SAACR,GACD,UAAdA,EAAMD,KACN+B,QAoBIhO,EAAAC,EAAAC,cAACkW,GAAD,KAEIpW,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAY+H,GAA0B,SACtCnM,QAAS,kBA9BzBoO,EAAS,SACThC,MA8BiBD,GAA0B,UAE/B/T,EAAAC,EAAAC,cAAC2I,GAAD,CACImD,aAAaiI,GAAkB,KAC/BrM,QAAS,kBAAMoG,MACdiG,GAAkB,WC7GrChB,GAAY1K,KAAO4G,IAAVkH,QAAApY,OAAAwK,EAAA,EAAAxK,CAAA,iIAQTmW,GAAY7L,KAAO4G,IAAVmH,QAAArY,OAAAwK,EAAA,EAAAxK,CAAA,2FAuDTyF,GAAqB,CACvBrG,c9BHyB,SAAAmD,GAAI,sBAAAkE,EAAAzG,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA+D,EAAO7D,EAAUC,EAAjB6D,GAAA,IAAA/E,EAAAC,EAAAzB,EAAAU,EAAAmD,EAAA2L,EAAAC,EAAA,OAAAnN,EAAAV,EAAAgB,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAA6BvB,EAA7B+E,EAA6B/E,YAAaC,EAA1C8E,EAA0C9E,aACrEzB,EAAWwB,IACXd,EAAYe,IAClBgB,EAAS,CAAE1E,KRAuB,2BQHDyI,EAAA1D,KAAA,EAMvBe,EAAO7D,EAASX,OAAO2D,YACzBwM,EAAQ,GAPiBhJ,EAAAzD,KAAA,EAQvBrC,EACDsD,WAAWhC,GACXsC,IAAInC,EAAK5D,QACT4F,MACAjH,KAAK,SAACkH,GACHoL,EAAQpL,EAAcjC,OAAOqN,QAbR,cAe7BvM,QAAQC,IAAI,UAAWsM,GACnBC,EAAa,GAhBYjJ,EAAAzD,KAAA,GAiBvBrC,EACLsD,WAAWhC,GACXsC,IAAInC,EAAK5D,QACT4F,MACAjH,KAAK,SAACkH,GACHqL,EAAarL,EAAcjC,OAAOsN,aAtBT,WA2BzBD,GAAS3L,EAAKK,MA3BW,CAAAsC,EAAAzD,KAAA,gBA4BzB0M,EAAWlL,KAAKpC,EAAKyV,YA5BIpR,EAAAzD,KAAA,GA8BnBrC,EAAUsD,WAAWhC,GAAwBsC,IAAInC,EAAK5D,QAAQ0V,OAA9DrU,OAAAsU,EAAA,EAAAtU,CAAA,GACD,aAAe6P,IA/BK,QAkCzB9L,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YACrEwE,EAAaV,EAAUjB,EAAaC,EAAcU,EAAK5D,OAAQ4D,EAAKzD,SAAUyD,EAAKxD,YACnF8D,EAAS,CAAE1E,KRhCiB,6BQJHyI,EAAAzD,KAAA,iBAsCzBN,EAAS,CAAE1E,KRjCc,wBQiCuB2B,QAAS,mCAtChC,QAAA8G,EAAAzD,KAAA,iBAAAyD,EAAA1D,KAAA,GAAA0D,EAAAT,GAAAS,EAAA,SA4C7BvD,QAAQC,IAARsD,EAAAT,IACAtD,EAAS,CAAE1E,KRxCkB,wBQwCmB2B,QAAS8G,EAAAT,GAAIC,UA7ChC,yBAAAQ,EAAAnD,SAAAiD,EAAA,kBAAJ,gBAAAiB,EAAAC,EAAAC,GAAA,OAAApB,EAAA5C,MAAAC,KAAAnE,YAAA,I8BI7BmI,QAAS3H,GAGE4H,eAfS,SAAAY,GAAA,IAAGzI,EAAHyI,EAAGzI,IAAH,MAAc,CAGlCvB,OAAQuB,EAAIvB,OACZC,SAAUsB,EAAItB,SAEdE,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAQoB0G,GAAzBsC,CArDO,SAAAvK,GAAsG,IAAnG4B,EAAmG5B,EAAnG4B,cAAeR,EAAoFpB,EAApFoB,SACpCuO,GADwH3P,EAA1EU,QAA0EV,EAAjES,MAAiET,EAA1DsK,QAA0DtK,EAAjDmB,OAAiDnB,EAAzCsB,SAAyCtB,EAA/BuB,WAA+BvB,EAAnBwB,aACnEoO,oBAAS,IAA3CC,EAAArN,OAAAsN,GAAA,EAAAtN,CAAAmN,EAAA,GAAO0J,EAAPxJ,EAAA,GAAkByJ,EAAlBzJ,EAAA,GAeA,OACItL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACApG,EAAAC,EAAAC,cAACqW,GAAD,KACIvW,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CACIzC,aAAW,kBACX0C,KAAK,QACL9G,QAAS,kBAAMmN,GAAa,KAE5B/U,EAAAC,EAAAC,cAACsW,GAAAvW,EAAD,CAAW6O,SAAS,QAAQH,GAAI,CAACI,MAAO,gBAE3C+F,GACG9U,EAAAC,EAAAC,cAACuW,GAAD,CAAgBzC,QAAS,kBAAMe,GAAa,IAAQb,KAAM,SAAC1T,GAAD,OAhBtE,SAAuBA,GACnBnD,EAAcmD,GACduU,GAAa,GAc+D2B,CAAclW,IAAOuT,WAAW,SAASE,OAAO,SAChHjU,EAAAC,EAAAC,cAACyW,GAAD,CAAWnK,SAAS,IAAIR,aAAW,oDAAnC,8CACgDnP,EADhD,gBC2Cd6G,IA9Ee6E,aAAOM,GAAPN,CAAHqO,QAAA3Y,OAAAwK,EAAA,EAAAxK,CAAA,8CAKIsK,KAAO4G,IAAV0H,QAAA5Y,OAAAwK,EAAA,EAAAxK,CAAA,oHAyEQ,CAKvB8H,QAAS3H,IAGE4H,eA3BS,SAAAY,GAAA,IAAGvI,EAAHuI,EAAGvI,SAAUF,EAAbyI,EAAazI,IAAb,MAAwB,CAC5C2Y,OAAQzY,EAASX,KAAKyG,IACtBzH,WAAYyB,EAAIzB,WAChBgJ,QAASvH,EAAIuH,QAGb9I,OAAQuB,EAAIvB,OAGZC,SAAUsB,EAAItB,WAkBsB6G,GAAzBsC,CA1EE,SAAAvK,GAA0B,IAAvBmB,EAAuBnB,EAAvBmB,OAAQC,EAAepB,EAAfoB,SACxByE,QAAQC,IAAI1E,GACKka,yBAAc,CAACC,SAAU,MAE1C,OACIhX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC+W,GAAD,MACAjX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACqP,GAAD,OAGJvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAIPvD,GACAoD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB6L,aAAYnP,GAAWA,GACxDmD,EAAAC,EAAAC,cAACgX,GAAD,MACAlX,EAAAC,EAAAC,cAACiX,GAAD,OAGJnX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACkX,GAAD,MACApX,EAAAC,EAAAC,cAACmX,GAAD,CAASrL,aAAW,2BAChBhM,EAAAC,EAAAC,cAAA,OAAK+L,IAAI,OACLjM,EAAAC,EAAAC,cAACiV,GAAD,CAAcnJ,aAAW,oBAG7BhM,EAAAC,EAAAC,cAAA,OAAK+L,IAAI,QACLjM,EAAAC,EAAAC,cAACiV,GAAD,CAAcnJ,aAAW,qBAG7BhM,EAAAC,EAAAC,cAAA,OAAK+L,IAAI,eACLjM,EAAAC,EAAAC,cAACiV,GAAD,CAAcnJ,aAAW,mCC8DvDtI,yBAAqB,CACvB4T,ShC0MoB,SAAA9W,GAAI,sBAAA+W,EAAAtZ,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAV,EAAAW,KAAI,SAAA4W,EAAO1W,EAAUC,EAAjB0W,GAAA,IAAA5X,EAAAC,EAAA,OAAAa,EAAAV,EAAAgB,KAAA,SAAAyW,GAAA,cAAAA,EAAAvW,KAAAuW,EAAAtW,MAAA,OAA6BvB,EAA7B4X,EAA6B5X,YAAaC,EAA1C2X,EAA0C3X,aACtEwB,QAAQC,IAAI,YACZS,EAAYlB,EAAUjB,EAAaC,EAAcU,EAAKzD,SAAUyD,EAAKxD,YAFzC,wBAAA0a,EAAAhW,SAAA8V,MAAJ,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAzV,MAAAC,KAAAnE,YAAA,MgCvMboI,eAZS,SAAAY,GAAA,IAAGvI,EAAHuI,EAAGvI,SAAUF,EAAbyI,EAAazI,IAAb,MAAuB,CAC3C2Y,OAAQzY,EAASX,KAAKyG,IACtB2T,cAAezZ,EAASX,KAAKoa,cAE7B/a,SAAUoB,EAAIpB,SACdC,WAAYmB,EAAInB,aAOoB0G,GAAzBsC,CArFH,SAAAvK,GAA2E,IAE/Esc,EAFOT,EAAwE7b,EAAxE6b,SAAUR,EAA8Drb,EAA9Dqb,OAAQkB,EAAsDvc,EAAtDuc,WAAYF,EAA0Crc,EAA1Cqc,cAAe/a,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,WAsElE,OAjEIgb,GACWhY,EAAAC,EAAAC,cAAA,uBAGX4W,IAAWgB,EACXC,EACA/X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KACIpG,EAAAC,EAAAC,cAAA,2CAIAF,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,KAEIjY,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAOC,OAAK,EAACC,K5BjEN,U4BiE4BjP,UAAWkP,OAK/CtB,GAAUgB,GACjBR,EAAS,CAACva,SAAUA,EAAUC,WAAYA,IAC1C+a,EACA/X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmG,SAAA,KAOIpG,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,KAEIjY,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAOC,OAAK,EAACC,K5BhFR,S4BgF4BjP,UAAWmP,KAC5CrY,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAOC,OAAK,EAACC,K5BnFN,U4BmF4BjP,UAAWkP,KAW9CpY,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAUlQ,G5B5FL,c4BkGbgQ,EAOA/X,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,KACIjY,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAOC,OAAK,EAACC,K5B/GF,I4B+GwBjP,UAAWlB,IAC9ChI,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAOC,OAAK,EAACC,K5B/GF,U4B+GwBjP,UAAWkB,KAG9CpK,EAAAC,EAAAC,cAAC+X,EAAA,EAAD,CAAUlQ,G5BnHC,O4BwHX/H,EAAAC,EAAAC,cAAA,gBAAQ6X,EAAR,OC1GNlI,GAAO5M,SAASqV,eAAe,QAErCC,IAAS/Q,OAAOxH,EAAAC,EAAAC,cAACsY,EAAD,MAAY3I,IAE5B3Q,EAAMuZ,oBAAoBld,KAAK,WAC7Bgd,IAAS/Q,OACPxH,EAAAC,EAAAC,cAACwY,EAAA,EAAD,CAAUxZ,MAASA,GACjBc,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAACyY,GAAD,QAGN9I,MAeJ1U","file":"static/js/main.56dad12f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7897e44a.png\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// Auth\r\nexport const AUTH_START_EMAIL = \"AUTH_START_EMAIL\";\r\nexport const AUTH_START_GOOGLE = \"AUTH_START_GOOGLE\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\n\r\nexport const RECOVERY_START = \"RECOVERY_START\";\r\nexport const RECOVERY_SUCCESS = \"RECOVERY_SUCCESS\";\r\nexport const RECOVERY_FAIL = \"RECOVERY_FAIL\";\r\n\r\nexport const CLEAN_UP = \"CLEAN_UP\";\r\n\r\nexport const CLOSE_SIDE_DRAWER = \"CLOSE_SIDE_DRAWER\";\r\nexport const OPEN_SIDE_DRAWER = \"OPEN_SIDE_DRAWER\";\r\n\r\nexport const VERIFY_START = \"VERIFY_START\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\nexport const VERIFY_FAIL = \"VERIFY_FAIL\";\r\n\r\nexport const PROFILE_EDIT_START = \"PROFILE_EDIT_START\";\r\nexport const PROFILE_EDIT_SUCCESS = \"PROFILE_EDIT_SUCCESS\";\r\nexport const PROFILE_EDIT_FAIL = \"PROFILE_EDIT_FAIL\";\r\n\r\nexport const SET_SORT_VIEW = \"SET_SORT_VIEW\";\r\nexport const SET_FILTER_VIEW = \"SET_FILTER_VIEW\";\r\n\r\nexport const LOGOUT_CLEAN_UP = \"LOGOUT_CLEAN_UP\"\r\n\r\n// Tasks\r\nexport const ADD_TASKS_LIST_START = \"ADD_TASKS_LIST_START\";\r\nexport const ADD_TASKS_LIST_SUCCESS = \"ADD_TASKS_LIST_SUCCESS\";\r\nexport const ADD_TASKS_LIST_FAIL = \"ADD_TASKS_LIST_FAIL\";\r\n\r\nexport const EDIT_TASKS_LIST_START = \"EDIT_TASKS_LIST_START\";\r\nexport const EDIT_TASKS_LIST_SUCCESS = \"EDIT_TASKS_LIST_SUCCESS\";\r\nexport const EDIT_TASKS_LIST_FAIL = \"EDIT_TASKS_LIST_FAIL\";\r\n\r\nexport const DELETE_TASKS_LIST_START = \"DELETE_TASKS_LIST_START\";\r\nexport const DELETE_TASKS_LIST_SUCCESS = \"DELETE_TASKS_LIST_SUCCESS\";\r\nexport const DELETE_TASKS_LIST_FAIL = \"DELETE_TASKS_LIST_FAIL\";\r\n\r\nexport const ADD_TASK_START = \"ADD_TASK_START\";\r\nexport const ADD_TASK_SUCCESS = \"ADD_TASK_SUCCESS\";\r\nexport const ADD_TASK_FAIL = \"ADD_TASK_FAIL\";\r\n\r\nexport const EDIT_TASK_START = \"EDIT_TASK_START\";\r\nexport const EDIT_TASK_SUCCESS = \"EDIT_TASK_SUCCESS\";\r\nexport const EDIT_TASK_FAIL = \"EDIT_TASK_FAIL\";\r\n\r\nexport const DELETE_TASK_START = \"DELETE_TASK_START\";\r\nexport const DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\r\nexport const DELETE_TASK_FAIL = \"DELETE_TASK_FAIL\";\r\n\r\nexport const DELETE_ALL_TASKS_START = \"DELETE_ALL_TASKS_START\";\r\nexport const DELETE_ALL_TASKS_SUCCESS = \"DELETE_ALL_TASKS_SUCCESS\";\r\nexport const DELETE_ALL_TASKS_FAIL = \"DELETE_ALL_TASKS_FAIL\";\r\n\r\n// export const GET_TASK_ITEMS_START = \"GET_TASK_ITEMS_START\";\r\n// export const GET_TASK_ITEMS_SUCCESS = \"GET_TASK_ITEMS_SUCCESS\";\r\n// export const GET_TASK_ITEMS_FAILURE = \"GET_TASK_ITEMS_FAILURE\";\r\n\r\nexport const SELECT_TASK_LIST = \"SELECT_TASK_LIST\";\r\nexport const GET_TASK_LISTS = \"GET_TASK_LISTS\";\r\nexport const GET_TASK_ITEMS = \"GET_TASK_ITEMS\";\r\n\r\n// Friends\r\n// export const ADD_FRIEND_START = \"ADD_FRIEND_START\";\r\n// export const ADD_FRIEND_SUCCESS = \"ADD_FRIEND_SUCCESS\";\r\n// export const ADD_FRIEND_FAIL = \"ADD_FRIEND_FAIL\";\r\n\r\n// export const ACCEPT_FRIEND_START = \"ACCEPT_FRIEND_START\";\r\n// export const ACCEPT_FRIEND_SUCCESS = \"AACCEPT_FRIEND_SUCCESS\";\r\n// export const ACCEPT_FRIEND_FAIL = \"ACCEPT_FRIEND_FAIL\";\r\n\r\n// export const DELETE_FRIEND_START = \"DELETE_FRIEND_START\";\r\n// export const DELETE_FRIEND_SUCCESS = \"DELETE_FRIEND_SUCCESS\";\r\n// export const DELETE_FRIEND_FAIL = \"DELETE_FRIEND_FAIL\";\r\n\r\nexport const SHARE_TASKS_LIST_START = \"SHARE_TASKS_LIST_START\";\r\nexport const SHARE_TASKS_LIST_SUCCESS = \"SHARE_TASKS_LIST_SUCCESS\";\r\nexport const SHARE_TASKS_LIST_FAIL = \"SHARE_TASKS_LIST_FAIL\";\r\n\r\n// export const UNSHARE_TASKS_LIST_START = \"UNSHARE__TASKSLIST_START\";\r\n// export const UNSHARE_TASKS_LIST_SUCCESS = \"UNSHARE_TASKS_LIST_SUCCESS\";\r\n// export const UNSHARE_TASKS_LIST_FAIL = \"UNSHARE_TASKS_LIST_FAIL\";","import * as actions from '../actions/actionTypes.js'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    loading: false,\r\n    type: null,\r\n    userID: null,\r\n\r\n    recoverPassword: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n    \r\n    verifyEmail: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    profileEdit: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n}\r\n\r\nexport default (state = initialState, {type, payload, id}) => {\r\n    switch (type) {\r\n        \r\n        case actions.AUTH_START_EMAIL:\r\n            return { ...state, loading: true }\r\n\r\n        case actions.AUTH_START_GOOGLE:\r\n            return { ...state, loading: true }\r\n\r\n        case actions.AUTH_FAIL:\r\n            return { ...state, error: payload, loading: false }\r\n\r\n        case actions.AUTH_SUCCESS:\r\n            return { ...state, error: false, loading: false, userID: id }\r\n\r\n\r\n        case actions.RECOVERY_START:\r\n            return{\r\n                ...state,\r\n                recoverPassword: { ...state.recoverPassword, loading: true },\r\n            };\r\n        case actions.RECOVERY_FAIL:\r\n            return{\r\n                ...state,\r\n                recoverPassword: { ...state.recoverPassword, loading: false, error: payload, },\r\n            };\r\n        case actions.RECOVERY_SUCCESS:\r\n            return{\r\n                ...state,\r\n                recoverPassword: { ...state.recoverPassword, loading: false, error: false,  },\r\n            };\r\n\r\n        case actions.CLEAN_UP:\r\n            return { \r\n                ...state, \r\n                error: null, \r\n                loading: false, \r\n                type: null,\r\n                recoverPassword: {\r\n                    ...state.recoverPassword, \r\n                    loading: false, \r\n                    error: null,\r\n                },\r\n                verifyEmail: {\r\n                    ...state.verifyEmail, \r\n                    loading: false, \r\n                    error: null,\r\n                },\r\n                profileEdit: {\r\n                    ...state.profileEdit, \r\n                    loading: false, \r\n                    error: null,\r\n                },\r\n            } \r\n\r\n        case actions.VERIFY_START:\r\n            return { \r\n                ...state, \r\n                verifyEmail: { ...state.verifyEmail, loading: true }\r\n            }\r\n\r\n        case actions.VERIFY_SUCCESS:\r\n            return { \r\n                ...state, \r\n                verifyEmail: { ...state.verifyEmail, error: false, loading: false }\r\n            }\r\n        \r\n        case actions.VERIFY_FAIL:\r\n            return { \r\n                ...state, \r\n                verifyEmail: { ...state.verifyEmail, error: payload, loading: false }\r\n            }\r\n\r\n        case actions.PROFILE_EDIT_START:\r\n            return {\r\n                ...state, \r\n                profileEdit: { ...state.profileEdit, loading: true, error: null }\r\n            }\r\n\r\n        case actions.PROFILE_EDIT_SUCCESS:\r\n            return {\r\n                ...state, \r\n                profileEdit: { ...state.profileEdit, loading: false, error: false }\r\n        }\r\n\r\n        case actions.PROFILE_EDIT_FAIL:\r\n            return {\r\n                ...state, \r\n                profileEdit: { ...state.profileEdit, loading: false, error: payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from '../actions/actionTypes.js'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    loading: false,\r\n    type: null,\r\n\r\n    friendsQuery: false,\r\n    tasksLists: null,\r\n    tasksItems: null,\r\n\r\n    listId: null,\r\n    listName: null,\r\n    onListSelected: false,\r\n\r\n    sortView: \"description\",\r\n    filterView: \"All\",\r\n    hasCompleted: false,\r\n\r\n    // currentListId: null,\r\n\r\n    addTaskList: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    editTaskList: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    deleteTaskList: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    shareTaskList: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    // unshareTaskList: {\r\n    //     error: null,\r\n    //     loading: false,\r\n    // },\r\n    \r\n    addTaskItem: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    editTaskItem: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    deleteTaskItem: {\r\n        error: null,\r\n        loading: false,\r\n    },\r\n\r\n    // addFriend: {\r\n    //     error: null,\r\n    //     loading: false,\r\n    // },\r\n\r\n    // deleteFriend: {\r\n    //     error: null,\r\n    //     loading: false,\r\n    // },\r\n\r\n    // acceptFriend: {\r\n    //     error: null,\r\n    //     loading: false,\r\n    // },\r\n}\r\n\r\nexport default (state = initialState, {\r\n        type, payload, \r\n        tasksLists, tasksItems, \r\n        listId, listName, onListSelected,\r\n        sortView, filterView,\r\n        hasCompleted\r\n    }) => {\r\n\r\n\r\n    switch (type) {\r\n        case actions.ADD_TASKS_LIST_START:\r\n            return{\r\n                ...state,\r\n                addTaskList: { ...state.addTaskList, loading: true },\r\n            };\r\n        case actions.ADD_TASKS_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                addTaskList: { ...state.addTaskList, loading: false, error: payload, },\r\n            };\r\n        case actions.ADD_TASKS_LIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                // tasksLists: tasksLists, \r\n                // tasksItems: tasksItems, \r\n                addTaskList: { \r\n                    ...state.addTaskList, \r\n                    loading: false, \r\n                    error: false,  \r\n                },\r\n            };\r\n\r\n        case actions.EDIT_TASKS_LIST_START:\r\n            return{\r\n                ...state,\r\n                editTaskList: { ...state.editTaskList, loading: true },\r\n            };\r\n        case actions.EDIT_TASKS_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                editTaskList: { ...state.editTaskList, loading: false, error: payload, },\r\n            };\r\n        case actions.EDIT_TASKS_LIST_SUCCESS:\r\n            return{\r\n                ...state, \r\n                // tasksLists: tasksLists,\r\n                editTaskList: { \r\n                    ...state.editTaskList,\r\n                    loading: false, \r\n                    error: false,  \r\n                },\r\n            };\r\n\r\n        case actions.DELETE_TASKS_LIST_START:\r\n            return{\r\n                ...state,\r\n                deleteTaskList: { ...state.deleteTaskList, loading: true },\r\n            };\r\n        case actions.DELETE_TASKS_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                deleteTaskList: { ...state.deleteTaskList, loading: false, error: payload, },\r\n            };\r\n        case actions.DELETE_TASKS_LIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                // tasksLists: tasksLists, \r\n                deleteTaskList: { \r\n                    ...state.deleteTaskList, \r\n                    loading: false, error: false,  \r\n                },\r\n            };\r\n\r\n        case actions.ADD_TASK_START:\r\n            return{\r\n                ...state,\r\n                addTaskItem: { ...state.addTaskItem, loading: true },\r\n            };\r\n        case actions.ADD_TASK_FAIL:\r\n            return{\r\n                ...state,\r\n                addTaskItem: { ...state.addTaskItem, loading: false, error: payload, },\r\n            };\r\n        case actions.ADD_TASK_SUCCESS:\r\n            return{\r\n                ...state,\r\n                // tasksLists: tasksLists, \r\n                // tasksItems: tasksItems, \r\n                addTaskItem: { \r\n                    ...state.addTaskItem, \r\n                    loading: false, \r\n                    error: false,  \r\n                },\r\n            };\r\n    \r\n        case actions.EDIT_TASK_START:\r\n            return{\r\n                ...state,\r\n                editTaskItem: { ...state.editTaskItem, loading: true },\r\n            };\r\n        case actions.EDIT_TASK_FAIL:\r\n            return{\r\n                ...state,\r\n                editTaskItem: { ...state.editTaskItem, loading: false, error: payload, },\r\n            };\r\n        case actions.EDIT_TASK_SUCCESS:\r\n            return{\r\n                ...state, \r\n                // tasksLists: tasksLists, \r\n                // tasksItems: tasksItems, \r\n                editTaskItem: { \r\n                    ...state.editTaskItem,\r\n                    loading: false, \r\n                    error: false,  \r\n                },\r\n            };\r\n        \r\n        case actions.DELETE_TASK_START:\r\n            return{\r\n                ...state,\r\n                deleteTaskItem: { ...state.deleteTaskItem, loading: true },\r\n            };\r\n        case actions.DELETE_TASK_FAIL:\r\n            return{\r\n                ...state,\r\n                deleteTaskItem: { ...state.deleteTaskItem, loading: false, error: payload, },\r\n            };\r\n        case actions.DELETE_TASK_SUCCESS:\r\n            return{\r\n                ...state,\r\n                // tasksLists: tasksLists, \r\n                // tasksItems: tasksItems, \r\n                deleteTaskItem: { \r\n                    ...state.deleteTaskItem,\r\n                    loading: false, error: false,  \r\n                },\r\n            };\r\n\r\n        // case actions.ADD_FRIEND_START:\r\n        //     return{\r\n        //         ...state,\r\n        //         addFriend: { ...state.addFriend, loading: true },\r\n        //     };\r\n        // case actions.ADD_FRIEND_FAIL:\r\n        //     return{\r\n        //         ...state,\r\n        //         addFriend: { ...state.addFriend, loading: false, error: payload, },\r\n        //     };\r\n        // case actions.ADD_FRIEND_SUCCESS:\r\n        //     return{\r\n        //         ...state,\r\n        //         addFriend: { ...state.addFriend, loading: false, error: false,  },\r\n        //     };\r\n\r\n        // case actions.ACCEPT_FRIEND_START:\r\n        //     return{\r\n        //         ...state,\r\n        //         acceptFriend: { ...state.acceptFriend, loading: true },\r\n        //     };\r\n        // case actions.ACCEPT_FRIEND_FAIL:\r\n        //     return{\r\n        //         ...state,\r\n        //         acceptFriend: { ...state.acceptFriend, loading: false, error: payload, },\r\n        //     };\r\n        // case actions.ACCEPT_FRIEND_SUCCESS:\r\n        //     return{\r\n        //         ...state,\r\n        //         acceptFriend: { ...state.acceptFriend, loading: false, error: false,  },\r\n        //     };\r\n\r\n        // case actions.DELETE_FRIEND_START:\r\n        //     return{\r\n        //         ...state,\r\n        //         deleteFriend: { ...state.deleteFriend, loading: true },\r\n        //     };\r\n        // case actions.DELETE_FRIEND_FAIL:\r\n        //     return{\r\n        //         ...state,\r\n        //         deleteFriend: { ...state.deleteFriend, loading: false, error: payload, },\r\n        //     };\r\n        // case actions.DELETE_FRIEND_SUCCESS:\r\n        //     return{\r\n        //         ...state,\r\n        //         deleteFriend: { ...state.deleteFriend, loading: false, error: false,  },\r\n        //     };\r\n\r\n        case actions.SHARE_TASKS_LIST_START:\r\n            return{\r\n                ...state,\r\n                shareTaskList: { ...state.shareTaskList, loading: true },\r\n            };\r\n        case actions.SHARE_TASKS_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                shareTaskList: { ...state.shareTaskList, loading: false, error: payload, },\r\n            };\r\n        case actions.SHARE_TASKS_LIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                shareTaskList: { ...state.shareTaskList, loading: false, error: false,  },\r\n            };\r\n        \r\n        // case actions.UNSHARE_TASKS_LIST_START:\r\n        //     return{\r\n        //         ...state,\r\n        //         unshareTaskList: { ...state.unshareTaskList, loading: true },\r\n        //     };\r\n        // case actions.UNSHARE_TASKS_LIST_FAIL:\r\n        //     return{\r\n        //         ...state,\r\n        //         unshareTaskList: { ...state.unshareTaskList, loading: false, error: payload, },\r\n        //     };\r\n        // case actions.UNSHARE_TASKS_LIST_SUCCESS:\r\n        //     return{\r\n        //         ...state,\r\n        //         unshareTaskList: { ...state.unshareTaskList, loading: false, error: false,  },\r\n        //     };\r\n        \r\n        \r\n        case actions.SELECT_TASK_LIST:\r\n            return{\r\n                ...state,\r\n                listId: listId,\r\n                // tasksItems: tasksItems,\r\n                listName: listName,\r\n                onListSelected: onListSelected,\r\n            };\r\n\r\n        case actions.GET_TASK_LISTS:\r\n            return{\r\n                ...state,\r\n                tasksLists: tasksLists\r\n            };\r\n\r\n        case actions.GET_TASK_ITEMS:\r\n            return{\r\n                ...state, \r\n                tasksItems: tasksItems,\r\n                hasCompleted: hasCompleted\r\n            }\r\n\r\n        case actions.SET_SORT_VIEW:\r\n            return {\r\n                ...state,\r\n                sortView: sortView\r\n            }\r\n\r\n        case actions.SET_FILTER_VIEW:\r\n            return {\r\n                ...state, \r\n                filterView: filterView\r\n            }\r\n\r\n        case actions.LOGOUT_CLEAN_UP:\r\n            return{\r\n                error: null,\r\n                loading: false,\r\n                type: null,\r\n            \r\n                friendsQuery: false,\r\n                tasksLists: null,\r\n                tasksItems: null,\r\n            \r\n                listId: null,\r\n                listName: null,\r\n                onListSelected: false,\r\n            \r\n                sortView: \"description\",\r\n                filterView: \"All\",\r\n                hasCompleted: false,\r\n            \r\n                // currentListId: null,\r\n            \r\n                addTaskList: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                editTaskList: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                deleteTaskList: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                shareTaskList: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                // unshareTaskList: {\r\n                //     error: null,\r\n                //     loading: false,\r\n                // },\r\n                \r\n                addTaskItem: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                editTaskItem: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            \r\n                deleteTaskItem: {\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n            }\r\n\r\n\r\n\r\n        case actions.CLEAN_UP:\r\n            return { \r\n                ...state, \r\n                error: null,\r\n                loading: false,\r\n                type: null,\r\n\r\n                addTaskList: {\r\n                    ...state.addTaskList,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                editTaskList: {\r\n                    ...state.editTaskList,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                deleteTaskList: {\r\n                    ...state.deleteTaskList,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                shareTaskList: {\r\n                    ...state.shareTaskList,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                // unshareTaskList: {\r\n                //     ...state.unshareTaskList,\r\n                //     error: null,\r\n                //     loading: false,\r\n                // },\r\n                \r\n                addTaskItem: {\r\n                    ...state.addTaskItem,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                editTaskItem: {\r\n                    ...state.editTaskItem,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                deleteTaskItem: {\r\n                    ...state.deleteTaskItem,\r\n                    error: null,\r\n                    loading: false,\r\n                },\r\n\r\n                // addFriend: {\r\n                //     ...state.addFriend,\r\n                //     error: null,\r\n                //     loading: false,\r\n                // },\r\n\r\n                // deleteFriend: {\r\n                //     ...state.deleteFriend,\r\n                //     error: null,\r\n                //     loading: false,\r\n                // },\r\n\r\n                // acceptFriend: {\r\n                //     ...state.acceptFriend,\r\n                //     error: null,\r\n                //     loading: false,\r\n                // },\r\n            } \r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n// Reducers we made\r\nimport authReducer from './authReducer.js'\r\nimport appReducer from './appReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    firebase: firebaseReducer,\r\n})","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth';\r\n// import 'firebase/storage';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBHZdLi79neEirMDn9HeYqOIO_7D7CMMxk\",\r\n  authDomain: \"tasks-dce66.firebaseapp.com\",\r\n  projectId: \"tasks-dce66\",\r\n  storageBucket: \"tasks-dce66.appspot.com\",\r\n  messagingSenderId: \"630175576796\",\r\n  appId: \"1:630175576796:web:0ba0f2ad21deee6c723a19\",\r\n  measurementId: \"G-TGMZJRZF5Y\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore()\r\n\r\n// export const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport default firebase;\r\n\r\n","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport firebase from '../Firebase/Firebase.js'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\n\r\nconst rrfConfig = {\r\n    userProfile: \"users\",\r\n    //Can add a Apps, Restuarants\r\n    useFirestoreForProfile: true,\r\n    attachAuthIsReady: true,\r\n}\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        reactReduxFirebase(firebase, rrfConfig),\r\n        reduxFirestore(firebase),\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <main className = \"loader-wrapper\">\r\n            <main className = \"lds-ring\">\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </main>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Loader","import * as actions from './actionTypes.js'\r\nimport { useReducer } from 'react';\r\n\r\n\r\nconst USER_COLLECTION = \"users\";\r\n\r\n// SignUp action\r\nexport const signUp = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.AUTH_START_EMAIL });\r\n    try {\r\n        const res = await firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(data.email, data.password);\r\n\r\n        // Send verification email\r\n        const user = firebase.auth().currentUser;\r\n        await user.sendEmailVerification();\r\n\r\n        await firestore.collection(USER_COLLECTION).doc(res.user.uid).set({ \r\n            id: res.user.uid,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            username: data.username,\r\n            email: data.email,\r\n            friends: [],\r\n            friendRequests: [],\r\n            friendInvites: [],\r\n        });\r\n\r\n        dispatch({ type: actions.AUTH_SUCCESS, id: res.user.uid });\r\n\r\n    } catch(err) {\r\n        dispatch({ type: actions.AUTH_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\n// LogOut action\r\nexport const logOut = () => async (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    try {\r\n        await firebase.auth().signOut();\r\n\r\n    } catch (err) {\r\n        console.log(err.message);\r\n    }\r\n}\r\n\r\n// LogIn action\r\nexport const logInEmail = data => async (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    dispatch({ type: actions.AUTH_START_EMAIL });\r\n    try {\r\n        const res = await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\r\n\r\n        dispatch({ type: actions.AUTH_SUCCESS, id: res.user.uid });\r\n    } catch(err) {\r\n        dispatch({ type: actions.AUTH_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const logInGoogle = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    \r\n    dispatch({ type: actions.AUTH_START_GOOGLE })\r\n    try {\r\n        const res = await firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n        const userDoc = await firestore.collection(USER_COLLECTION).doc(res.user.uid).get();\r\n\r\n        if (!userDoc.exists) {\r\n            \r\n            await firestore.collection(USER_COLLECTION).doc(res.user.uid).set({ \r\n                id: res.user.uid,\r\n                firstName: res.additionalUserInfo.profile.given_name,\r\n                lastName: res.additionalUserInfo.profile.family_name,\r\n                username: res.user.email.split(\"@\")[0],\r\n                email: res.user.email,\r\n                friends: [],\r\n                friendRequests: [],\r\n            });\r\n\r\n        } else {\r\n            console.log(\"user already exists\");\r\n        }\r\n        dispatch({ type: actions.AUTH_SUCCESS, id: res.user.uid })\r\n    } catch(err) {\r\n        dispatch({ type: actions.AUTH_FAIL, payload: err.message })\r\n    }\r\n}\r\n\r\n// Clean up error messages action\r\nexport const clean = () => ({\r\n    type: actions.CLEAN_UP,\r\n})\r\n\r\n// Send recover password action\r\nexport const recoverPassword = data => async (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    dispatch({type: actions.RECOVERY_START});\r\n    try{\r\n        await firebase.auth().sendPasswordResetEmail(data.email);\r\n        dispatch({type: actions.RECOVERY_SUCCESS});\r\n\r\n    } catch(err) {\r\n        dispatch({type: actions.RECOVERY_FAIL, payload: err.message});\r\n    }\r\n}\r\n\r\n// Verify email action\r\nexport const verifyEmail = () => async (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    dispatch({ type: actions.VERIFY_START })\r\n    try {\r\n        const user = firebase.auth().currentUser\r\n        await user.sendEmailVerification()\r\n        dispatch({ type: actions.VERIFY_SUCCESS }) \r\n\r\n    } catch(err) {\r\n        dispatch({ type: actions.VERIFY_FAIL, payload: err.message })\r\n    }\r\n}\r\n","import * as actions from './actionTypes.js'\r\nimport { useReducer } from 'react';\r\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\r\n// import {useCollection} from \"react-firebase-hooks/firestore\";\r\n\r\n\r\nconst TASKS_LISTS_COLLECTION = \"tasks-lists\";\r\nconst TASKS_ITEMS_SUBCOLLECTION = \"tasks\";\r\nconst USER_COLLECTION = \"users\";\r\n\r\n// https://firebase.google.com/docs/firestore/query-data/queries#array_membership\r\n\r\n// Task actions\r\nexport const addTaskList = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    console.log(\"addTaskList\");\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.ADD_TASKS_LIST_START });\r\n    try {\r\n        const user = firebase.auth().currentUser;\r\n\r\n        await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).set({\r\n            id: data.listId,\r\n            name: data.name,\r\n            owner: user.email,\r\n            sharedWith: [user.email],\r\n        });\r\n\r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        dispatch({ type: actions.ADD_TASKS_LIST_SUCCESS });\r\n\r\n    } catch(err) {\r\n        console.log(\"addTaskList: \", err)\r\n        dispatch({ type: actions.ADD_TASKS_LIST_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const editTaskList = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    console.log(\"editTaskList: \")\r\n    dispatch({ type: actions.EDIT_TASKS_LIST_START });\r\n    try {\r\n        await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.id).update({\r\n            [\"name\"]: data.name,\r\n        });\r\n\r\n    getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n    dispatch({ type: actions.EDIT_TASKS_LIST_SUCCESS });\r\n    } catch(err) {\r\n        console.log(\"editTaskList: \", err)\r\n        dispatch({ type: actions.EDIT_TASKS_LIST_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const deleteTaskList = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.DELETE_TASKS_LIST_START });\r\n    try {\r\n        const snapshot = await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).get();\r\n        snapshot.forEach(doc => {\r\n            firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(doc.id).delete();\r\n        });\r\n        firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).delete();\r\n       \r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        dispatch({ type: actions.DELETE_TASKS_LIST_SUCCESS });\r\n\r\n    } catch(err) {\r\n        console.log(\"deleteTaskList: \", err)\r\n        dispatch({ type: actions.DELETE_TASKS_LIST_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const shareTaskList = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.SHARE_TASKS_LIST_START });\r\n    try {\r\n        // console.log(\"sharing\", data.listId, data.shareEmail);\r\n        const user = firebase.auth().currentUser;\r\n        let owner = \"\";\r\n        await firestore\r\n            .collection(TASKS_LISTS_COLLECTION)\r\n            .doc(data.listId)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                owner = querySnapshot.data().owner;\r\n            });\r\n        console.log(\"owner: \", owner);\r\n        let sharedWith = [];\r\n        await firestore\r\n        .collection(TASKS_LISTS_COLLECTION)\r\n        .doc(data.listId)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            sharedWith = querySnapshot.data().sharedWith;\r\n        });        \r\n        // console.log(\"original shared with: \", sharedWith);\r\n        // console.log(user, user.email);\r\n\r\n        if (owner == user.email) {\r\n            sharedWith.push(data.shareEmail);\r\n            // console.log(\"added share: \", sharedWith);\r\n            await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).update({\r\n                [\"sharedWith\"]: sharedWith\r\n            });\r\n            \r\n            getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n            getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n            dispatch({ type: actions.SHARE_TASKS_LIST_SUCCESS });\r\n        } else {\r\n            dispatch({ type: actions.SHARE_TASKS_LIST_FAIL, payload: \"You do not own this task list.\" });\r\n        }\r\n\r\n        \r\n        \r\n    } catch(err) {\r\n        console.log(err)\r\n        dispatch({ type: actions.SHARE_TASKS_LIST_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const unshareTaskList = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // const firebase = getFirebase();\r\n    // const firestore = getFirestore();\r\n    // dispatch({ type: actions.UNSHARE_TASKS_LIST_START });\r\n    // try {\r\n    //     let sharedWith = firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(data.taskId).get(\"sharedWith\");\r\n    //     sharedWith.filter((id) => id !== data.unfriendId);\r\n\r\n    //     await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.id).update({\r\n    //         [\"sharedWith\"]: sharedWith\r\n    //     });\r\n\r\n    //     const user = firebase.auth().currentUser;\r\n    //     const tasksList = firestore.collection(TASKS_LISTS_COLLECTION).where('sharedWith', \"array-contains\", user.uid).orderBy(\"name\");\r\n    //     dispatch({ type: actions.UNSHARE_TASKS_LIST_SUCCESS, tasksLists: tasksList  });\r\n\r\n    // } catch(err) {\r\n    //     dispatch({ type: actions.UNSHARE_TASKS_LIST_FAIL, payload: err.message });\r\n    // }\r\n}\r\n\r\nexport const addTaskItem = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.ADD_TASK_START });\r\n    try {\r\n        const id = generateUniqueID();\r\n        await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(id).set({\r\n            id: id,\r\n            description: data.description,\r\n            completed: false,\r\n            priority: data.priority, \r\n            dateCreated: firebase.firestore.Timestamp.now(),\r\n        });\r\n\r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n        dispatch({ type: actions.ADD_TASK_SUCCESS});\r\n\r\n    } catch(err) {\r\n        console.log(\"addTaskItem: \", err)\r\n        dispatch({ type: actions.ADD_TASK_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\n\r\nexport const editTaskItem = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.EDIT_TASK_START });\r\n    try {\r\n        await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(data.taskId).update({[data.field]: data.value});\r\n        \r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n        dispatch({ type: actions.EDIT_TASK_SUCCESS });\r\n\r\n    } catch(err) {\r\n        console.log(\"editTaskItem: \", err)\r\n        dispatch({ type: actions.EDIT_TASK_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const deleteTaskItem = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.DELETE_TASK_START });\r\n    try {\r\n        await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(data.taskId).delete();\r\n        \r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n        dispatch({ type: actions.DELETE_TASK_SUCCESS });\r\n\r\n    } catch(err) {\r\n        console.log(\"deleteTaskItem: \", err)\r\n        dispatch({ type: actions.DELETE_TASK_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\nexport const deleteAllTaskItems = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    dispatch({ type: actions.DELETE_ALL_TASKS_START });\r\n    try {\r\n        const snapshot = await firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).where('completed', '==', true).get();\r\n        snapshot.forEach(doc => {\r\n            firestore.collection(TASKS_LISTS_COLLECTION).doc(data.listId).collection(TASKS_ITEMS_SUBCOLLECTION).doc(doc.id).delete();\r\n        });\r\n\r\n        getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n        getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n        dispatch({ type: actions.DELETE_ALL_TASKS_SUCCESS });\r\n\r\n    } catch(err) {\r\n        console.log(\"deleteAllTaskItems: \", err)\r\n        dispatch({ type: actions.DELETE_ALL_TASKS_FAIL, payload: err.message });\r\n    }\r\n}\r\n\r\n// Friend Item\r\nexport const addFriend = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // const firebase = getFirebase();\r\n    // const firestore = getFirestore();\r\n    // dispatch({ type: actions.ADD_FRIEND_START });\r\n    // try {\r\n    //     const user = firebase.auth().currentUser;\r\n\r\n    //     let friendRequests = await firestore.collection(USER_COLLECTION).doc(data.friendId).get(\"friendRequests\");\r\n    //     friendRequests.append(user.uid);\r\n\r\n    //     firestore.collection(USER_COLLECTION).doc(data.friendId).update({\r\n    //         [\"friendRequests\"]: friendRequests\r\n    //     })\r\n\r\n    //     dispatch({ type: actions.ADD_FRIEND_SUCCESS });\r\n\r\n    // } catch(err) {\r\n    //     dispatch({ type: actions.ADD_FRIEND_FAIL, payload: err.message });\r\n    // }\r\n}\r\n\r\nexport const deleteFriend = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // const firebase = getFirebase();\r\n    // const firestore = getFirestore();\r\n    // dispatch({ type: actions.DELETE_FRIEND_START });\r\n    // try {\r\n    //     const user = firebase.auth().currentUser;\r\n\r\n    //     let userFriends = await firestore.collection(USER_COLLECTION).doc(user.uid).get(\"friendRequests\");\r\n    //     userFriends.filter(friendId => friendId != data.unfriendId);\r\n    //     firestore.collection(USER_COLLECTION).doc(user.uid).update({\r\n    //         [\"friendRequests\"]: userFriends\r\n    //     })\r\n\r\n    //     let unfriendFriends = firestore.collection(USER_COLLECTION).doc(data.friendId).get(\"friendRequests\");\r\n    //     unfriendFriends.filter(friendId => friendId != user.uid);\r\n    //     firestore.collection(USER_COLLECTION).doc(data.friendId).update({\r\n    //         [\"friendRequests\"]: unfriendFriends\r\n    //     })\r\n\r\n    //     dispatch({ type: actions.DELETE_FRIEND_SUCCESS });\r\n\r\n    // } catch(err) {\r\n    //     dispatch({ type: actions.DELETE_FRIEND_FAIL, payload: err.message });\r\n    // }\r\n}\r\n\r\nexport const acceptFriend = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // const firebase = getFirebase();\r\n    // const firestore = getFirestore();\r\n    // dispatch({ type: actions.ACCEPT_FRIEND_START });\r\n    // try {\r\n    //     const user = firebase.auth().currentUser;\r\n\r\n    //     let userFriends = await firestore.collection(USER_COLLECTION).doc(user.uid).get(\"friends\");\r\n    //     userFriends.append(data.friendId);\r\n    //     firestore.collection(USER_COLLECTION).doc(user.uid).update({\r\n    //         [\"friends\"]: userFriends\r\n    //     })\r\n\r\n    //     let friendFriends = firestore.collection(USER_COLLECTION).doc(data.friendId).get(\"friends\");\r\n    //     friendFriends.append(user.uid);\r\n    //     firestore.collection(USER_COLLECTION).doc(data.friendId).update({\r\n    //         [\"friends\"]: friendFriends\r\n    //     })\r\n\r\n    //     let requests = firestore.collection(USER_COLLECTION).doc(user.uid).get(\"friendRequests\");\r\n    //     requests.filter(friendId => friendId != data.friendId);\r\n    //     firestore.collection(USER_COLLECTION).doc(user.uid).update({\r\n    //         [\"friendRequests\"]: requests\r\n    //     })\r\n\r\n    //     let invites = firestore.collection(USER_COLLECTION).doc(data.friendId).get(\"friendInvites\");\r\n    //     invites.append(friendId => friendId != user.uid);\r\n    //     firestore.collection(USER_COLLECTION).doc(data.friendId).update({\r\n    //         [\"friendInvites\"]: invites\r\n    //     })\r\n\r\n    //     dispatch({ type: actions.ACCEPT_FRIEND_SUCCESS });\r\n\r\n    // } catch(err) {\r\n    //     dispatch({ type: actions.ACCEPT_FRIEND_FAIL, payload: err.message });\r\n    // }\r\n}\r\n\r\nexport const selectList = data => async (dispatch, getState, { getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    const user = firebase.auth().currentUser;\r\n    console.log(\"selectList\", data.listName);\r\n    if (data.onListSelected) {\r\n        dispatch({ \r\n            type: actions. SELECT_TASK_LIST, \r\n            listId: data.listId, \r\n            listName: data.listName, \r\n            onListSelected: data.onListSelected\r\n        })\r\n        getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n    } else {\r\n        dispatch({ \r\n            type: actions.SELECT_TASK_LIST, \r\n            listId: null, \r\n            taskItems: null, \r\n            listName: null, \r\n            onListSelected: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getLists = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    console.log(\"getLists\");\r\n    getTaskList(dispatch, getFirebase, getFirestore, data.sortView, data.filterView);\r\n}\r\n\r\nexport const getItems = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n}\r\n\r\nexport const appCleanUp = data => (dispatch) => {\r\n    dispatch({ type: actions.LOGOUT_CLEAN_UP})\r\n}\r\n\r\nexport const setSortByView = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n    dispatch({ type: actions.SET_SORT_VIEW, sortView: data.sortView})\r\n}\r\n\r\nexport const setFilterByView = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    getTaskItems(dispatch, getFirebase, getFirestore, data.listId, data.sortView, data.filterView);\r\n    dispatch({ type: actions.SET_FILTER_VIEW, filterView: data.filterView})\r\n}\r\n\r\n\r\n// Helper functions\r\nasync function getTaskList(dispatch, getFirebase, getFirestore) {\r\n    console.log(\"getTaskList\");\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    const user = firebase.auth().currentUser;\r\n\r\n    let taskListData = [];\r\n    await firestore\r\n        .collection(TASKS_LISTS_COLLECTION)\r\n        .where('sharedWith', \"array-contains\", user.email)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                taskListData.push(doc.data());\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n\r\n    dispatch({ \r\n        type: actions.GET_TASK_LISTS, \r\n        tasksLists: taskListData\r\n    })\r\n}\r\n\r\nasync function getTaskItems(dispatch, getFirebase, getFirestore, listId, sortView, filterView) {\r\n    console.log(\"getTaskItems\", listId, sortView, filterView);\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    const user = firebase.auth().currentUser;\r\n\r\n    let tasksItems = []\r\n    \r\n    if (sortView === \"priority\") {\r\n        await firestore\r\n        .collection(TASKS_LISTS_COLLECTION)\r\n        .doc(listId)\r\n        .collection(TASKS_ITEMS_SUBCOLLECTION)\r\n        .orderBy(sortView, \"desc\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((document) => {\r\n                tasksItems.push(document.data());\r\n            });\r\n        });\r\n    } else {\r\n        await firestore\r\n        .collection(TASKS_LISTS_COLLECTION)\r\n        .doc(listId)\r\n        .collection(TASKS_ITEMS_SUBCOLLECTION)\r\n        .orderBy(sortView)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((document) => {\r\n                tasksItems.push(document.data());\r\n            });\r\n        });\r\n    }\r\n\r\n    if (filterView === \"In Progress\") {\r\n        tasksItems = tasksItems.filter((doc) => !doc.completed)\r\n    } else if (filterView === \"Done\") {\r\n        tasksItems = tasksItems.filter((doc) => doc.completed)\r\n    }\r\n\r\n    let hasCompleted = tasksItems.filter((doc) => doc.completed).length != 0;\r\n    \r\n    dispatch({ \r\n        type: actions.GET_TASK_ITEMS, \r\n        tasksItems: tasksItems,\r\n        hasCompleted: hasCompleted,\r\n    })\r\n}\r\n\r\n","import * as Yup from 'yup'\r\n\r\nconst LogInSchema = Yup.object().shape({\r\n    email: Yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\"),\r\n    password: Yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter your password\"),\r\n})\r\n\r\nexport default LogInSchema;","import React, { useEffect } from 'react'\r\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../backend/store/actions'\r\nimport LogInSchema from './LogInSchemas'\r\n\r\nconst LogInForm = ({ logInEmail, logInGoogle, loading, error, cleanUp }) => {\r\n  let displayError\r\n\r\n  if (error) {\r\n      displayError = {display: \"block\"}\r\n  } else {\r\n      displayError = {display: \"none\"}\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanUp()\r\n    }\r\n  }, [cleanUp])\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues = {{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema = {LogInSchema}\r\n        onSubmit = {async ( values, { resetForm, setSubmitting }) => {\r\n          await logInEmail(values)\r\n          resetForm()\r\n          setSubmitting(false)\r\n        }}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form className = \"classic-form\">\r\n              \r\n            <div className = {[\"text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \r\n              <label> Email </label> <br />\r\n              <Field name = \"email\" type = \"email\"/> <br/>\r\n              <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\r\n            </div>\r\n            \r\n            <div className = {[\"text-input\", touched.password && errors.password && \"text-error\"].join(' ')}>\r\n              <label> Password </label> <br />\r\n              <Field name = \"password\" type = \"password\"/> <br/>\r\n              <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"password\" />\r\n            </div>\r\n\r\n            <p style = {displayError}>{error}</p>\r\n            <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Log In </button>\r\n\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n\r\n      <button onClick={() => logInGoogle()}>Login with Google</button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  loading: auth.loading,\r\n  error: auth.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  logInEmail: actions.logInEmail,\r\n  logInGoogle: actions.logInGoogle,\r\n  cleanUp: actions.clean,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm)\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignUpLink = () => (\r\n    <pre className = \"link-text\">\r\n      New to Tasks?  <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\r\n    </pre>\r\n)\r\n\r\nexport default SignUpLink","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const LOG_IN = '/login';\r\nexport const LOG_OUT = '/logout';\r\nexport const HOME = '/home';\r\nexport const TASKS = '/tasks';\r\nexport const PASSWORD_RECOVERY = '/settings/password_recovery';\r\nexport const PROFILE_EDIT = '/settings/profile_edit';\r\nexport const ABOUT = '/about'\r\n// export const FRIENDS = '/friends';\r\nexport const EMAIL_VERIFICATION = '/email_verification'\r\nexport const ADD_FRIENDS = '/add_friends';\r\nexport const EDIT_FRIENDS = '/edit_friends';","import React from 'react'\r\n\r\nimport LogInForm from '../LogIn/LogInForm';\r\nimport SignUpLink from '../SignUp/SignUpLink';\r\n\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\n\r\nexport default function Landing() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"landing\">\r\n                <div className = \"regular-logo-container\">\r\n                    <img className=\"main-logo\" src = {logo} alt=\"Logo\" />\r\n                </div>\r\n\r\n                <h1> Join the Tasks! </h1>\r\n                    <LogInForm />\r\n\r\n                <div className=\"link-area\">\r\n                    <SignUpLink />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\r\nimport { styled } from '@mui/system';\r\n\r\nconst CustomButtonRoot = styled('button')`\r\n  background-color: #1565c0;\r\n  padding: 5px 12px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  transition: all 200ms ease;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\r\n  border: none;\r\n\r\n  &:hover {\r\n    background-color: #0d47a1;\r\n  }\r\n\r\n  &.${buttonUnstyledClasses.active} {\r\n    background-color: #004386;\r\n  }\r\n\r\n  &.${buttonUnstyledClasses.focusVisible} {\r\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\r\n    outline: none;\r\n  }\r\n\r\n  &.${buttonUnstyledClasses.disabled} {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\r\n    // background-color: #616161;\r\n  }\r\n`;\r\n\r\nexport default function Button(props) {\r\n  return <ButtonUnstyled {...props} component={CustomButtonRoot}/>;\r\n}","\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../backend/store/actions'\r\n\r\nimport Button from '../Misc/Button'\r\n\r\nconst LogOut = ({ logout, appCleanUp }) => {\r\n    useEffect(() => {\r\n      // logout();\r\n      appCleanUp()\r\n    }, [logout])\r\n\r\n    function handleLogout() {\r\n      appCleanUp();\r\n      logout();\r\n    }\r\n\r\n    \r\n    return (\r\n      <>\r\n          <Button onClick={() => handleLogout()}>Log Out</Button>\r\n      </>  \r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logout: actions.logOut,\r\n  appCleanUp: actions.appCleanUp,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as ROUTES from '../../constants/routes'\r\n\r\nconst LogInLink = () => (\r\n    <pre className = \"link-text\">\r\n      Already have an account?\r\n      <Link to={ROUTES.LANDING} className = \"link\">Log In</Link>\r\n    </pre>\r\n)\r\n  \r\nexport default  LogInLink","import * as Yup from 'yup'\r\n/*\r\nconst LogInSchema = Yup.object().shape({\r\n    email: Yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\"),\r\n    password: Yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter your password\"),\r\n})\r\n\r\n*/\r\nconst SignUpSchema =\r\n    Yup.object().shape({\r\n        firstName:\r\n            Yup.string(\"Must be a valid name\")\r\n            .required(\"Please enter your name\"),\r\n\r\n        lastName:\r\n            Yup.string(\"Must be a valid name\"),\r\n\r\n        username:\r\n            Yup.string(\"Must be a valid username\")\r\n            .min(4, \"Username must be at least 4 characters\")\r\n            .required(\"Please enter a username\"),\r\n\r\n        email:\r\n            Yup.string(\"Must be a valid email\")\r\n            .email(\"Must be a valid email\")\r\n            .required(\"Please enter an email\"),\r\n\r\n        password: \r\n            Yup.string()\r\n            .min(8, \"Password must be at least 8 characters\")\r\n            .required(\"Please enter a password\"),\r\n\r\n        confirmPassword:\r\n            Yup.string()\r\n            .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match\")\r\n            .required(\"Make sure you can remember your password!\")\r\n    });\r\n\r\nexport default SignUpSchema;","import React, { useEffect } from 'react'\r\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../backend/store/actions'\r\nimport SignUpSchema from './SignUpSchema';\r\n\r\nconst SignUpForm = ({ signUp, loading, error, cleanUp }) => {\r\n    let displayError\r\n\r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n\r\n    return (\r\n        <>\r\n        <Formik\r\n            initialValues = {{\r\n                // firstName: \"\",\r\n                // lastName: \"\",\r\n                username: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\",\r\n            }}\r\n            validationSchema = {SignUpSchema}\r\n            onSubmit = {async ( values, { resetForm, setSubmitting }) => {\r\n                await signUp(values)\r\n                resetForm()\r\n                setSubmitting(false)\r\n            }}\r\n        >\r\n        {({ errors, touched, isSubmitting }) => (\r\n        <Form className = \"classic-form\">\r\n            <div className = {[\"text-input\", touched.firstName && errors.firstName && \"text-error\"].join(' ')}> \r\n                <label> First name </label> <br />\r\n                <Field name = \"firstName\" type = \"text\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"firstName\" />\r\n            </div>\r\n\r\n            <div className = {[\"text-input\", touched.lastName && errors.lastName && \"text-error\"].join(' ')}> \r\n                <label> Last name </label> <br />\r\n                <Field name = \"lastName\" type = \"text\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"lastName\" />\r\n            </div>\r\n\r\n            <div className = {[\"text-input\", touched.username && errors.username && \"text-error\"].join(' ')}> \r\n                <label> Username </label> <br />\r\n                <Field name = \"username\" type = \"text\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"username\" />\r\n            </div>\r\n            \r\n            <div className = {[\"text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \r\n                <label> Email </label> <br />\r\n                <Field name = \"email\" type = \"email\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\r\n            </div>\r\n            \r\n            <div className = {[\"text-input\", touched.password && errors.password && \"text-error\"].join(' ')}>\r\n                <label> Password </label> <br />\r\n                <Field name = \"password\" type = \"password\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"password\" />\r\n            </div>\r\n\r\n            <div className = {[\"text-input\", touched.confirmPassword && errors.confirmPassword && \"text-error\"].join(' ')}>\r\n                <label> Confirm Password </label> <br />\r\n                <Field name = \"confirmPassword\" type = \"password\"/> <br/>\r\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"confirmPassword\" />\r\n            </div>\r\n\r\n\r\n\r\n            <p style = {displayError}>{error}</p>\r\n            <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Sign Up </button>\r\n        \r\n        \r\n        </Form>\r\n        )}\r\n        </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n    loading: auth.loading,\r\n    error: auth.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    signUp: actions.signUp,\r\n    cleanUp: actions.clean,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)\r\n","import React from 'react';\r\n\r\nimport LogInLink from '../LogIn/LogInLink';\r\nimport SignUpForm from './SignUpForm';\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nconst SignUpPage = () => (\r\n  <div className = \"sign-up\">\r\n\r\n    <div className = \"regular-logo-container\">\r\n      <img className = \"main-logo\" src = {logo} alt = \"Logo\" />\r\n    </div>\r\n    \r\n    <SignUpForm />\r\n\r\n    <div className = \"link-area\">\r\n      <LogInLink />\r\n    </div>\r\n\r\n  </div>\r\n)\r\n\r\nexport default SignUpPage\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n// https://react-bootstrap.github.io/components/dropdowns/\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\nimport * as actions from '../../backend/store/actions';\r\n\r\n// import '../css/Dropdown.css';\r\n// import { devices } from './Design';\r\n\r\n\r\n// const Container = styled.div`\r\n//     display: flex;\r\n//     justify-content: flex-end:\r\n// `;\r\n\r\n// const Text = styled.div`\r\n//     // margin: auto;\r\n//     @media ${devices.mobileS} { \r\n//         margin: auto 5px;\r\n// }\r\n\r\n// @media ${devices.laptop} { \r\n//     margin: auto 10px;\r\n// }\r\n\r\n// @media ${devices.desktop} { \r\n//     margin: auto 10px;\r\n// }\r\n// `;\r\n\r\n\r\n\r\n// Options for sorting the task list\r\nconst sortByOptions = {\r\n    \"dateCreated\" : \"Date Created\", \r\n    \"priority\" : \"Priority\", \r\n    \"description\" : \"Description\",\r\n  }\r\n\r\nconst SelectSortView = ({ initialSortView, filterView, listId, setSortByView }) => {\r\n    console.log(\"initial sort view\", initialSortView);\r\n    const [sortView, setSortView] = useState(initialSortView);\r\n\r\n    const handleMenuItemClick = (event, view) => {\r\n        console.log(\"new sort view\", view)\r\n        setSortView(view);\r\n        setSortByView({listId: listId, sortView: view, filterView: filterView});\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown-container\">\r\n            <div className=\"sort-by-text\">Sort By: </div>\r\n            <DropdownButton id=\"dropdown-basic-button\" title={sortByOptions[sortView]}>\r\n                {\r\n                    Object.keys(sortByOptions).map((option) => (\r\n                        <Dropdown.Item\r\n                            aria-label={sortByOptions[option]}\r\n                            key={\"drop-down-item-\" + option}\r\n                            className=\"drop-down-item\"\r\n                            onClick={(event) => handleMenuItemClick(event, option)}\r\n                            >\r\n                            {sortByOptions[option]}\r\n                            </Dropdown.Item>\r\n                        ))\r\n                }\r\n            </DropdownButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ firebase, app }) => ({\r\n    initialSortView: app.sortView,\r\n    listId: app.listId,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setSortByView: actions.setSortByView,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSortView)\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import './Tab.css';\r\n\r\nexport default function Tab(props) {\r\n    const classNames = [\"tab-list-item\"];\r\n    \r\n    if (props.activeTab === props.label) {\r\n        classNames.push(\"tab-list-active\");\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === ' ' || event.key === \"Enter\") {\r\n            props.onClickTab(props.label)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <li \r\n            tabIndex=\"0\" \r\n            className={classNames.join(\" \")} \r\n            onClick={() => props.onClickTab(props.label)}\r\n            onKeyDown={(handleKeyDown)}\r\n        >\r\n                {props.label}\r\n        </li>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport * as actions from '../../../backend/store/actions'\r\nimport Tab from \"./Tab\";\r\n\r\n\r\n\r\n\r\n\r\n// const filterByOptions = [\"All\", \"Dont\", \"In Progress\"]\r\n\r\nconst TabList = ({ sortView, listId, initialFilterView, setFilterByView, children }) => {\r\n    console.log(\"initial filter by: \", initialFilterView)\r\n    const [activeTab, setActiveTab] = useState(initialFilterView);\r\n\r\n    function onTabChange(tab) {\r\n        console.log(\"new filter by: \", tab)\r\n        setFilterByView({filterView: tab, sortView: sortView, listId: listId});\r\n        setActiveTab(tab)\r\n    }\r\n\r\n    return (\r\n        <div className=\"tabs\">\r\n            <ol className=\"tab-list\">\r\n                {\r\n                    children.map((child) => \r\n                        <Tab \r\n                            key={child.key}\r\n                            label={child.key}\r\n                            activeTab={activeTab}\r\n                            onClickTab={() => onTabChange(child.key)}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n            {children.map((child) => activeTab === child.key && child)}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ firebase, app }) => ({\r\n    initialFilterView: app.filterView,\r\n    sortView: app.sortView,\r\n    listId: app.listId,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setFilterByView: actions.setFilterByView,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabList)\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nconst StyledTextAreaAutosize = styled(TextareaAutosize)`\r\n    outline: none;  \r\n    background-color: black;\r\n    color: ${prop => prop.completed === \"true\" ? '#555555' : 'lightgray'};\r\n    border: none;\r\n    width: 60%;\r\n    &:focus {\r\n        border: none;\r\n        border-bottom: 2px solid gray;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    resize: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport default function AutoResizeTextArea(props) {\r\n\treturn <StyledTextAreaAutosize {...props} />;\r\n  }","import React, {useState, useEffect} from 'react';\r\n// import styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\nimport Button from '../../Misc/Button';\r\nimport AutoResizeTextArea from '../../Misc/AutoResizeTextArea';\r\n\r\n\r\n\r\nconst AddTaskList = ({ selectList, addTaskList, loading, error, cleanUp, sortView, filterView }) => {\r\n    const [listName, setStateListName] = useState(\"\");\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n        console.log(error);\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n        \r\n  \r\n    function handleSubmit() {\r\n        let id = generateUniqueID();\r\n        selectList({listId: id, listName: listName, onListSelected: true, sortView: sortView, filterView: filterView})\r\n        addTaskList({name: listName, listId: id, sortView: sortView, filterView: filterView})\r\n        setStateListName(\"\");\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-task-list-container\">\r\n            <AutoResizeTextArea \r\n                aria-label=\"New task list name\"\r\n                completed={\"false\"} \r\n                placeholder=\"New task list\" \r\n                value={listName} \r\n                onChange={event => setStateListName(event.target.value)} \r\n                onKeyDown={handleKeyDown}\r\n            /> \r\n            \r\n            <Button \r\n                aria-label=\"Add new task list\"\r\n                className=\"submitButton\" \r\n                disabled={listName===\"\"} \r\n                variant=\"contained\" \r\n                onClick={() => handleSubmit()}\r\n            >\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    loading: app.addTaskList.loading,\r\n    error: app.addTaskList.error,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTaskList: actions.addTaskList,\r\n    selectList: actions.selectList,\r\n\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskList)","import React, {useState, useEffect} from 'react';\r\n// import styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\n\r\nconst DeleteTaskList = ({ deleteTaskList, selectList, loading, error, cleanUp, currentListId, listId, name, sortView, filterView }) => {\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n        console.log(error);\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n        \r\n  \r\n    function handleDelete() {\r\n        if (currentListId === listId) {\r\n            selectList({listId: null, listName: null, onListSelected: false, sortView: sortView, filterView: filterView})\r\n        }\r\n        deleteTaskList({listId: listId, sortView: sortView, filterView: filterView})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconButton aria-label={\"Delete \" + name + \" list\"} size=\"small\" onClick={() => handleDelete()} sx={{padding: 0}}>\r\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\r\n            </IconButton>   \r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    loading: app.deleteTaskList.loading,\r\n    error: app.deleteTaskList.error,\r\n    currentListId: app.listId,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    deleteTaskList: actions.deleteTaskList,\r\n    selectList: actions.selectList,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteTaskList)","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\n\r\n// Local imports\r\nimport Button from '../../Misc/Button';\r\nimport DeleteTaskList from './DeleteTaskList';\r\n\r\nimport * as actions from '../../../backend/store/actions'\r\n\r\n\r\nconst CustomButton = styled(Button)`\r\n    margin: 5px;\r\n    width: 100%;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    // align-content: stretch;\r\n`;\r\n\r\n\r\nconst TaskList = ({selectList, tasksLists, sortView, filterView}) => {\r\n        return(\r\n        <>\r\n            { tasksLists &&\r\n                tasksLists.map((value, index) => \r\n                    <ListContainer>\r\n                        <CustomButton\r\n                            aria-label={value.name + \" task list\"}\r\n                            onClick={() => selectList({listId: value.id, listName: value.name, onListSelected: true, sortView: sortView, filterView: filterView})}\r\n                            key={value.id}\r\n                        >\r\n                            {value.name}\r\n                        </CustomButton>\r\n                        <DeleteTaskList key={\"delete\"+value.id} listId={value.id} name={value.name}/>\r\n                    </ListContainer>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    tasksLists: app.tasksLists,\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    selectList: actions.selectList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Local imports\r\nimport AddTaskList from './AddTaskList';\r\nimport TaskList from './TaskList';\r\n\r\n\r\nexport default function TaskListPage() {\r\n    return(\r\n        <div className=\"task-list-container\">\r\n            <AddTaskList />\r\n            <TaskList />\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport Rating from '@mui/material/Rating';\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"0 10px\",\r\n        \"& > * + *\": {\r\n        marginTop: theme.spacing(1)\r\n        }\r\n    },\r\n    emptyStar: {\r\n        color: \"gray\"\r\n    }\r\n}));\r\n\r\n\r\nconst StarsRating = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Rating \r\n                aria-label=\"Priority rating\"\r\n                value={props.value}\r\n                defaultValue={props.defaultValue}\r\n                max={3}\r\n                size=\"small\"\r\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default StarsRating; ","import React, {useState, useEffect} from 'react';\r\n// import styled from 'styled-components';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\nimport Button from '../../Misc/Button';\r\nimport AutoResizeTextArea from '../../Misc/AutoResizeTextArea';\r\nimport StarsRating from '../../Misc/StarsRating';\r\n\r\n\r\nconst AddTaskItem = ({ addTaskItem, loading, error, cleanUp, listId, sortView, filterView }) => {\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [taskPriority, setTaskPriority] = useState(0);\r\n\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n        \r\n  \r\n    function handleSubmit() {\r\n        addTaskItem({listId: listId, description: taskDescription, priority: taskPriority, sortView: sortView, filterView: filterView});\r\n        setTaskDescription(\"\");\r\n        setTaskPriority(0);\r\n    }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n        handleSubmit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"new-task-container\">\r\n            <AutoResizeTextArea \r\n                completed={\"false\"} \r\n                placeholder=\"New task\" \r\n                value={taskDescription} \r\n                onChange={event => setTaskDescription(event.target.value)} \r\n                onKeyDown={(handleKeyDown)}\r\n            /> \r\n            \r\n            <div className=\"new-task-button-container\">\r\n                <StarsRating\r\n                    name=\"customized-color\"\r\n                    defaultValue={0}\r\n                    value={taskPriority}\r\n                    onChange={(event, value) => setTaskPriority(value)}\r\n                    max={3}\r\n                    size=\"small\"\r\n                />\r\n            \r\n                <Button \r\n                    className=\"submitButton\" \r\n                    disabled={taskDescription===\"\"} \r\n                    variant=\"contained\" \r\n                    onClick={handleSubmit}\r\n                >\r\n                    Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    loading: app.addTaskItem.loading,\r\n    error: app.addTaskItem.error,\r\n    listId: app.listId,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTaskItem: actions.addTaskItem,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskItem)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst DeleteTaskItem = ({ deleteTaskItem, loading, error, cleanUp, listId, taskId, sortView, filterView }) => {\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n        console.log(error);\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n  \r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n\r\n    return (\r\n        <>\r\n            <IconButton \r\n                aria-label=\"Delete task\" \r\n                size=\"small\" \r\n                onClick={() => deleteTaskItem({listId: listId, taskId: taskId, sortView: sortView, filterView: filterView})} sx={{padding: 0}}\r\n            >\r\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ auth, app }) => ({\r\n    loading: app.deleteTaskItem.loading,\r\n    error: app.deleteTaskItem.error,\r\n    listId: app.listId,\r\n\r\n    sortView: app.sortView, \r\n    filterView: app.filterView,\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    deleteTaskItem: actions.deleteTaskItem,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteTaskItem)\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\n// Local imports\r\nimport AutoResizeTextArea from '../../Misc/AutoResizeTextArea';\r\nimport StarsRating from '../../Misc/StarsRating';\r\n\r\nconst EditTaskItem = ({ editTaskItem, loading, error, cleanUp, listId, taskId, completed, description, priority, sortView, filterView }) => {\r\n    // const [taskDescription, setTaskDescription] = useState(\"\");\r\n    // const [taskPriority, setTaskPriority] = useState(0);\r\n\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n        console.log(error);\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n  \r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp()\r\n        }\r\n    }, [cleanUp])\r\n\r\n    \r\n    return (\r\n    <>\r\n        <input\r\n            className=\"task-item-checkbox\" \r\n            aria-label={ \"Mark task\"}\r\n            type=\"checkbox\" \r\n            checked={completed===true} \r\n            onChange={event => editTaskItem({\r\n                listId: listId, \r\n                taskId: taskId, \r\n                field: \"completed\", \r\n                value: event.target.checked, \r\n                sortView: sortView, \r\n                filterView: filterView})}\r\n        /> \r\n        <AutoResizeTextArea\r\n            completed={completed.toString()}\r\n            id={taskId} \r\n            placeholder={description} \r\n            defaultValue={description} \r\n            onChange={event => editTaskItem({\r\n                listId: listId, \r\n                taskId: taskId, \r\n                field: \"description\", \r\n                value: event.target.value, \r\n                sortView: sortView, \r\n                filterView: filterView})}\r\n        />\r\n        <StarsRating\r\n            value={priority}\r\n            onChange={(event, value) => editTaskItem({\r\n                listId: listId, \r\n                taskId: taskId, \r\n                field: \"priority\", \r\n                value: value, \r\n                sortView: sortView, \r\n                filterView: filterView})}\r\n            max={3}\r\n            size=\"small\"\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ auth, app }) => ({\r\n    error: app.editTaskItem.loading,\r\n    loading: app.editTaskItem.error,\r\n    listId: app.listId,\r\n\r\n    sortView: app.sortView, \r\n    filterView: app.filterView,\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    editTaskItem: actions.editTaskItem,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(EditTaskItem)\r\n","import React, { useState } from 'react';\r\n\r\n// Local imports\r\nimport DeleteTaskItem from './DeleteTaskItem';\r\nimport EditTaskItem from './EditTaskItem';\r\n\r\n\r\nexport default function TaskItem(props) {\r\n    // console.log(\"inside task item\");\r\n    // console.log(\"inside task item\", props.taskId);\r\n\r\n    return (\r\n    <>\r\n        <div className=\"task-item-container\">\r\n            <EditTaskItem \r\n                taskId={props.taskId} \r\n                completed={props.completed}\r\n                description={props.description}\r\n                priority={props.priority}\r\n            /> \r\n            <DeleteTaskItem \r\n                taskId={props.taskId} \r\n            />\r\n        </div>\r\n        \r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\nimport TaskItem from './TaskItem';\r\n\r\n\r\n/**\r\n * \r\n * \r\nconst Container = styled.div`\r\n    height: 55vh;\r\n`\r\n */\r\nconst Container = styled.div`\r\n    overflow: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    height: 100%;\r\n`;\r\n\r\nconst TaskItemList = ({tasksItems}) => {\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    return (\r\n            // <div className=\"item-list-container\">\r\n            <Container>\r\n                { tasksItems &&\r\n                    tasksItems.map((task, index) =>\r\n                        <TaskItem\r\n                            onRowClick={(id) => setSelectedId(id)}\r\n                            selected={task.id === selectedId}\r\n                            key={task.id}\r\n                            taskId={task.id}\r\n                            completed={task.completed}\r\n                            description={task.description}\r\n                            priority={task.priority}\r\n                        />\r\n                    )\r\n                }\r\n            </Container>\r\n            // </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({ firebase, app }) => ({\r\n    // userId: firebase.auth.uid,\r\n    // tasksLists: app.tasksLists,\r\n    // friends: app.friends,\r\n\r\n    listId: app.listId,\r\n    tasksItems: app.tasksItems,\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    // shareTaskList: actions.shareTaskList,\r\n    // unshareTaskList: actions.unshareTaskList,\r\n    // selectList: actions.selectList,\r\n\r\n    // cleanUp: actions.clean,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItemList)\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Local imports\r\n// import './DeleteAllCompletedButton';\r\nimport Button from '../../Misc/Button';\r\n\r\n\r\n// Create custom styled components\r\nconst Backdrop = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: black;\r\n    opacity: 100%;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    color: white;\r\n    display: flex;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    opacity: none;\r\n    opacity: 1;\r\n    background-color: rgb(46, 46, 46, 100);\r\n    background: rgb(46, 46, 46);\r\n    \r\n    border-radius: 5px;\r\n    border-color: transparent;\r\n    border-style: none;\r\n    margin: 0 auto;\r\n    height: 200px;\r\n    width: 300px;\r\n    padding: 10px;\r\n    position: relative;\r\n    align-items: center;\r\n    top: 150px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding: 10px 10px;\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    margin: auto;\r\n`;\r\n\r\n\r\nfunction DeleteAllAlert(props) {\r\n    return (\r\n    <Backdrop>\r\n        <Modal>\r\n            {props.children}\r\n                <ButtonContainer>\r\n                    <Button\r\n                        aria-label={props.cancelText ? props.cancelText : \"Cancel\"}\r\n                        onClick={props.onClose}>\r\n                        {props.cancelText ? props.cancelText : \"Cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        aria-label= {props.OKText ? props.OKText : \"Ok\"}\r\n                        onClick={props.onOK}>\r\n                        {props.OKText ? props.OKText : \"Ok\"}\r\n                    </Button>\r\n                </ButtonContainer>\r\n        </Modal>\r\n    </Backdrop>\r\n    );\r\n}\r\n\r\nexport default DeleteAllAlert;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n// Local imports\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\nimport DeleteAllAlert from './DeleteAllAlert.js';\r\nimport Button from '../../Misc/Button';\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-end;\r\n    font-size: 4px;\r\n    height: 10%;\r\n`;\r\n\r\nconst ModalText = styled.div`\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    opacity: 100%;\r\n`;\r\n\r\nconst DeleteAllCompletedButton = ({ deleteAllTaskItems, loading, error, cleanUp, listId, sortView, filterView, hasCompleted }) => {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n\r\n    // function toggleModal(modalState) {\r\n    //     setShowAlert(modalState);\r\n    // }\r\n\r\n    function handleAlertOK() {\r\n        deleteAllTaskItems({listId: listId, sortView: sortView, filterView: filterView});\r\n        setShowAlert(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container> \r\n            <Button \r\n                aria-label=\"Delete all completed tasks\" \r\n                disabled={!hasCompleted} \r\n                onClick={() => setShowAlert(true)}>\r\n                    Delete Completed\r\n                </Button>\r\n            {showAlert &&\r\n                <DeleteAllAlert onClose={() => setShowAlert(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\r\n                    <ModalText tabIndex=\"0\" aria-label=\"Are you sure you want to delete all completed tasks?\">\r\n                        Are you sure you want to delete all completed tasks?\r\n                    </ModalText>\r\n                </DeleteAllAlert>\r\n            }\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    // loading: app.deleteAllTaskItems.loading,\r\n    // error: app.deleteAllTaskItems.error,\r\n    listId: app.listId,\r\n    hasCompleted: app.hasCompleted,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    deleteAllTaskItems: actions.deleteAllTaskItems,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAllCompletedButton)\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../../backend/store/actions'\r\n// Local imports\r\n\r\nimport AddTaskItem from './AddTaskItem';\r\nimport TaskItemList from './TaskItemList';\r\nimport DeleteAllCompletedButton from './DeleteAllCompletedButton';\r\n\r\n// const CustomButton = styled(Button)`\r\n//     margin: 5px;\r\n//     width: 100%;\r\n// `;\r\n\r\nconst ListContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    // align-content: stretch;\r\n`;\r\n\r\nexport default function TaskItemPage() {\r\n    console.log(\"made it to task item page\");\r\n    return (\r\n        <div className=\"items-container\">\r\n            {/* <AddTaskItem/> */}\r\n            <div className=\"item-list-container-size\">\r\n                <TaskItemList/>\r\n            </div>\r\n            <DeleteAllCompletedButton/>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n// Local imports\r\n\r\nimport * as actions from '../../../backend/store/actions';\r\nimport Button from '../../Misc/Button';\r\nimport AutoResizeTextArea from '../../Misc/AutoResizeTextArea';\r\n\r\n\r\n// Create custom styled components\r\nconst Backdrop = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: black;\r\n    opacity: 100%;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    color: white;\r\n    display: flex;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    opacity: none;\r\n    opacity: 1;\r\n    background-color: rgb(46, 46, 46, 100);\r\n    background: rgb(46, 46, 46);\r\n    \r\n    border-radius: 5px;\r\n    border-color: transparent;\r\n    border-style: none;\r\n    margin: 0 auto;\r\n    height: 300px;\r\n    width: 500px;\r\n    padding: 10px;\r\n    position: relative;\r\n    align-items: center;\r\n    top: 150px;\r\n\r\n    z-index: 1;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding: 10px 10px;\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    margin: auto;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 60%;\r\n    height: 20px;\r\n    font-size: 15px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    opacity: 100%;\r\n\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    // justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst ShareTaskPopup = ({ onOK, onClose, OKText, cancelText, loading, error, cleanUp, listId, sortView, filterView, children }) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n\r\n    function handleSubmit() {\r\n        onOK({listId: listId, shareEmail: email, sortView: sortView, filterView: filterView})\r\n        // selectList({listId: id, name: listName, onListSelected: true, sortView: sortView, filterView: filterView})\r\n        // addTaskList({name: listName, listId: id, sortView: sortView, filterView: filterView})\r\n        setEmail(\"\");\r\n    }\r\n\r\n    function handleCancel() {\r\n        setEmail(\"\")\r\n        onClose()\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n    <Backdrop>\r\n        <Modal>\r\n            {children}\r\n                <InputContainer>\r\n                    <Text> Share with: </Text>\r\n                    <Input \r\n                        aria-label=\"share with\"\r\n                        completed={\"false\"} \r\n                        placeholder=\"email\" \r\n                        value={email} \r\n                        onChange={event => setEmail(event.target.value)} \r\n                        onKeyDown={handleKeyDown}\r\n                    />\r\n                </InputContainer>\r\n                <ButtonContainer>\r\n                    \r\n                    <Button\r\n                        aria-label={cancelText ? cancelText : \"Cancel\"}\r\n                        onClick={() => handleCancel()}>\r\n                        {cancelText ? cancelText : \"Cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        aria-label= {OKText ? OKText : \"Ok\"}\r\n                        onClick={() => handleSubmit()}>\r\n                        {OKText ? OKText : \"Ok\"}\r\n                    </Button>\r\n                </ButtonContainer>\r\n        </Modal>\r\n    </Backdrop>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    loading: app.addTaskList.loading,\r\n    error: app.addTaskList.error,\r\n\r\n    listId: app.listId,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    // shareTaskList: actions.shareTaskList,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShareTaskPopup)","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\n// Local imports\r\nimport * as actions from '../../../backend/store/actions';\r\n\r\nimport ShareTaskPopup from './ShareTaskPopup.js';\r\nimport Button from '../../Misc/Button';\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-end;\r\n    font-size: 4px;\r\n    height: 10%;\r\n`;\r\n\r\nconst ModalText = styled.div`\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    opacity: 100%;\r\n`;\r\n\r\nconst ShareTaskList = ({ shareTaskList, listName, loading, error, cleanUp, listId, sortView, filterView, hasCompleted }) => {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    let displayError\r\n  \r\n    if (error) {\r\n        displayError = {display: \"block\"}\r\n    } else {\r\n        displayError = {display: \"none\"}\r\n    }\r\n\r\n    function handleAlertOK(data) {\r\n        shareTaskList(data)\r\n        setShowAlert(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container> \r\n            <IconButton \r\n                aria-label=\"Share task list\" \r\n                size=\"small\" \r\n                onClick={() => setShowAlert(true)}\r\n            >\r\n                <ShareIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\r\n            </IconButton>\r\n            {showAlert &&\r\n                <ShareTaskPopup onClose={() => setShowAlert(false)} onOK={(data) => handleAlertOK(data)} cancelText=\"Cancel\" OKText=\"Share\" >\r\n                    <ModalText tabIndex=\"0\" aria-label=\"Who would you like to share this task list with?\" >\r\n                        Who would you like to share the task list \"{listName}\" with? \r\n                    </ModalText>\r\n                </ShareTaskPopup>\r\n            }\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n    // loading: app.deleteAllTaskItems.loading,\r\n    // error: app.deleteAllTaskItems.error,\r\n    listId: app.listId,\r\n    listName: app.listName,\r\n\r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    shareTaskList: actions.shareTaskList,\r\n    cleanUp: actions.clean,\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShareTaskList)\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n\r\nimport * as actions from '../../backend/store/actions'\r\n// Local imports\r\nimport '../../App.css';\r\nimport '../../stylesheets/tasks.css';\r\n\r\nimport SelectSortView from './SelectSortView';\r\nimport TabList from './Tabs/TabList';\r\nimport TaskListPage from './List/TaskListPage';\r\nimport TaskItemPage from './Item/TaskItemPage';\r\nimport AddTaskItem from './Item/AddTaskItem';\r\nimport Button from '../Misc/Button';\r\nimport ShareTaskList from './List/ShareTaskList';\r\n\r\nimport LogOut from '../LogOut/LogOut';\r\n\r\n\r\nconst CustomButton = styled(Button)`\r\n    margin: 5px;\r\n    width: 100%;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    // align-content: stretch;\r\n`;\r\n\r\nconst TaskPage = ({ listId, listName }) => {\r\n    console.log(listName);\r\n    const isMobile = useMediaQuery({maxWidth: 600})\r\n\r\n    return (\r\n        <div className=\"task-page-container\">\r\n            <LogOut />\r\n            <div className=\"list-container\">\r\n                <TaskListPage />\r\n            </div>\r\n            \r\n            <div className=\"item-list-container\">\r\n                \r\n                \r\n                {\r\n                    listId && \r\n                    <>\r\n                        <div className=\"item-list-header\">\r\n                            <div className=\"item-list-title\" aria-label={listName}>{listName}</div>\r\n                            <SelectSortView />\r\n                            <ShareTaskList />\r\n                        </div>\r\n\r\n                        <div className=\"items-list-body\">\r\n                            <AddTaskItem />\r\n                            <TabList aria-label=\"Filter view options tab\">\r\n                                <div key=\"All\">\r\n                                    <TaskItemPage aria-label=\"View all tasks\" />\r\n                                </div>\r\n\r\n                                <div key=\"Done\">\r\n                                    <TaskItemPage aria-label=\"View done tasks\" />\r\n                                </div>\r\n\r\n                                <div key=\"In Progress\">\r\n                                    <TaskItemPage aria-label=\"View in progress tasks\" />\r\n                                </div>\r\n                            </TabList>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ firebase, app }) => ({\r\n    userId: firebase.auth.uid,\r\n    tasksLists: app.tasksLists,\r\n    friends: app.friends,\r\n\r\n\r\n    listId: app.listId,\r\n\r\n    // tasksItems: app.tasksItems,\r\n    listName: app.listName,\r\n    // onListSelected: app.onListSelected,\r\n    \r\n    // shareTaskListLoading: app.shareTaskList.loading,\r\n    // shareTaskListError: app.shareTaskList.error,\r\n\r\n    // unshareTaskListLoading: app.unshareTaskList.loading,\r\n    // unshareTaskListError: app.unshareTaskList.error,\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    // shareTaskList: actions.shareTaskList,\r\n    // unshareTaskList: actions.unshareTaskList,\r\n    // selectList: actions.selectList,\r\n\r\n    cleanUp: actions.clean,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPage)\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport * as ROUTES from './constants/routes'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './backend/store/actions'\r\n\r\nimport Landing from './components/Landing/Landing';\r\n// import SignUp from '../SignUp'\r\nimport LogOut from './components/LogOut/LogOut';\r\n// import LogInForm from './components/LogIn/LogInForm';\r\nimport SignUpPage from './components/SignUp/SignUpPage';\r\nimport TaskPage from './components/Tasks/TaskPage';\r\n// import Home from '../Home'\r\n// import Menu from '../Menu'\r\n// import PasswordRecovery from '../Profile/PasswordRecovery.js'\r\n// import ProfileEdit from '../Profile/ProfileEdit.js'\r\n// import Restaurants from '../Restaurants'\r\n// import About from '../About'\r\n// import Navbar from '../Navigation'\r\n// import Backdrop from '../Navigation/Backdrop.js'\r\n// import Friends from '../Friends/Friend'\r\n// import EmailVerification from '../EmailVerification'\r\n// import AddFriends from '../Friends/AddFriends'\r\n// import EditFriends from '../Friends/EditFriends'\r\n// import PickFood from '../Food/PickFood'\r\n\r\n// import '../../stylesheets/Landing.css'\r\n// import '../../stylesheets/SignUp.css'\r\n// import '../../stylesheets/Restaurants.css'\r\n// import '../../stylesheets/Menu.css'\r\n// import '../../stylesheets/Home.css'\r\n// import '../../stylesheets/SearchBar.css'\r\n// import '../../stylesheets/Backdrop.css'\r\n// import '../../stylesheets/DrawerToggleButton.css'\r\n// import '../../stylesheets/CheatingToolbar.css'\r\n// import '../../stylesheets/Loader.css'\r\n// import '../../stylesheets/Navbar.css'\r\n// import '../../stylesheets/Friends.css'\r\n// import '../../stylesheets/EmailVerification.css'\r\n// import '../../stylesheets/ProfileChange.css'\r\nimport './stylesheets/main-logo.css';\r\nimport './stylesheets/selectSortView.css';\r\nimport './stylesheets/tabs.css';\r\n\r\n// import '../../stylesheets/titles.css'\r\n// import '../../stylesheets/button.css'\r\n// import '../../stylesheets/form.css'\r\n// import '../../stylesheets/about.css'\r\n// import '../../stylesheets/PasswordChange.css'\r\n\r\nconst App = ({ getLists, userId, sideDrawer, emailVerified, sortView, filterView }) => {\r\n    \r\n    let routes;\r\n    let backdrop;\r\n\r\n    if (sideDrawer) {\r\n        backdrop = <div>backdrop</div> //<Backdrop click = {close}/>\r\n    }\r\n\r\n    if (userId && !emailVerified) {\r\n        routes = (\r\n        <>\r\n            <button>Resend email verification</button>\r\n            {/* <Navbar drawerClickHandler = {open}/>\r\n            <Menu show = {sideDrawer} />\r\n            {backdrop} */}\r\n            <Switch> \r\n                {/* <Route exact path={ROUTES.EMAIL_VERIFICATION} component={EmailVerification} /> */}\r\n                <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\r\n                {/* <Redirect to={ROUTES.EMAIL_VERIFICATION} /> */}\r\n            </Switch>\r\n        </>\r\n        )\r\n    } else if (userId && emailVerified) {\r\n        getLists({sortView: sortView, filterView: filterView});\r\n        routes = (\r\n        <>\r\n            {/* <div>App</div>\r\n           <LogOut/> */}\r\n            {/* <Navbar drawerClickHandler = {open}/>\r\n            <Menu show = {sideDrawer} />\r\n            {backdrop} */}\r\n\r\n            <Switch>\r\n                {/* <Route exact path={ROUTES.HOME} component={Home} /> */}\r\n                <Route exact path={ROUTES.TASKS} component={TaskPage} />\r\n                <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\r\n                {/* <Route exact path={ROUTES.MENU} component={Menu} />\r\n                <Route exact path={ROUTES.PASSWORD_RECOVERY} component={PasswordRecovery} />\r\n                <Route exact path={ROUTES.PROFILE_EDIT} component={ProfileEdit} />\r\n                <Route exact path={ROUTES.RESTAURANTS} component={Restaurants} />\r\n                <Route exact path={ROUTES.ABOUT} component={About} />\r\n                <Route exact path={ROUTES.ADD_FRIENDS} component={AddFriends} />\r\n                <Route exact path={ROUTES.EDIT_FRIENDS} component={EditFriends} />\r\n                <Route exact path={ROUTES.PICK_FOOD} component={PickFood} /> */}\r\n                {/* <Redirect to={ROUTES.HOME} /> */}\r\n                {/* <Redirect to={ROUTES.LOG_OUT} /> */}\r\n                <Redirect to={ROUTES.TASKS} />\r\n\r\n            </Switch>\r\n        </>\r\n        )\r\n    } else {\r\n        routes = (\r\n        // <>\r\n        //     <div>Login Page</div>\r\n        //     <LogIn></LogIn>\r\n        //     <SignUp></SignUp>\r\n        //     {/* <button><SignUp></SignUp></button> */}\r\n        // </>\r\n        <Switch>\r\n            <Route exact path={ROUTES.LANDING} component={Landing} />\r\n            <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            {/* <Route exact path={ROUTES.ABOUT} component={About} />\r\n            <Route exact path={ROUTES.PASSWORD_RECOVERY} component={PasswordRecovery} /> */}\r\n            <Redirect to={ROUTES.LANDING} />\r\n        </Switch>\r\n        )\r\n    }\r\n\r\n    return  <main> {routes} </main>\r\n}\r\n\r\nconst mapStateToProps = ({ firebase, app}) => ({\r\n    userId: firebase.auth.uid,\r\n    emailVerified: firebase.auth.emailVerified,\r\n    \r\n    sortView: app.sortView,\r\n    filterView: app.filterView,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getLists: actions.getLists,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import InMemoryApp from './InMemoryApp';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './backend/store';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport Loader from './components/Loader/Loader';\r\nimport App from './App';\r\n\r\n\r\nconst root = document.getElementById('root')\r\n\r\nReactDOM.render(<Loader />, root)\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store = {store}>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n    root\r\n  )\r\n});\r\n\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <InMemoryApp/>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}