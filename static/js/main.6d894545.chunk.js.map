{"version":3,"sources":["components/Design.js","components/CustomDropdown.js","components/MultiList/BackButton.js","components/OurButton.js","components/AutoResizeTextArea.js","components/MultiList/SelectListDesktop.js","components/MultiList/SelectListMobile.js","components/StarsRating.js","components/Tasks/NewTask.js","components/Tabs/Tab.js","components/Tabs/TabList.js","components/Tasks/TaskItem.js","components/Tasks/TaskList.js","components/Tasks/TasksSortedList.js","components/Alert.js","components/DeleteAllCompletedButton.js","TaskDetailView.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","Container","styled","div","Text","CustomDropdown","props","React","useState","sortView","setSortView","DropdownButton","id","title","sortByOptions","Object","keys","map","option","Dropdown","Item","className","onClick","event","view","onSelectView","BackButton","IconButton","label","size","onSetOnMenuView","sx","padding","fontSize","color","CustomButtonRoot","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","ButtonUnstyled","component","StyledTextAreaAutosize","TextareaAutosize","prop","completed","AutoResizeTextArea","AddContainer","CustomButton","ListContainer","SelectListMobile","taskListName","setNewTaskList","handleSubmit","generateUniqueID","onHandleAddTaskList","onSetListName","onSetListId","placeholder","value","onChange","target","onKeyDown","key","variant","tasksLists","index","name","listId","onHandleDeleteTaskList","useStyles","makeStyles","theme","root","margin","marginTop","spacing","emptyStar","StarsRating","classes","Rating","defaultValue","max","emptyIcon","SubmitButtonContainer","NewTask","taskDescription","setTaskDescription","taskPriority","setTaskPriority","onAddTask","Tab","classNames","activeTab","push","tabIndex","join","onClickTab","TabList","setActiveTab","children","child","tab","onTabChange","CheckBox","input","TaskItem","type","checked","onTaskFieldChanged","toString","description","priority","onDeleteTask","TaskList","selectedId","setSelectedId","data","a","onRowClick","selected","TasksSortedList","handleDeleteTask","handleTaskFieldChanged","Backdrop","Modal","ButtonContainer","Alert","cancelText","onClose","OKText","onOK","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","SUBCOLLECTION","COLLECTION","Body","TaskDetailView","tasksQuery","filterView","setFilterView","hasCompleted","db","collection","doc","orderBy","useCollection","allTasksValue","allTasksLoading","taskId","delete","field","update","where","get","forEach","docs","filter","length","set","dateCreated","firebase","firestore","Timestamp","now","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ContentContainer","DestkopContainer","Header","Title","App","setListId","listName","setListName","onMenuView","setOnMenuView","isMobile","useMediaQuery","maxWidth","FamilyRestroomOutlined","taskListQuery","allTaskListsValue","allTaskListsLoading","taskListData","handleAddTaskList","handleDeleteTaskList","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d894545.chunk.js","sourcesContent":["const sizes = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px',\n};\n\nexport const devices = {\n    mobileS: `(min-width: ${sizes.mobileS})`,\n    mobileM: `(min-width: ${sizes.mobileM})`,\n    mobileL: `(min-width: ${sizes.mobileL})`,\n    tablet: `(min-width: ${sizes.tablet})`,\n    laptop: `(min-width: ${sizes.laptop})`,\n    laptopL: `(min-width: ${sizes.laptopL})`,\n    desktop: `(min-width: ${sizes.desktop})`,\n};","import React from 'react';\nimport styled from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nimport '../css/Dropdown.css';\nimport { devices } from './Design';\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end:\n`;\n\nconst Text = styled.div`\n  // margin: auto;\n  @media ${devices.mobileS} { \n    margin: auto 5px;\n  }\n\n  @media ${devices.laptop} { \n    margin: auto 10px;\n  }\n\n  @media ${devices.desktop} { \n    margin: auto 10px;\n  }\n`;\n\n\nexport default function CustomDropdown(props) {\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    onSelectView(view);\n  };\n\n  return (\n    <Container>\n    <Text>Sort by</Text>\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item\n            aria-label={props.sortByOptions[option]}\n            key={\"drop-down-item-\" + option}\n            className=\"drop-down-item\"\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n      }\n    </DropdownButton>\n    </Container>\n\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport IconButton from '@mui/material/IconButton';\n\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\n\nimport '../../css/Dropdown.css';\n\n\nfunction BackButton(props) {\n\n    return (\n      <>\n        <>\n          <IconButton aria-label={props.label} size=\"small\" onClick={() => props.onSetOnMenuView(true)} sx={{padding: 0}}>\n            <ArrowBackIosNewIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n          </IconButton>\n        </>\n          \n      </>\n    );\n  }\n  \n  export default BackButton;\n  \n  \n  \n","import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 5px 12px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot}/>;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextAreaAutosize = styled(TextareaAutosize)`\n  outline: none;  \n  background-color: black;\n  color: ${prop => prop.completed === \"true\" ? '#555555' : 'lightgray'};\n  border: none;\n  width: 60%;\n  &:focus {\n    border: none;\n    border-bottom: 2px solid gray;\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  resize: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextAreaAutosize {...props} />;\n  }","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport { devices } from '../Design';\n\n\nconst AddContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    margin: 5vw 0 8vw 0;\n    justify-content: space-between;\n    // z-index: -1;\n    padding: 12px 5px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n    // align-items: flex-start;\n    // justify-content: flex-start;\n    // flex-wrap: wrap;\n`;\n\nconst CustomButton = styled(OurButton)`\n  margin: 5px;\n  width: 100%;\n`;\n\nconst ListContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  // align-content: stretch;\n`;\n\n\nexport default function SelectListMobile(props) {\n  const [taskListName, setNewTaskList] = useState(\"\");\n\n  \n  \n  function handleSubmit() {\n    let id = generateUniqueID();\n    props.onHandleAddTaskList(taskListName, id);\n    props.onSetListName(taskListName);\n    setNewTaskList(\"\");\n    props.onSetOnMenuView(false);\n    props.onSetListId(id);\n  }\n \n  function handleClick(listId, name) {\n    props.onSetOnMenuView(false);\n    props.onSetListName(name);\n    props.onSetListId(listId);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n        handleSubmit()\n    }\n  }\n\n\n\n  return(\n      <>\n          <Container>\n              <AddContainer>\n                  <AutoResizeTextArea \n                    aria-label=\"New task list name\"\n                    completed={\"false\"} \n                    placeholder=\"New task list\" \n                    value={taskListName} \n                    onChange={event => setNewTaskList(event.target.value)} \n                    onKeyDown={(handleKeyDown)}\n                  /> \n                  \n                  \n                  <OurButton \n                    aria-label=\"Add new task list\"\n                    className=\"submitButton\" \n                    disabled={taskListName===\"\"} \n                    variant=\"contained\" \n                    onClick={() => handleSubmit()}\n                  >\n                      Add\n                  </OurButton>\n              </AddContainer>\n                {\n                  props.tasksLists.map((value, index) => \n                    <ListContainer>\n                      <CustomButton\n                        aria-label={value.name + \" task list\"}\n                        onClick={() => handleClick(value.id, value.name)}\n                        key={value.id}\n                      >\n                        {value.name}\n                      </CustomButton>\n\n                      <IconButton aria-label={\"Delete \" + value.name + \" list\"} size=\"small\" onClick={() => props.onHandleDeleteTaskList(value.id)} sx={{padding: 0}}>\n                        <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n                      </IconButton>   \n                    </ListContainer>\n                    \n                    )\n                }\n          </Container>\n\n      </>\n\n  )\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { devices } from '../Design';\n\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\n\n\nconst AddContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    margin: 5vw 0 8vw 0;\n    justify-content: space-between;\n    // z-index: -1;\n    padding: 5px 12px;\n\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n`;\n\nconst CustomButton = styled(OurButton)`\n  margin: 5px;\n  width: 100%;\n`;\n\nconst ListContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  // align-content: stretch;\n`;\n\n\nexport default function SelectListMobile(props) {\n  const [taskListName, setNewTaskList] = useState(\"\");\n\n  \n  function handleSubmit() {\n    let id = generateUniqueID();\n    props.onHandleAddTaskList(taskListName, id);\n    props.onSetListName(taskListName);\n    setNewTaskList(\"\");\n    props.onSetOnMenuView(false);\n    props.onSetListId(id);\n  }\n \n  function handleClick(listId, name) {\n    props.onSetOnMenuView(false);\n    props.onSetListName(name);\n    props.onSetListId(listId);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n        handleSubmit()\n    }\n  }\n\n  return(\n    <>\n        <Container>\n            <AddContainer>\n                <AutoResizeTextArea \n                  aria-label=\"New task list name\"\n                  completed={\"false\"} \n                  placeholder=\"New task list\" \n                  value={taskListName} \n                  onChange={event => setNewTaskList(event.target.value)} \n                  onKeyDown={(handleKeyDown)}\n                /> \n                <OurButton \n                  aria-label=\"Add new task list\"\n                  className=\"submitButton\" \n                  disabled={taskListName===\"\"} \n                  variant=\"contained\" \n                  onClick={() => handleSubmit()}\n                >\n                    Add\n                </OurButton>\n            </AddContainer>\n            {\n              props.tasksLists.map((value, index) => \n              <ListContainer>\n                <CustomButton\n                  aria-label={value.name + \" task list\"}\n                  onClick={() => handleClick(value.id, value.name)}\n                  key={value.id}\n                >\n                  {value.name}\n                </CustomButton>\n\n                <IconButton aria-label=\"Delete task\" size=\"small\" onClick={() => props.onHandleDeleteTaskList(value.id)} sx={{padding: 0}}>\n                  <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n                </IconButton>   \n              </ListContainer>\n              )\n            }\n        </Container>\n\n    </>\n\n  )\n}","import Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n    margin: \"0 10px\",\n    \"& > * + *\": {\n    marginTop: theme.spacing(1)\n    }\n},\nemptyStar: {\n    color: \"gray\"\n}\n}));\n\n\nconst StarsRating = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n        <Rating \n            aria-label=\"Priority rating\"\n            value={props.value}\n            defaultValue={props.defaultValue}\n            max={3}\n            size=\"small\"\n            emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\n            onChange={props.onChange}\n        />\n        </div>\n    );\n};\nexport default StarsRating; ","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport '../../App.css';\nimport OurButton from '../OurButton';\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\nimport { devices } from '../Design';\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  \n  justify-content: space-between;\n  z-index: -1;\n\n  @media ${devices.mobileS} { \n    margin: 5vw 0 8vw 0;\n  }\n\n  @media ${devices.laptop} { \n    margin: 2vw 0 4vw 0;\n  }\n\n  @media ${devices.desktop} { \n    margin: 2vw 0 4vw 0;\n  }\n`;\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority);\n    setTaskDescription(\"\");\n    setTaskPriority(0);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea \n          completed={\"false\"} \n          placeholder=\"New task\" \n          value={taskDescription} \n          onChange={event => setTaskDescription(event.target.value)} \n          onKeyDown={(handleKeyDown)}\n        /> \n        \n        <SubmitButtonContainer>\n          <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            value={taskPriority}\n            onChange={(event, value) => setTaskPriority(value)}\n            max={3}\n            size=\"small\"\n          />\n          \n          <OurButton \n            className=\"submitButton\" \n            disabled={taskDescription===\"\"} \n            variant=\"contained\" \n            onClick={handleSubmit}\n          >\n            Add\n          </OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default NewTask;\n\n","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    \n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === ' ' || event.key === \"Enter\") {\n            props.onClickTab(props.label)\n        }\n    }\n    \n    return (\n        <li \n            tabIndex=\"0\" \n            className={classNames.join(\" \")} \n            onClick={() => props.onClickTab(props.label)}\n            onKeyDown={(handleKeyDown)}\n        >\n                {props.label}\n        </li>\n    )\n}","import {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n\n    function onTabChange(tab) {\n        props.onTabChange(tab)\n        setActiveTab(tab)\n    }\n\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab \n                        key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => onTabChange(child.key)}/>\n                    )\n                }\n            </ol>\n            {props.children.map((child) => activeTab === child.key && child)}\n        </div>\n    );\n}\n\nexport default TabList;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// Local imports\nimport AutoResizeTextArea from '../AutoResizeTextArea';\nimport StarsRating from '../StarsRating';\n\nimport { devices } from '../Design';\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n  @media ${devices.mobileS} { \n    width: 4vw;\n    height: 4vw;\n    margin: 0 2vw 2vw 0;\n  }\n\n  @media ${devices.laptop} { \n    width: 3vw;\n    height: 3vw;\n    margin: 0 1vw 1vw 0;\n  }\n\n  @media ${devices.desktop} { \n    width: 3vw;\n    height: 3vw;\n    margin: 0 2vw 2vw 0;\n  }\n`;\n\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                aria-label={true ? \"Mark task as incomplete\" : \"Mark task as complete\"}\n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed.toString()}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n              <StarsRating\n                value={props.priority}\n                onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n                max={3}\n                size=\"small\"\n              />\n            <IconButton aria-label=\"Delete task\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 100%;\n`;\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  \n  return (\n    <Container>\n      {props.data.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n            onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </Container>\n  );\n}\n\nexport default TaskList;\n","// import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 55vh;\n`\n\nfunction TasksSortedList(props) {\n    return (\n    <>\n        <Container> \n            <TaskList\n                data={props.data} \n                onDeleteTask={props.handleDeleteTask}\n                onTaskFieldChanged={props.handleTaskFieldChanged}\n            /> \n        </Container>\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","import styled from 'styled-components';\n\n// Local imports\nimport './DeleteAllCompletedButton';\nimport OurButton from './OurButton';\n\n\n// Create custom styled components\nconst Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: black;\n    opacity: 100%;\n    width: 100vw;\n    height: 100vh;\n    color: white;\n    display: flex;\n`;\n\nconst Modal = styled.div`\n    opacity: none;\n    opacity: 1;\n    background-color: rgb(46, 46, 46, 100);\n    background: rgb(46, 46, 46);\n    \n    border-radius: 5px;\n    border-color: transparent;\n    border-style: none;\n    margin: 0 auto;\n    height: 200px;\n    width: 300px;\n    padding: 10px;\n    position: relative;\n    align-items: center;\n    top: 150px;\n`;\n\nconst ButtonContainer = styled.div`\n    padding: 10px 10px;\n    width: 70%;\n    display: flex;\n    justify-content: space-evenly;\n    margin: auto;\n`;\n\n\nfunction Alert(props) {\n    return (\n    <Backdrop>\n        <Modal>\n            {props.children}\n                <ButtonContainer>\n                    <OurButton\n                        aria-label={props.cancelText ? props.cancelText : \"Cancel\"}\n                        onClick={props.onClose}>\n                        {props.cancelText ? props.cancelText : \"Cancel\"}\n                    </OurButton>\n                    <OurButton\n                        aria-label= {props.OKText ? props.OKText : \"Ok\"}\n                        onClick={props.onOK}>\n                        {props.OKText ? props.OKText : \"Ok\"}\n                    </OurButton>\n                </ButtonContainer>\n        </Modal>\n    </Backdrop>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  font-size: 4px;\n  height: 10%;\n`;\n\nconst ModalText = styled.div`\n  color: white;\n  font-size: 20px;\n  padding: 20px;\n  opacity: 100%;\n`;\n\n\nfunction DeleteAllCompletedButton(props) {\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal(modalState) {\n    setShowAlert(modalState);\n  }\n\n  function handleAlertOK() {\n    props.onDeleteAllCompletedTasks();\n    toggleModal(false);\n  }\n\n  return (\n    <>\n      <Container> \n        <OurButton aria-label=\"Delete all completed tasks\" disabled={props.disabled} onClick={() => toggleModal(true)}>Delete Completed</OurButton>\n        {showAlert &&\n          <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n            <ModalText tabIndex=\"0\" aria-label=\"Are you sure you want to delete all completed tasks?\">\n              Are you sure you want to delete all completed tasks?\n            </ModalText>\n          </Alert>\n        }\n      </Container>\n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n\nimport NewTask from './components/Tasks/NewTask';\nimport TabList from './components/Tabs/TabList';\nimport TasksSortedList from './components/Tasks/TasksSortedList';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\n\n\nimport { devices } from './components/Design';\n\n\n// const db = firebase.firestore();\nconst SUBCOLLECTION = \"cherrymar-tasks\";\nconst COLLECTION = \"cherrymar-tasks-lists\";\n\n\nconst Body = styled.div`\n  @media ${devices.mobileS} { \n    // font-size: 10vw;\n    margin: 5px;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 2vw;\n    margin: 10px;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 3vw;\n    margin: 10px;\n  }\n\n\n  height: 75%;\n  z-index: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  // margin: 10px 0;\n  // height: 80%;\n`\n\n\n\nexport default function TaskDetailView(props){\n  \n  const [filterView, setFilterView] = useState(\"dateCreated\");\n  let hasCompleted = false;\n\n\n  let tasksQuery;\n  if (props.sortView === \"priority\") {\n    tasksQuery = props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).orderBy(props.sortView, \"desc\");\n  } else {\n    tasksQuery = props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).orderBy(props.sortView);\n  }\n  const [allTasksValue, allTasksLoading, allTasksError] = useCollection(tasksQuery);\n\n  let data = [];\n  if (!allTasksLoading && allTasksValue) {\n      data = allTasksValue.docs.map((doc) => doc.data())\n      hasCompleted = data.filter((doc) => doc.completed).length != 0\n      if (filterView === \"Done\") {\n          data = data.filter((doc) => doc.completed);\n      } else if (filterView === \"In Progress\") {\n          data = data.filter((doc) => !doc.completed);\n      }\n  }\n\n\n\n  // Helper functions\n  function handleDeleteTask(taskId) {\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority) {\n    const id = generateUniqueID();\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(id).set({\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n    });\n  }\n\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    const snapshot = await props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      props.db.collection(COLLECTION).doc(props.listId).collection(SUBCOLLECTION).doc(doc.id).delete();\n    });\n  }\n\n\n    return (\n        <>\n            <Body>\n                <NewTask aria-label=\"Add a new task\" onAddTask={handleAddTask}/>\n                \n                <TabList aria-label=\"Filter view options tab\" onTabChange={setFilterView}>\n                    <div key=\"All\">\n                    <TasksSortedList\n                        aria-label=\"View all tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                    <div key=\"Done\">\n                    <TasksSortedList\n                        aria-label=\"View done tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                    <div key=\"In Progress\">\n                    <TasksSortedList\n                        aria-label=\"View in progress tasks\"\n                        data={data}\n                        handleTaskFieldChanged={handleTaskFieldChanged} \n                        handleDeleteTask={handleDeleteTask}\n                    />\n                    </div>\n                </TabList>\n\n            </Body>\n            \n            <DeleteAllCompletedButton \n                disabled={!hasCompleted} \n                onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}\n            />\n        </>\n    )\n}","// React imports\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\n\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Local imports\nimport CustomDropdown from './components/CustomDropdown';\nimport BackButton from './components/MultiList/BackButton';\n\nimport SelectListDesktop from './components/MultiList/SelectListDesktop';\nimport SelectListMobile from './components/MultiList/SelectListMobile';\nimport TaskDetailView from './TaskDetailView';\n\n\nimport './App.css';\nimport { devices } from './components/Design';\nimport { FamilyRestroomOutlined } from '@mui/icons-material';\n\n// Set up Firebase\nconst firebaseConfig = {\n  // apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  // authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  // projectId: \"hmc-cs124-fa21-labs\",\n  // storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  // messagingSenderId: \"949410042946\",\n  // appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n\n  apiKey: \"AIzaSyBHZdLi79neEirMDn9HeYqOIO_7D7CMMxk\",\n  authDomain: \"tasks-dce66.firebaseapp.com\",\n  projectId: \"tasks-dce66\",\n  storageBucket: \"tasks-dce66.appspot.com\",\n  messagingSenderId: \"630175576796\",\n  appId: \"1:630175576796:web:0ba0f2ad21deee6c723a19\",\n  measurementId: \"G-TGMZJRZF5Y\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\n\nconst db = firebase.firestore();\nconst SUBCOLLECTION = \"cherrymar-tasks\";\nconst COLLECTION = \"cherrymar-tasks-lists\";\n\n\n// Create custom styled components\nconst Container = styled.div`\n\n\n`;\n\n\nconst ContentContainer = styled.div`\n  // max-width: 90vw;\n  height: 95vh;\n  margin: auto auto;\n\n  @media ${devices.mobileS} { \n    height: 95vh;\n    max-width: 90vw;\n    margin: 5vw;\n  }\n\n  @media ${devices.laptop} { \n    // max-width: 1000px;\n    height: 95vh;\n    grid-column-start: 2;\n    grid-column-end: 2;\n    margin: 3vw;\n  }\n\n  @media ${devices.desktop} { \n    // max-width: 2000px;\n    height: 95vh;\n    grid-column-start: 2;\n    grid-column-end: 2;\n    margin: 3vw;\n  }\n\n  \n  \n`\n\nconst DestkopContainer = styled.div`\n  display: grid;\n  grid-template-columns: 20% 80%;\n  grid-template-rows: 1;\n`\n\nconst ListContainer = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 1;\n  border-right: solid;\n  height: 100%;\n`;\n\n\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10%;\n`;\n\n\n\nconst Title = styled.div`\n  @media ${devices.mobileS} { \n    font-size: 10vw;\n  }\n\n  @media ${devices.laptop} { \n    font-size: 5vw;\n  }\n\n  @media ${devices.desktop} { \n    font-size: 5vw;\n  }\n  font-weight: 700;\n  text-align: left;\n`;\n\n\n\n// Options for sorting the task list\nconst sortByOptions = {\n  \"dateCreated\" : \"Date Created\", \n  \"priority\" : \"Priority\", \n  \"description\" : \"Description\",\n}\n\nfunction App() {\n  // Hooks for managing view state\n  const [listId, setListId] = useState(null); // tracks which list user is viewing\n  const [listName, setListName] = useState(null);\n  const [onMenuView, setOnMenuView] = useState(true); // On left tab if true, on right tab if false\n  const [sortView, setSortView] = useState(\"dateCreated\");\n\n  const isMobile = useMediaQuery({maxWidth: 600})\n\n  let hasCompleted = FamilyRestroomOutlined\n\n  let taskListQuery = db.collection(COLLECTION).orderBy(\"name\");\n  const [allTaskListsValue, allTaskListsLoading, allTaskListsError] = useCollection(taskListQuery);\n\n  let taskListData = [];\n  if (!allTaskListsLoading && allTaskListsValue) {\n    taskListData = allTaskListsValue.docs.map((doc) => doc.data());\n  }\n\n\n  // Helper functions\n  function handleAddTaskList(name, id) {\n    db.collection(COLLECTION).doc(id).set(\n      {\n        id: id,\n        name: name,\n      }\n    );\n  }\n\n  function handleDeleteTaskList(id) {\n    db.collection(COLLECTION).doc(id).delete();\n  }\n\n\n  return (\n    <div className=\"App\">\n          {\n            isMobile ? \n              onMenuView ? \n              \n              <>\n                <SelectListMobile \n                  tasksLists={taskListData} \n                  onSetListId={setListId} \n                  onSetOnMenuView={setOnMenuView} \n                  onHandleAddTaskList={handleAddTaskList}\n                  onHandleDeleteTaskList={handleDeleteTaskList}\n                  onSetListName={setListName}\n                />\n              </>\n              :\n              <>\n                \n                <ContentContainer>\n                <Header>\n                  <BackButton aria-label=\"Return to task lists\" onSetOnMenuView={setOnMenuView}/> \n                  <CustomDropdown aria-label=\"Sort View Dropdown\" onSelectView={setSortView} sortByOptions={sortByOptions}/>\n                </Header>\n                <Title aria-label={listName}>{listName}</Title>\n                <TaskDetailView\n                  listId={listId}\n                  listName={listName}\n                  disabled={!hasCompleted} \n                  sortView={sortView} \n                  db={db}\n                />\n                </ContentContainer>\n                \n              </>\n              :\n              <DestkopContainer>\n                <ListContainer>\n                  <SelectListDesktop\n                    tasksLists={taskListData} \n                    onSetListId={setListId} \n                    onSetOnMenuView={setOnMenuView} \n                    onHandleAddTaskList={handleAddTaskList}\n                    onHandleDeleteTaskList={handleDeleteTaskList}\n                    onSetListName={setListName}\n                  />\n                </ListContainer>\n                <ContentContainer>\n                  <Header>\n                      <Title aria-label=\"Tasks\">{listName}</Title>\n                      <CustomDropdown aria-label=\"Sort View Dropdown\" onSelectView={setSortView} sortByOptions={sortByOptions}/>\n                  </Header>\n                \n                  {listId &&\n                \n                    <TaskDetailView\n                    sortView={sortView} \n                    listId={listId}\n                    listName={listName}\n                    disabled={!hasCompleted} \n                    db={db}\n                  />\n                  }\n                  \n                </ContentContainer>  \n                \n              </DestkopContainer>\n\n          }\n    </div>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}