{"version":3,"sources":["components/AutoResizeTextArea.js","components/StarsRating.js","components/TaskItem.js","components/TaskList.js","components/OurButton.js","components/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/CustomDropdown.js","components/ViewTabs/Tab.js","components/ViewTabs/TabList.js","components/TasksSortedList.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["StyledTextareaAutosize","styled","TextareaAutosize","prop","completed","AutoResizeTextArea","props","useStyles","makeStyles","theme","root","margin","marginTop","spacing","emptyStar","color","StarsRating","classes","className","Rating","defaultValue","max","size","emptyIcon","fontSize","Container","div","CheckBox","input","TaskItem","type","checked","onChange","event","onTaskFieldChanged","id","target","placeholder","description","value","priority","IconButton","onClick","onDeleteTask","sx","padding","TaskList","useState","selectedId","setSelectedId","displayData","data","view","filter","a","map","onRowClick","selected","CustomButtonRoot","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","ButtonUnstyled","component","SubmitButtonContainer","NewTask","taskDescription","setTaskDescription","taskPriority","setTaskPriority","onKeyDown","key","onAddTask","name","variant","Alert","children","onClose","cancelText","onOK","OKText","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","CustomDropdown","React","sortView","setSortView","DropdownButton","title","sortByOptions","Object","keys","option","Item","onSelectView","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","child","TasksSortedList","appContent","loading","docs","doc","handleDeleteTask","handleTaskFieldChanged","error","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","Header","Body","Title","App","setView","hasCompleted","query","orderBy","useCollection","taskId","delete","field","update","tasksRef","where","get","forEach","task","length","generateUniqueID","set","dateCreated","Timestamp","now","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90ea5f43.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextareaAutosize = styled(TextareaAutosize)`\noutline: none;  \nbackground-color: black;\ncolor: ${prop => prop.completed ? '#555555' : 'lightgray'};\nborder: none;\n&:focus {\n  border: none;\n  border-bottom: 2px solid gray;\n}\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextareaAutosize {...props} />;\n  }","import Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // display: \"flex\",\n    // flexDirection: \"column\",\n    margin: \"0 10px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(1)\n    }\n  },\n  emptyStar: {\n    color: \"gray\"\n  }\n}));\nconst StarsRating = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Rating\n        defaultValue={props.defaultValue}\n        max={3}\n        size=\"small\"\n        emptyIcon={\n          <StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />\n        }\n      />\n    </div>\n  );\n};\nexport default StarsRating;","import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// Local imports\nimport AutoResizeTextArea from './AutoResizeTextArea';\nimport StarsRating from './StarsRating';\n\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n    width: 4vw;\n    height: 4vw;\n    margin: 0 2vw 2vw 0;\n`;\n\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n              <StarsRating\n                defaultValue={props.priority}\n                onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n                max={3}\n                size=\"small\"\n              />\n            <IconButton aria-label=\"delete\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  let displayData = props.data\n  \n  if (props.view === 1) \n    displayData = displayData.filter(a => a.completed)\n  else if (props.view === 2)\n    displayData = displayData.filter(a => !a.completed)\n\n\n  return (\n    <>\n      {displayData.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n        onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </>\n  );\n}\n\nexport default TaskList;\n","import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 10px 15px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot} />;\n}\n\n// export default function UnstyledButtonsSimple() {\n//   return (\n//     <Stack spacing={2} direction=\"row\">\n//       <CustomButton>Button</CustomButton>\n//       <CustomButton disabled>Disabled</CustomButton>\n//     </Stack>\n//   );\n// }","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n\n// Local imports\nimport '../App.css';\nimport OurButton from './OurButton';\nimport AutoResizeTextArea from './AutoResizeTextArea';\nimport StarsRating from './StarsRating';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n  justify-content: space-between;\n  z-index: -1;\n`;\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority)\n    setTaskDescription(\"\")\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      props.onAddTask(taskDescription, taskPriority)\n      setTaskDescription(\"\")\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea completed={false} placeholder=\"New task\" value={taskDescription} onChange={event => setTaskDescription(event.target.value)} onKeyDown={(handleKeyDown)}/> \n        \n        <SubmitButtonContainer>\n          <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            onChange={(event, value) => setTaskPriority(value)}\n            max={3}\n            size=\"small\"\n          />\n          \n          <OurButton className=\"submitButton\" disabled={taskDescription===\"\"} variant=\"contained\"  onClick={handleSubmit}>Add</OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default NewTask;\n","import './DeleteAllCompletedButton';\nimport './Alert.css';\nimport react from 'react';\n\nfunction Alert(props) {\n\n    return (\n    <div className={\"backdrop\"}>\n        <div className=\"modal\">\n            {props.children}\n            <div className=\"alert-buttons\">\n                <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                        onClick={props.onClose}>\n                    {props.cancelText ? props.cancelText : \"Cancel\"}\n                </button>\n                <button className={\"alert-button alert-ok\"} type={\"button\"}\n                        onClick={props.onOK}>\n                    {props.OKText ? props.OKText : \"Ok\"}\n                </button>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\nimport './Alert.css';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  font-size: 4px;\n  height: 10%;\n`;\n\nconst ModalText = styled.div`\n  color: black;\n  font-size: 30px;\n`;\n\n\nfunction DeleteAllCompletedButton(props) {\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal(modalState) {\n    setShowAlert(modalState)\n  }\n\n  function handleAlertOK() {\n    toggleModal(false)\n    props.onDeleteAllCompletedTasks()\n  }\n\n  return (\n    <>\n      <Container>\n        <OurButton disabled={props.disabled} onClick={() => toggleModal(!showAlert)}>Delete Completed</OurButton>\n        {showAlert && <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n          <ModalText>\n            Are you sure you want to delete all completed tasks?\n          </ModalText>\n        </Alert>}\n      </Container>\n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Dropdown.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nexport default function CustomDropdown(props) {\n  // const [open, setOpen] = React.useState(false);\n  // const anchorRef = React.useRef(null);\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    // setOpen(false);\n    onSelectView(view);\n  };\n\n  // const handleToggle = () => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n\n  //   setOpen(false);\n  // };\n\n\n  return (\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item \n            className=\"drop-down-item\"\n            // styles={{width: \"120px\"}}\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n\n      }\n    </DropdownButton>\n\n  );\n}\n\n// Object.keys(props.filterView).map(view => \n//           <Dropdown.Item>\n//             {view}\n//           </Dropdown.Item>\n//         )","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}","import { AlignHorizontalLeft, ArrowLeft } from '@mui/icons-material';\nimport {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n    return (\n        \n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => setActiveTab(child.key)}/>\n                    )\n                }\n            </ol>\n            {\n                \n                props.children.map((child) => \n                    activeTab === child.key && child\n                )\n            }\n        </div>\n    );\n}\n\nexport default TabList;\n","import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 80vh;\n`\n\nfunction TasksSortedList(props) {\n    let appContent;\n\n    if (props.loading) {\n        appContent = <h1>Loading</h1>\n    } else if (props.value) {\n        let data = props.value.docs.map((doc) => doc.data()) //props.query.orderBy(props.sortView).get().map((doc) => doc.data());\n        if (props.view == \"Complete\") {\n            data = data.filter((doc) => doc.completed);\n        } else if (props.view == \"Incomplete\") {\n            data = data.filter((doc) => !doc.completed);\n        }\n        \n        appContent = <Container> \n                      <TaskList\n                        data={data} \n                        onDeleteTask={props.handleDeleteTask}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        view={props.view}\n                      /> \n                    </Container>\n\n    } else {\n        appContent = <h1>{props.error.message}</h1>\n    }\n\n\n\n\n\n    return (\n    <>\n        {appContent}\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","// React imports\nimport { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Local imports\nimport TaskList from './components/TaskList';\nimport NewTask from './components/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\nimport ViewSelector from './components/ViewSelector';\nimport TabList from './components/ViewTabs/TabList';\nimport TasksSortedList from './components/TasksSortedList';\nimport CustomDropdown from './components/CustomDropdown';\n\nimport './App.css';\n\n\n// Set up Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst collection = \"cherrymar-tasks\";\n\n\n// Create custom styled components\nconst Container = styled.div`\n  height: 90%;\n  width: 90%;\n  margin: 5%;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10vh;\n`;\n\nconst Body = styled.div`\n  height: 75vh;\n  z-index: 1;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  margin: 10px 0;\n`\nconst Title = styled.div`\n  font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\n\nfunction App() {\n  // Hooks for managing view state\n  const [view, setView] = useState(\"dateCreated\");\n\n  let hasCompleted = false\n\n  // Retrieve data from Firebase\n  const query = db.collection(collection).orderBy(view);\n  const [value, loading, error] = useCollection(query);\n\n  const sortByOptions = {\n    \"dateCreated\" : \"Date Created\", \n    \"priority\" : \"Priority\", \n    \"description\" : \"Description\",\n  }\n  const options = ['dateCreated', 'priority', 'description'];\n  \n  // Helper functions\n  function handleDeleteTask(taskId) {\n    db.collection(collection).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority) {\n    const id = generateUniqueID();\n    db.collection(collection).doc(id).set(\n      {\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n      }\n    )\n  }\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    db.collection(collection).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    const tasksRef = db.collection(collection);\n    const snapshot = await tasksRef.where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      db.collection(collection).doc(doc.id).delete();\n    });\n\n    // Just deleted all completed tasks\n    hasCompleted = false;\n  }\n\n\n  let appContent;\n\n  if (loading) {\n      appContent = <h1>Loading</h1>\n  } else if (value) {\n      let data = value.docs.map((doc) => doc.data())\n      hasCompleted = data.filter(task => task.completed).length !== 0\n\n      // appContent = <> \n      //               <TaskList \n      //                 data={data} \n      //                 onDeleteTask={handleDeleteTask}\n      //                 onTaskFieldChanged={handleTaskFieldChanged}\n      //                 view={view}\n      //               /> \n      //               </>\n      // if (hasCompleted) {\n      //   appContent = <> \n      //                 <TaskList \n      //                   data={data} \n      //                   onDeleteTask={handleDeleteTask}\n      //                   onTaskFieldChanged={handleTaskFieldChanged}\n      //                   view={view}\n      //                 /> \n      //                 <DeleteAllCompletedButton disabled={view === 2} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n      //                 </> \n      // }\n  } else {\n      // appContent = <h1>{error.message}</h1>\n  }\n\n\n  return (\n    <>\n        <Container className=\"App\">\n          <Header>\n            <Title>Tasks</Title>\n            <CustomDropdown onSelectView={setView} sortByOptions={sortByOptions}/>\n            {/* <ViewSelector onSelectView={setView} sx={{width: \"100px\"}} sortByOptions={sortByOptions}/> */}\n          </Header>\n\n          <Body>\n            <NewTask onAddTask={handleAddTask}/>\n          \n            <TabList>\n              <div key=\"All\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"All\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"Done\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Complete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"In Progress\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Incomplete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n            </TabList>\n          </Body>\n          <DeleteAllCompletedButton disabled={!hasCompleted} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n        </Container>  \n    </>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}