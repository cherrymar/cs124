{"version":3,"sources":["components/AutoResizeTextArea.js","components/TaskItem.js","components/TaskList.js","components/OurButton.js","components/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/ViewTabs/Tab.js","components/ViewTabs/TabList.js","components/TasksSortedList.js","components/CustomDropdown.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["StyledTextareaAutosize","styled","TextareaAutosize","prop","completed","AutoResizeTextArea","props","useStyles","makeStyles","theme","root","margin","marginTop","spacing","emptyStar","color","Container","div","CheckBox","input","TaskItem","classes","type","checked","onChange","event","onTaskFieldChanged","id","target","placeholder","description","defaultValue","value","className","Rating","priority","max","size","emptyIcon","fontSize","IconButton","onClick","onDeleteTask","sx","padding","TaskList","useState","selectedId","setSelectedId","displayData","data","view","filter","a","map","onRowClick","selected","CustomButtonRoot","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","ButtonUnstyled","component","SubmitButtonContainer","NewTask","taskDescription","setTaskDescription","taskPriority","setTaskPriority","onKeyDown","key","onAddTask","variant","Backdrop","Modal","ButtonContainer","Alert","children","onClose","cancelText","onOK","OKText","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","child","TasksSortedList","appContent","loading","docs","doc","handleDeleteTask","handleTaskFieldChanged","error","message","CustomDropdown","React","sortView","setSortView","DropdownButton","title","sortByOptions","Object","keys","option","Item","onSelectView","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","Header","Body","Title","App","query","setView","hasCompleted","orderBy","useCollection","taskId","delete","field","update","tasksRef","where","get","forEach","task","length","generateUniqueID","set","dateCreated","Timestamp","now","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97f5f793.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextareaAutosize = styled(TextareaAutosize)`\noutline: none;  \nbackground-color: black;\ncolor: ${prop => prop.completed ? '#555555' : 'lightgray'};\nborder: none;\n&:focus {\n  border: none;\n  border-bottom: 2px solid gray;\n}\n::-webkit-scrollbar {\n  display: none;\n}\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextareaAutosize {...props} />;\n  }","import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport AutoResizeTextArea from './AutoResizeTextArea';\n// import StarsRating from './StarsRating';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      // display: \"flex\",\n      // flexDirection: \"column\",\n      margin: \"0 10px\",\n      \"& > * + *\": {\n      marginTop: theme.spacing(1)\n      }\n  },\n  emptyStar: {\n      color: \"gray\"\n  }\n  }));\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n    width: 4vw;\n    height: 4vw;\n    margin: 0 2vw 2vw 0;\n`;\n\n\nfunction TaskItem(props) {\n  const classes = useStyles();\n  return (\n    <>\n        <Container>\n            <CheckBox \n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n            <div className={classes.root}>\n              <Rating\n                  defaultValue={props.priority}\n                  max={3}\n                  size=\"small\"\n                  emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\n                  onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n              />\n              </div>\n              {/* <StarsRating\n                defaultValue={props.priority}\n                onChange={(event, value) => props.handleTaskFieldChanged(props.id, \"priority\", value)}\n                max={3}\n                size=\"small\"\n              /> */}\n            <IconButton aria-label=\"delete\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 100%;\n`;\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  let displayData = props.data\n  \n  if (props.view === 1) \n    displayData = displayData.filter(a => a.completed)\n  else if (props.view === 2)\n    displayData = displayData.filter(a => !a.completed)\n\n\n  return (\n    <Container>\n      {displayData.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n            onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </Container>\n  );\n}\n\nexport default TaskList;\n","import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 5px 12px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot}/>;\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport Rating from '@mui/material/Rating';\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Local imports\nimport '../App.css';\nimport OurButton from './OurButton';\nimport AutoResizeTextArea from './AutoResizeTextArea';\n// import StarsRating from './StarsRating';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  // width: 100%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n  justify-content: space-between;\n  z-index: -1;\n`;\n\n\n// Stars rating setup\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      // display: \"flex\",\n      // flexDirection: \"column\",\n      margin: \"0 10px\",\n      \"& > * + *\": {\n      marginTop: theme.spacing(1)\n      }\n  },\n  emptyStar: {\n      color: \"gray\"\n  }\n  }));\n\n\nfunction NewTask(props) {\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(0);\n\n  const classes = useStyles();\n  \n  function handleSubmit() {\n    props.onAddTask(taskDescription, taskPriority);\n    setTaskDescription(\"\");\n    // setTaskPriority(0);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      props.onAddTask(taskDescription, taskPriority);\n      setTaskDescription(\"\");\n      // setTaskPriority(0);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <AutoResizeTextArea completed={false} placeholder=\"New task\" value={taskDescription} onChange={event => setTaskDescription(event.target.value)} onKeyDown={(handleKeyDown)}/> \n        \n        <SubmitButtonContainer>\n          <div className={classes.root}>\n            <Rating\n                defaultValue={0}\n                max={3}\n                size=\"small\"\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar} />}\n                onChange={(event, value) => setTaskPriority(value)}\n            />\n          </div>\n\n\n          {/* <StarsRating\n            name=\"customized-color\"\n            defaultValue={0}\n            // onChange={(event, value) => setTaskPriority(value)}\n            onPriorityChange={setTaskPriority}\n            max={3}\n            size=\"small\"\n          /> */}\n          \n          <OurButton className=\"submitButton\" disabled={taskDescription===\"\"} variant=\"contained\"  onClick={handleSubmit}>Add</OurButton>\n        </SubmitButtonContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default NewTask;\n\n","import styled from 'styled-components';\n\n// Local imports\nimport './DeleteAllCompletedButton';\nimport './Alert.css';\nimport OurButton from './OurButton';\n\n\nconst Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: black;\n    opacity: 100%;\n    width: 100vw;\n    height: 100vh;\n    color: white;\n    display: flex;\n`;\n\nconst Modal = styled.div`\n    opacity: none;\n    opacity: 1;\n    background-color: rgb(46, 46, 46, 1);\n    background: rgb(46, 46, 46);\n    \n    border-radius: 5px;\n    border-color: transparent;\n    border-style: none;\n    margin: 0 auto;\n    height: 200px;\n    width: 300px;\n    padding: 10px;\n    position: relative;\n    align-items: center;\n    top: 150px;\n`;\n\nconst ButtonContainer = styled.div`\n    padding: 10px 10px;\n    width: 70%;\n    display: flex;\n    justify-content: space-evenly;\n    // align-items: center;\n    margin: auto;\n`;\n\n\nfunction Alert(props) {\n    return (\n    <Backdrop>\n        <Modal>\n            {props.children}\n                <ButtonContainer>\n                    <OurButton\n                        onClick={props.onClose}>\n                        {props.cancelText ? props.cancelText : \"Cancel\"}\n                    </OurButton>\n                    <OurButton\n                        onClick={props.onOK}>\n                        {props.OKText ? props.OKText : \"Ok\"}\n                    </OurButton>\n                </ButtonContainer>\n        </Modal>\n    </Backdrop>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// Local imports\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\nimport './Alert.css';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  font-size: 4px;\n  height: 10%;\n`;\n\nconst ModalText = styled.div`\n  color: white;\n  font-size: 20px;\n  padding: 20px;\n  opacity: 100%;\n`;\n\n\nfunction DeleteAllCompletedButton(props) {\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal(modalState) {\n    setShowAlert(modalState);\n  }\n\n  function handleAlertOK() {\n    props.onDeleteAllCompletedTasks();\n    toggleModal(false);\n  }\n\n  return (\n    <>\n      <Container> \n        <OurButton disabled={props.disabled} onClick={() => toggleModal(true)}>Delete Completed</OurButton>\n        {showAlert &&\n          <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n            <ModalText>\n              Are you sure you want to delete all completed tasks?\n            </ModalText>\n          </Alert>\n        }\n      </Container>\n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}","import {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n    return (\n        \n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => setActiveTab(child.key)}/>\n                    )\n                }\n            </ol>\n            {\n                \n                props.children.map((child) => \n                    activeTab === child.key && child\n                )\n            }\n        </div>\n    );\n}\n\nexport default TabList;\n","import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 55vh;\n`\n\nfunction TasksSortedList(props) {\n    let appContent;\n\n    if (props.loading) {\n        appContent = <h1>Loading</h1>\n    } else if (props.value) {\n        let data = props.value.docs.map((doc) => doc.data())\n        if (props.view == \"Complete\") {\n            data = data.filter((doc) => doc.completed);\n        } else if (props.view == \"Incomplete\") {\n            data = data.filter((doc) => !doc.completed);\n        }\n        \n        appContent = <Container> \n                      <TaskList\n                        data={data} \n                        onDeleteTask={props.handleDeleteTask}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        view={props.view}\n                      /> \n                    </Container>\n\n    } else {\n        appContent = <h1>{props.error.message}</h1>\n    }\n\n\n\n\n\n    return (\n    <>\n        {appContent}\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Dropdown.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\nexport default function CustomDropdown(props) {\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    onSelectView(view);\n  };\n\n  return (\n    <DropdownButton id=\"dropdown-basic-button\" title={props.sortByOptions[sortView]}>\n      {\n        Object.keys(props.sortByOptions).map((option) => (\n          <Dropdown.Item\n            key={\"drop-down-item-\" + option}\n            className=\"drop-down-item\"\n            onClick={(event) => handleMenuItemClick(event, option, props.onSelectView)}\n          >\n            {props.sortByOptions[option]}\n          </Dropdown.Item>\n        ))\n      }\n    </DropdownButton>\n\n  );\n}","// React imports\nimport { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Local imports\nimport TaskList from './components/TaskList';\nimport NewTask from './components/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\nimport ViewSelector from './components/ViewSelector';\nimport TabList from './components/ViewTabs/TabList';\nimport TasksSortedList from './components/TasksSortedList';\nimport CustomDropdown from './components/CustomDropdown';\n\nimport './App.css';\n\n\n// Set up Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst collection = \"cherrymar-tasks\";\n\n\n// Create custom styled components\nconst Container = styled.div`\n  height: 90%;\n  width: 90%;\n  margin: 5%;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  height: 10vh;\n`;\n\nconst Body = styled.div`\n  height: 75vh;\n  z-index: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  margin: 10px 0;\n`\nconst Title = styled.div`\n  font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\n\nfunction App() {\n  // Hooks for managing view state\n  const [view, setView] = useState(\"dateCreated\");\n\n  let hasCompleted = false\n\n  // Retrieve data from Firebase\n  let query;\n  if (view === \"priority\") {\n    query = db.collection(collection).orderBy(view, \"desc\");\n  } else {\n    query = db.collection(collection).orderBy(view);\n\n  }\n  \n  const [value, loading, error] = useCollection(query);\n\n  const sortByOptions = {\n    \"dateCreated\" : \"Date Created\", \n    \"priority\" : \"Priority\", \n    \"description\" : \"Description\",\n  }\n  const options = ['dateCreated', 'priority', 'description'];\n  \n  // Helper functions\n  function handleDeleteTask(taskId) {\n    db.collection(collection).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority) {\n    const id = generateUniqueID();\n    db.collection(collection).doc(id).set(\n      {\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n      }\n    )\n  }\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    db.collection(collection).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    const tasksRef = db.collection(collection);\n    const snapshot = await tasksRef.where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      db.collection(collection).doc(doc.id).delete();\n    });\n\n    // Just deleted all completed tasks\n    hasCompleted = false;\n  }\n\n\n  let appContent;\n\n  if (loading) {\n      appContent = <h1>Loading</h1>\n  } else if (value) {\n      let data = value.docs.map((doc) => doc.data())\n      hasCompleted = data.filter(task => task.completed).length !== 0\n  }\n\n\n  return (\n    <>\n        <Container className=\"App\">\n          <Header>\n            <Title>Tasks</Title>\n            <CustomDropdown onSelectView={setView} sortByOptions={sortByOptions}/>\n          </Header>\n\n          <Body>\n            <NewTask onAddTask={handleAddTask}/>\n          \n            <TabList>\n              <div key=\"All\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"All\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"Done\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Complete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"In Progress\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Incomplete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n            </TabList>\n          </Body>\n          <DeleteAllCompletedButton disabled={!hasCompleted} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n        </Container>  \n    </>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}