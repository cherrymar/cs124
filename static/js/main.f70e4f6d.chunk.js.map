{"version":3,"sources":["components/AutoResizeTextArea.js","components/TaskItem.js","components/TaskList.js","components/OurButton.js","components/NewTask.js","components/Alert.js","components/DeleteAllCompletedButton.js","components/ViewSelector.js","components/ViewTabs/Tab.js","components/ViewTabs/TabList.js","components/TasksSortedList.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["StyledTextareaAutosize","styled","TextareaAutosize","prop","completed","AutoResizeTextArea","props","Container","div","CheckBox","input","StyledRating","Rating","opacity","borderColor","TaskItem","type","checked","onChange","event","onTaskFieldChanged","id","target","placeholder","description","defaultValue","value","name","priority","max","size","IconButton","onClick","onDeleteTask","sx","padding","fontSize","color","TaskList","useState","selectedId","setSelectedId","displayData","data","view","filter","a","map","onRowClick","selected","CustomButtonRoot","buttonUnstyledClasses","active","focusVisible","disabled","OurButton","ButtonUnstyled","component","SubmitButtonContainer","margin","NewTask","taskDescription","setTaskDescription","taskPriority","setTaskPriority","onKeyDown","key","onAddTask","className","variant","Alert","children","onClose","cancelText","onOK","OKText","ModalText","DeleteAllCompletedButton","showAlert","setShowAlert","toggleModal","modalState","onDeleteAllCompletedTasks","ViewSelector","React","open","setOpen","anchorRef","sortView","setSortView","handleClose","current","contains","ButtonGroup","ref","undefined","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","width","Paper","ClickAwayListener","onClickAway","MenuList","sortByOptions","option","index","MenuItem","onSelectView","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","child","TasksSortedList","appContent","loading","docs","doc","handleDeleteTask","handleTaskFieldChanged","error","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","Header","Body","Title","App","setView","hasCompleted","query","orderBy","useCollection","taskId","delete","field","update","tasksRef","where","get","forEach","task","length","generateUniqueID","set","dateCreated","Timestamp","now","InMemoryApp","initialData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f70e4f6d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst StyledTextareaAutosize = styled(TextareaAutosize)`\noutline: none;  \nbackground-color: black;\ncolor: ${prop => prop.completed ? '#555555' : 'lightgray'};\nborder: none;\n&:focus {\n  border: none;\n  border-bottom: 2px solid gray;\n}\n`;\n\nexport default function AutoResizeTextArea(props) {\n\treturn <StyledTextareaAutosize {...props} />;\n  }","import React from 'react';\nimport styled from 'styled-components';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Rating from '@mui/material/Rating';\n\n// Local imports\nimport AutoResizeTextArea from './AutoResizeTextArea';\n\n// const Item = styled.textarea`\n//     outline: none;\n//     width: 50%;\n//     font-size: 4vw;\n//     border: none;\n//     border-bottom: 2px solid black;\n//     padding: 0;\n//     // margin: 50px 50px 50px 0;\n//     margin: 2vw 2vw 2vw 0;\n//     background-color: black;\n//     color: ${prop => prop.completed ? '#555555' : 'lightgray'};\n//     &:focus {\n//         border-bottom: 2px solid gray;\n//     }\n//     overflow-wrap: break-word;\n//     font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n//     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n//     sans-serif;\n// `;\n\nconst Container = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    // flex-direction: row;\n    // flex-wrap: wrap;\n    // width: 100%;\n    // border-bottom: 1px solid transparent;\n    // box-shadow: 0 3px lightgray;\n    justify-content: space-between;\n    align-items: flex-start;\n\n`;\n\nconst CheckBox = styled.input`\n    width: 4vw;\n    height: 4vw;\n    // margin: 50px 50px 50px 0;\n    margin: 0 2vw 2vw 0;\n`;\n\nconst StyledRating = styled(Rating)({\n    '& .MuiRating-iconFilled': {\n      // color: '#ff6d75',\n    },\n    '& .MuiRating-iconHover': {\n      // color: '#ff3d47',\n    },\n    '& .Mui-focusVisible': {\n      opacity: 1,\n      borderColor: \"#fff\",\n    }\n  });\n\nfunction TaskItem(props) {\n  return (\n    <>\n        <Container>\n            <CheckBox \n                type=\"checkbox\" \n                checked={props.completed===true} \n                onChange={event => props.onTaskFieldChanged(props.id, \"completed\", event.target.checked)}/> \n            <AutoResizeTextArea\n              completed={props.completed}\n              id={props.id} \n              placeholder={props.description} \n              defaultValue={props.description} \n              onChange={event => props.onTaskFieldChanged(props.id, \"description\", event.target.value)}\n            />\n              <StyledRating\n                name=\"customized-color\"\n                defaultValue={props.priority}\n                onChange={(event, value) => props.onTaskFieldChanged(props.id, \"priority\", value)}\n                // emptyIcon={<StarIcon style={{ opacity: .99}}/>}\n                max={3}\n                size=\"small\"\n              />\n            <IconButton aria-label=\"delete\" size=\"small\" onClick={() => props.onDeleteTask(props.id)} sx={{padding: 0}}>\n                <DeleteIcon fontSize=\"small\" sx={{color: \"lightgray\"}}/>\n            </IconButton> \n        </Container>\n        \n    </>\n  );\n}\n\nexport default TaskItem;\n\n\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\n\nfunction TaskList(props) {\n  const [selectedId, setSelectedId] = useState(null);\n  let displayData = props.data\n  \n  if (props.view === 1) \n    displayData = displayData.filter(a => a.completed)\n  else if (props.view === 2)\n    displayData = displayData.filter(a => !a.completed)\n\n\n  return (\n    <>\n      {displayData.map(a => \n      <TaskItem\n        onRowClick={(id) =>\n            setSelectedId(id)}\n        onTaskFieldChanged={props.onTaskFieldChanged}\n        onDeleteTask={props.onDeleteTask}\n        selected={a.id === selectedId}\n        key={a.id}\n        {...a} \n      />)}\n    </>\n  );\n}\n\nexport default TaskList;\n","import * as React from 'react';\nimport ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\nimport { styled } from '@mui/system';\n\nconst CustomButtonRoot = styled('button')`\n  background-color: #1565c0;\n  padding: 10px 15px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 500;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  transition: all 200ms ease;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\n  border: none;\n\n  &:hover {\n    background-color: #0d47a1;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    background-color: #004386;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 5px rgba(0, 127, 255, 0.5);\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: 0 0 0 0 rgba(0, 127, 255, 0);\n    // background-color: #616161;\n  }\n`;\n\nexport default function OurButton(props) {\n  return <ButtonUnstyled {...props} component={CustomButtonRoot} />;\n}\n\n// export default function UnstyledButtonsSimple() {\n//   return (\n//     <Stack spacing={2} direction=\"row\">\n//       <CustomButton>Button</CustomButton>\n//       <CustomButton disabled>Disabled</CustomButton>\n//     </Stack>\n//   );\n// }","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport Rating from '@mui/material/Rating';\n\n// Local imports\nimport '../App.css';\nimport OurButton from './OurButton';\nimport AutoResizeTextArea from './AutoResizeTextArea';\n\n\nconst SubmitButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 40%;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin: 5vw 0 8vw 0;\n\n`;\n\nconst StyledRating = styled(Rating)({\n  margin: \"10px\",\n  '& .MuiRating-root': {\n    opacity: 100,\n    borderColor: \"#fefefe\",\n  },\n  '& .MuiRating-labelEmptyValueActive': {\n    opacity: 100,\n    borderColor: \"#fefefe\",\n  },\n  '& .MuiRating-iconFilled': {\n    // color: '#ff6d75',\n  },\n  '& .MuiRating-iconHover': {\n    \n    // color: '#ff3d47',\n  },\n  '& .Mui-focusVisible': {\n    opacity: 100,\n    borderColor: \"#fefefe\",\n  }\n});\n  \n  \nfunction NewTask(props) {\n    const [taskDescription, setTaskDescription] = useState(\"\");\n    const [taskPriority, setTaskPriority] = useState(0);\n    \n    function handleSubmit() {\n        props.onAddTask(taskDescription, taskPriority)\n        setTaskDescription(\"\")\n    }\n\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter') {\n        props.onAddTask(taskDescription, taskPriority)\n        setTaskDescription(\"\")\n      }\n    }\n\n\n    return (\n    <>\n        <Container>\n            <AutoResizeTextArea placeholder=\"New task\" value={taskDescription} onChange={event => setTaskDescription(event.target.value)} onKeyDown={(handleKeyDown)}/> \n            <SubmitButtonContainer>\n              <StyledRating\n                name=\"customized-color\"\n                defaultValue={0}\n                onChange={(event, value) => setTaskPriority(value)}\n                max={3}\n                size=\"small\"\n              />\n                <OurButton className=\"submitButton\" disabled={taskDescription===\"\"} variant=\"contained\"  onClick={handleSubmit}>Add</OurButton>\n            </SubmitButtonContainer>\n\n        </Container>\n        \n    </>\n  );\n}\n\nexport default NewTask;\n","import './DeleteAllCompletedButton';\nimport './Alert.css';\nimport react from 'react';\n\nfunction Alert(props) {\n\n    return (\n    <div className={\"backdrop\"}>\n        <div className=\"modal\">\n            {props.children}\n            <div className=\"alert-buttons\">\n                <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                        onClick={props.onClose}>\n                    {props.cancelText ? props.cancelText : \"Cancel\"}\n                </button>\n                <button className={\"alert-button alert-ok\"} type={\"button\"}\n                        onClick={props.onOK}>\n                    {props.OKText ? props.OKText : \"Ok\"}\n                </button>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Alert;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@mui/material/Button';\n// import ButtonUnstyled, { buttonUnstyledClasses } from '@mui/core/ButtonUnstyled';\n// import { ButtonBase } from '@mui/material';\n\nimport Alert from './Alert.js';\nimport OurButton from './OurButton';\nimport './Alert.css';\n\n// import react, {useState} from 'react';\n\n\nconst Container = styled.div`\n    // display: flex;\n    // justifyContent: flex-end;\n    // position: relative;\n    // right: 0;\n    // bottom: 0;\n    // margin: 50px;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n    font-size: 4px;\n    height: 10%;\n    \n    \n`;\n\n\nconst ModalText = styled.div`\n  color: black;\n  font-size: 30px;\n`;\n\n\n\nfunction DeleteAllCompletedButton(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function toggleModal(modalState) {\n        setShowAlert(modalState)\n    }\n\n    function handleAlertOK() {\n        toggleModal(false)\n        props.onDeleteAllCompletedTasks()\n    }\n\n\n    \n  return (\n    <>\n        <Container>\n            {/* <ButtonBase>ButtonBase</ButtonBase>\n            <CustomButtonRoot>Button</CustomButtonRoot>\n            <ButtonUnstyled {...props} component={CustomButtonRoot} >Delete All Completed</ButtonUnstyled> */}\n            <OurButton disabled={props.disabled} onClick={() => toggleModal(!showAlert)}>Delete Completed</OurButton>\n            {/* <Button disabled={props.disabled} variant=\"contained\" onClick={() => toggleModal(!showAlert)} sx={{fontSize: 10}}>Delete Completed</Button> */}\n\n            {showAlert && <Alert onClose={() => toggleModal(false)} onOK={() => handleAlertOK()} cancelText=\"Cancel\" OKText=\"Delete\" >\n                <ModalText>\n                    Are you sure you want to delete all completed tasks?\n                </ModalText>\n            </Alert>}\n        </Container>\n        \n    </>\n  );\n}\n\nexport default DeleteAllCompletedButton;\n\n\n","import * as React from 'react';\n// import Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport OurButton from './OurButton';\n// const options = ['Date Created', 'Priority', 'Name'];\n\nexport default function ViewSelector(props) {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [sortView, setSortView] = React.useState(\"dateCreated\");\n\n  const handleMenuItemClick = (event, view, onSelectView) => {\n    setSortView(view);\n    setOpen(false);\n    onSelectView(view);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup variant=\"contained\" ref={anchorRef} aria-label=\"split button\">\n        <OurButton>{sortView}</OurButton>\n        {/* <Button sx={{width: \"110px\", height: \"30px\", fontSize: \"8px\"}}>{sortView}</Button> */}\n        <OurButton\n          // size=\"small\"\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          // sx={{height: \"30px\"}}\n        >\n          <ArrowDropDownIcon size=\"small\"/>\n        </OurButton>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        \n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n            sx={{width: \"150px\"}}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {props.sortByOptions.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={props.sortByOptions[index] === sortView}\n                      onClick={(event) => handleMenuItemClick(event, props.sortByOptions[index], props.onSelectView)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n","import './Tab.css';\n\nexport function Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}","import { AlignHorizontalLeft, ArrowLeft } from '@mui/icons-material';\nimport {useState} from 'react'\nimport {Tab} from \"./Tab\";\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(\"All\");\n    return (\n        \n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {\n                    props.children.map((child) => \n                        <Tab key={child.key}\n                        label={child.key}\n                        activeTab={activeTab}\n                        onClickTab={() => setActiveTab(child.key)}/>\n                    )\n                }\n            </ol>\n            {\n                \n                props.children.map((child) => \n                    activeTab === child.key && child\n                )\n            }\n        </div>\n    );\n}\n\nexport default TabList;\n","import react from 'react';\nimport TaskList from './TaskList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  height: 80vh;\n`\n\nfunction TasksSortedList(props) {\n    let appContent;\n\n    if (props.loading) {\n        appContent = <h1>Loading</h1>\n    } else if (props.value) {\n        let data = props.value.docs.map((doc) => doc.data()) //props.query.orderBy(props.sortView).get().map((doc) => doc.data());\n        if (props.view == \"Complete\") {\n            data = data.filter((doc) => doc.completed);\n        } else if (props.view == \"Incomplete\") {\n            data = data.filter((doc) => !doc.completed);\n        }\n        \n        appContent = <Container> \n                      <TaskList\n                        data={data} \n                        onDeleteTask={props.handleDeleteTask}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        view={props.view}\n                      /> \n                    </Container>\n\n    } else {\n        appContent = <h1>{props.error.message}</h1>\n    }\n\n\n\n\n\n    return (\n    <>\n        {appContent}\n    </>\n    );\n}\n\nexport default TasksSortedList;\n\n\n\n","// React imports\nimport { useState } from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport styled from 'styled-components';\n\n// Theme\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\n// Firebase imports \nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Local imports\nimport TaskList from './components/TaskList';\nimport NewTask from './components/NewTask';\nimport DeleteAllCompletedButton from './components/DeleteAllCompletedButton';\nimport ViewSelector from './components/ViewSelector';\nimport TabList from './components/ViewTabs/TabList';\nimport TasksSortedList from './components/TasksSortedList';\n\nimport './App.css';\n\n\n\n\n\n\n// Custom Theme\n// const theme = createMuiTheme({\n//   overrides: {\n//     MuiButton: {\n//       root: {\n//         disabled: {\n//           backgroundColor: \"#fefefe\"\n//         }\n//       }\n//     }\n//   }\n// })\n\n\n// Set up Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst collection = \"cherrymar-tasks\";\n\n\n// Create custom styled components\nconst Container = styled.div`\n  height: 90%;\n  width: 90%;\n  margin: 5%;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 5;\n  height: 10vh;\n`;\n\nconst Body = styled.div`\n  height: 75vh;\n  z-index: 1;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  margin: 10px 0;\n`\nconst Title = styled.div`\n  font-size: 10vw;\n  font-weight: 700;\n  text-align: left;\n`;\n\n\nfunction App() {\n  // Hooks for managing view state\n  const [view, setView] = useState(\"dateCreated\");\n\n  let hasCompleted = false\n\n  // Retrieve data from Firebase\n  const query = db.collection(collection).orderBy(view);\n  const [value, loading, error] = useCollection(query);\n\n  const sortByOptions = ['dateCreated', 'priority', 'description'];\n  \n  // Helper functions\n  function handleDeleteTask(taskId) {\n    db.collection(collection).doc(taskId).delete();\n  }\n\n  function handleAddTask(description, priority) {\n    const id = generateUniqueID();\n    db.collection(collection).doc(id).set(\n      {\n        id: id,\n        description: description,\n        completed: false,\n        priority: priority, \n        dateCreated: firebase.firestore.Timestamp.now(),\n      }\n    )\n  }\n\n  function handleTaskFieldChanged(taskId, field, value) {\n    db.collection(collection).doc(taskId).update({[field]: value});\n  }\n\n  async function handleDeleteAllCompletedTasks() {\n    const tasksRef = db.collection(collection);\n    const snapshot = await tasksRef.where('completed', '==', true).get();\n    snapshot.forEach(doc => {\n      db.collection(collection).doc(doc.id).delete();\n    });\n\n    // Just deleted all completed tasks\n    hasCompleted = false;\n  }\n\n\n  let appContent;\n\n  if (loading) {\n      appContent = <h1>Loading</h1>\n  } else if (value) {\n      let data = value.docs.map((doc) => doc.data())\n      hasCompleted = data.filter(task => task.completed).length !== 0\n\n      // appContent = <> \n      //               <TaskList \n      //                 data={data} \n      //                 onDeleteTask={handleDeleteTask}\n      //                 onTaskFieldChanged={handleTaskFieldChanged}\n      //                 view={view}\n      //               /> \n      //               </>\n      // if (hasCompleted) {\n      //   appContent = <> \n      //                 <TaskList \n      //                   data={data} \n      //                   onDeleteTask={handleDeleteTask}\n      //                   onTaskFieldChanged={handleTaskFieldChanged}\n      //                   view={view}\n      //                 /> \n      //                 <DeleteAllCompletedButton disabled={view === 2} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n      //                 </> \n      // }\n  } else {\n      // appContent = <h1>{error.message}</h1>\n  }\n\n\n  return (\n    <>\n        <Container className=\"App\">\n          <Header>\n            <Title>Tasks</Title>\n            <ViewSelector onSelectView={setView} sx={{width: \"100px\"}} sortByOptions={sortByOptions}/>\n          </Header>\n\n          <Body>\n            <NewTask onAddTask={handleAddTask}/>\n          \n            <TabList>\n              <div key=\"All\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"All\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"Done\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Complete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n              <div key=\"In Progress\">\n                <TasksSortedList sortView={view} query={query} loading={loading} value={value} view={\"Incomplete\"} error={error} handleTaskFieldChanged={handleTaskFieldChanged} handleDeleteTask={handleDeleteTask}/>\n              </div>\n            </TabList>\n          </Body>\n          <DeleteAllCompletedButton disabled={!hasCompleted} onDeleteAllCompletedTasks={handleDeleteAllCompletedTasks}/>\n        </Container>  \n    </>\n    \n  );\n}\n\nexport default App;","import App from \"./App\"\n\n\n\nfunction InMemoryApp(props) {\n    return <App initialData={props.initialData}/>\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App initialData={initialData}/> */}\n    <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}